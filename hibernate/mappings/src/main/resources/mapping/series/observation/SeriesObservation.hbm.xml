<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="org.n52.sos.ds.hibernate.entities.series.SeriesObservation" table="Result">
	<subselect>SELECT
		r.Id AS observationId,
		'NUMERIC_OBSERVATION' as discriminator,
		r.observationId AS seriesId,
		r.startTime AS phenomenonTimeStart,
		r.endTime AS phenomenonTimeEnd,
		r.endTime AS resultTime,
		r.Id AS unitId,
		o.processId AS offeringId,
		r.verification AS verification,
		r.validation AS validation,
		r.value as numericvalue
		FROM
		AQD.dbo.Observation o inner join
		AQD.dbo.Result r
		on o.Id=r.observationId
		WHERE o.Id=r.observationId AND r.value IS NOT NULL</subselect>
        <id name="observationId" type="long">
            <!-- <column name="observationid" />
            <generator class="assigned">
            </generator> -->
        </id>
        <discriminator column="discriminator" type="string"/>
        <many-to-one name="series" class="org.n52.sos.ds.hibernate.entities.series.Series" fetch="select" lazy="no-proxy" foreign-key="observationSeriesFk">
           	<column index="obsSeriesIdx" name="seriesId" not-null="true" unique-key="seriesIdentity" />
        </many-to-one>
         <property name="phenomenonTimeStart" type="timestamp" insert="false" update="false">
            <column index="obsPhenTimeStartIdx" name="phenomenonTimeStart" length="29" not-null="true" unique-key="observationIdentity"/>
        </property>
        <property name="phenomenonTimeEnd" type="timestamp" insert="false" update="false">
            <column index="obsPhenTimeEndIdx" name="phenomenonTimeEnd" length="29" not-null="true" unique-key="observationIdentity"/>
        </property>
        <property name="resultTime" type="timestamp" insert="false" update="false">
            <column index="obsResultTimeIdx" name="resultTime" length="29" not-null="true" unique-key="observationIdentity"/>
        </property>
        <property name="identifier" type="string">
           <formula>null</formula>
        </property>
        <many-to-one name="codespace" class="org.n52.sos.ds.hibernate.entities.Codespace" fetch="select" lazy="no-proxy" foreign-key="obsCodespaceIdentifierFk">
            <formula>null</formula>
        </many-to-one>
        <property name="name" type="string">
            <formula>null</formula>
        </property>
        <many-to-one name="codespaceName" class="org.n52.sos.ds.hibernate.entities.Codespace" fetch="select" foreign-key="obsCodespaceNameFk">
           <formula>null</formula>
        </many-to-one>
        <property name="description" type="string">
            <formula>null</formula>
        </property>
		<property name="validTimeStart" type="timestamp">
            <formula>null</formula>
        </property>
        <property name="validTimeEnd" type="timestamp">
            <formula>null</formula>
        </property>
        <property name="deleted" type="org.hibernate.type.TrueFalseType">
           <formula>'F'</formula>
        </property>
        <many-to-one name="unit" class="org.n52.sos.ds.hibernate.entities.Unit" fetch="select" lazy="no-proxy" foreign-key="observationUnitFk">
            <column name="unitId" not-null="false" />
            <!-- <formula>(SELECT DISTINCT s.unit_pkid FROM sensorweb2ways.observation o inner join sensorweb2ways.series s on o.series_pkid=s.pkid WHERE series_pkid = s.pkid)</formula> -->
        </many-to-one>
        <many-to-one name="offerings" class="org.n52.sos.ds.hibernate.entities.Offering" fetch="select" lazy="no-proxy" foreign-key="obshasoffobservationidx">
            <column name="offeringId" not-null="true" />
            <!-- <formula>(SELECT DISTINCT s.unit_pkid FROM sensorweb2ways.observation o inner join sensorweb2ways.series s on o.series_pkid=s.pkid WHERE series_pkid = s.pkid)</formula> -->
        </many-to-one>
		<property name="samplingGeometry" type="org.hibernate.spatial.GeometryType">
             <formula>null</formula>
        </property>
        <property name="validation" type="int">
            <column name="validation" not-null="true" default="-1"/>
        </property>
        <property name="verification" type="int">
            <column name="verification" not-null="true" default="3"/>
        </property>
        <subclass name="org.n52.sos.ds.hibernate.entities.series.SeriesNumericObservation" extends="org.n52.sos.ds.hibernate.entities.series.SeriesObservation" discriminator-value="NUMERIC_OBSERVATION">
			<property name="value" type="big_decimal" column="numericvalue" />
        </subclass>
    </class>
    
    <sql-query name="getLatestObservationTime">
		SELECT DISTINCT Max(r.endTime) as max 
		FROM AQD.dbo.Result r
		inner join AQD.dbo.Observation o on r.observationId=o.Id
		inner join AQD.dbo.Pollutant poll on o.pollutantId=poll.Id
		inner join AQD.dbo.SPProcess pro on o.processId=pro.Id
		inner join AQD.dbo.Inlet i on o.inletId=i.Id
		WHERE pro.inspireId = :procedure 
		AND poll.URI = :observableProperty
		AND i.inspireId = :feature
		AND pro.inspireId = :offering
    </sql-query>
</hibernate-mapping>
