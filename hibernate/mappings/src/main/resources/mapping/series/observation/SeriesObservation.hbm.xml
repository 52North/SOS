<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="org.n52.sos.ds.hibernate.entities.series.SeriesObservation">
        <subselect>
            SELECT
                (observation.id * 1e10) + series.seriesId AS observationId,
                series.seriesid                           AS series,
                observation.date_sistema                  AS phenomenonTimeStart,
                observation.date_sistema                  AS phenomenonTimeEnd,
                observation.date_sistema                  AS resultTime,
                'NUMERIC_OBSERVATION'                     AS discriminator,
                series.unitid                             AS unit,
                observation.value                         AS value
            FROM
                (
                    SELECT id, date_instrument, date_sistema, 'sea_water_temperature'  AS col, 'qualityobsea_ctd01' AS tab, sea_water_temperature AS value FROM qualityobsea_ctd01 WHERE sea_water_temperature != -99999
                    UNION SELECT id, date_instrument, date_sistema, 'conductivity'  AS col, 'qualityobsea_ctd01' AS tab, conductivity AS value FROM qualityobsea_ctd01 WHERE conductivity != -99999
                    UNION SELECT id, date_instrument, date_sistema, 'salinity'  AS col, 'qualityobsea_ctd01' AS tab, salinity AS value FROM qualityobsea_ctd01 WHERE salinity != -99999
                    UNION SELECT id, date_instrument, date_sistema, 'pressure'  AS col, 'qualityobsea_ctd01' AS tab, pressure AS value FROM qualityobsea_ctd01 WHERE pressure != -99999
                    UNION SELECT id, date_instrument, date_sistema, 'sound_velocity'  AS col, 'qualityobsea_ctd01' AS tab, sound_velocity AS value FROM qualityobsea_ctd01 WHERE sound_velocity != -99999
                    UNION SELECT id, date_instrument, date_sistema, 'sea_water_temperature'  AS col, 'qualityobsea_ctd02' AS tab, sea_water_temperature AS value FROM qualityobsea_ctd02 WHERE sea_water_temperature != -99999
                    UNION SELECT id, date_instrument, date_sistema, 'conductivity'  AS col, 'qualityobsea_ctd02' AS tab, conductivity AS value FROM qualityobsea_ctd02 WHERE conductivity != -99999
                    UNION SELECT id, date_instrument, date_sistema, 'salinity'  AS col, 'qualityobsea_ctd02' AS tab, salinity AS value FROM qualityobsea_ctd02 WHERE salinity != -99999
                    UNION SELECT id, date_instrument, date_sistema, 'pressure'  AS col, 'qualityobsea_ctd02' AS tab, pressure AS value FROM qualityobsea_ctd02 WHERE pressure != -99999
                    UNION SELECT id, date_instrument, date_sistema, 'sound_velocity'  AS col, 'qualityobsea_ctd02' AS tab, sound_velocity AS value FROM qualityobsea_ctd02 WHERE sound_velocity != -99999
                ) AS observation
                JOIN
                (
                    SELECT
                        @seriesObservationSeriesId := @seriesObservationSeriesId + 1 AS seriesid,
                        unitid,
                        observablePropertyid,
                        tab,
                        col
                    FROM
                        (
                            SELECT
                                procedure_identifier          AS tab,
                                observableProperty_identifier AS col,
                                observableProperty            AS observablePropertyid ,
                                unit                          AS unitid
                            FROM
                                (
                                    SELECT DISTINCT
                                        procedures.id                   AS `procedure`,
                                        procedures.id                   AS offering,
                                        procedures.identifier           AS procedure_identifier,
                                        observableProperties.id         AS observableProperty,
                                        observableProperties.identifier AS observableProperty_identifier,
                                        CASE observableProperties.identifier
                                            WHEN 'sea_water_temperature' THEN 1
                                            WHEN 'conductivity'          THEN 2
                                            WHEN 'pressure'              THEN 1
                                            WHEN 'salinity'              THEN 2
                                            WHEN 'sound_velocity'        THEN 1
                                            ELSE NULL
                                        END AS unit
                                    FROM
                                        (
                                            SELECT
                                                table_name  AS `procedure`,
                                                column_name AS observableProperty
                                            FROM
                                                information_schema.columns
                                            WHERE
                                                table_schema = (SELECT DATABASE())
                                                AND
                                                data_type = 'double'
                                            ORDER BY
                                                table_name
                                        ) AS `combinations`
                                        JOIN
                                        (
                                            SELECT
                                                @seriesObservationProcedureId := @seriesObservationProcedureId + 1 AS id,
                                                table_name                                                         AS identifier
                                            FROM
                                                (
                                                    SELECT
                                                        table_name
                                                    FROM
                                                        information_schema.tables
                                                    WHERE
                                                        table_schema = (SELECT DATABASE())
                                                    ORDER BY
                                                        table_name
                                                ) AS t1,
                                                (
                                                    SELECT
                                                        @seriesObservationProcedureId := 0
                                                ) AS t2
                                        ) AS procedures
                                        ON
                                            combinations.procedure = procedures.identifier
                                        JOIN
                                        (
                                            SELECT
                                                @seriesObservationOfferingObservablePropertyId := @seriesObservationOfferingObservablePropertyId + 1 AS id,
                                                column_name                                                                                          AS identifier
                                            FROM
                                                (
                                                    SELECT DISTINCT
                                                        column_name
                                                    FROM
                                                        information_schema.columns
                                                    WHERE
                                                        table_schema = (SELECT DATABASE())
                                                        AND
                                                        data_type = 'double'
                                                    ORDER BY
                                                        column_name
                                                ) AS t1,
                                                (
                                                    SELECT
                                                        @seriesObservationOfferingObservablePropertyId := 0
                                                ) AS t2
                                        ) AS observableProperties
                                        ON
                                            combinations.observableProperty = observableProperties.identifier
                                    GROUP BY
                                        combinations.`procedure`,
                                        combinations.observableProperty
                                    ORDER BY
                                        combinations.`procedure`,
                                        combinations.observableProperty
                            ) AS minMaxObservations
                        ) AS t1,
                        (
                            SELECT
                                @seriesObservationSeriesId := 0
                        ) AS t2
                ) AS series
                ON
                    series.tab = observation.tab
                    AND
                    series.col = observation.col
        </subselect>
        <id name="observationId" type="long" />
        <discriminator column="discriminator" type="string" />
        <many-to-one name="series" class="org.n52.sos.ds.hibernate.entities.series.Series" fetch="select" lazy="no-proxy"  update="false" insert="false" />
        <property name="phenomenonTimeStart" type="timestamp" update="false" insert="false"/>
        <property name="phenomenonTimeEnd" type="timestamp" update="false" insert="false"/>
        <property name="resultTime" type="timestamp"  update="false" insert="false"/>
        <property name="identifier" type="string" update="false" insert="false" formula="NULL"/>
        <many-to-one name="codespace" class="org.n52.sos.ds.hibernate.entities.Codespace" fetch="select" lazy="no-proxy" update="false" insert="false" formula="1"/>
        <property name="description" type="string" update="false" insert="false" formula="NULL"/>
        <property name="deleted" type="org.hibernate.type.TrueFalseType" update="false" insert="false" formula="'F'"/>
        <property name="validTimeStart" type="timestamp" update="false" insert="false" formula="NULL"/>
        <property name="validTimeEnd" type="timestamp" update="false" insert="false" formula="NULL"/>
        <property name="samplingGeometry" type="org.hibernate.spatial.GeometryType" update="false" insert="false" formula="NULL"/>
        <many-to-one name="unit" class="org.n52.sos.ds.hibernate.entities.Unit" fetch="select" lazy="no-proxy" update="false" insert="false" />
        <property name="name" type="string" formula="NULL" />
        <many-to-one name="codespaceName" class="org.n52.sos.ds.hibernate.entities.Codespace" fetch="select" formula="1" />
        <set name="offerings">
            <subselect>
                SELECT
                    (observation.id * 1e10) + series.seriesId AS observationId,
                                                                 offeringId
                FROM
                    (
                        SELECT id, 'sea_water_temperature'  AS col, 'qualityobsea_ctd01' AS tab FROM qualityobsea_ctd01 WHERE sea_water_temperature != -99999
                        UNION SELECT id, 'conductivity'  AS col, 'qualityobsea_ctd01' AS tab FROM qualityobsea_ctd01 WHERE conductivity != -99999
                        UNION SELECT id, 'salinity'  AS col, 'qualityobsea_ctd01' AS tab FROM qualityobsea_ctd01 WHERE salinity != -99999
                        UNION SELECT id, 'pressure'  AS col, 'qualityobsea_ctd01' AS tab FROM qualityobsea_ctd01 WHERE pressure != -99999
                        UNION SELECT id, 'sound_velocity'  AS col, 'qualityobsea_ctd01' AS tab FROM qualityobsea_ctd01 WHERE sound_velocity != -99999
                        UNION SELECT id, 'sea_water_temperature'  AS col, 'qualityobsea_ctd02' AS tab FROM qualityobsea_ctd02 WHERE sea_water_temperature != -99999
                        UNION SELECT id, 'conductivity'  AS col, 'qualityobsea_ctd02' AS tab FROM qualityobsea_ctd02 WHERE conductivity != -99999
                        UNION SELECT id, 'salinity'  AS col, 'qualityobsea_ctd02' AS tab FROM qualityobsea_ctd02 WHERE salinity != -99999
                        UNION SELECT id, 'pressure'  AS col, 'qualityobsea_ctd02' AS tab FROM qualityobsea_ctd02 WHERE pressure != -99999
                        UNION SELECT id, 'sound_velocity'  AS col, 'qualityobsea_ctd02' AS tab FROM qualityobsea_ctd02 WHERE sound_velocity != -99999
                    ) AS observation
                    JOIN
                    (
                        SELECT
                            @seriesObservationOfferingSeriesId := @seriesObservationOfferingSeriesId + 1 AS seriesid,
                                                                                                            offeringId,
                                                                                                            tab,
                                                                                                            col
                        FROM
                            (
                                SELECT
                                    procedure_identifier          AS tab,
                                    observableProperty_identifier AS col,
                                    observableProperty            AS observablePropertyid ,
                                    offering                      AS offeringId
                                FROM
                                    (
                                        SELECT DISTINCT
                                            procedures.id                   AS offering,
                                            procedures.identifier           AS procedure_identifier,
                                            observableProperties.id         AS observableProperty,
                                            observableProperties.identifier AS observableProperty_identifier
                                        FROM
                                            (
                                                SELECT
                                                    table_name  AS `procedure`,
                                                    column_name AS observableProperty
                                                FROM
                                                    information_schema.columns
                                                WHERE
                                                    table_schema = (SELECT DATABASE())
                                                    AND
                                                    data_type = 'double'
                                                ORDER BY
                                                    table_name
                                            )
                                            AS combinations
                                            JOIN
                                            (
                                                SELECT
                                                    @seriesObservationOfferingProcedureId := @seriesObservationOfferingProcedureId+1 AS id,
                                                    table_name                                                                       AS identifier
                                                FROM (
                                                    SELECT
                                                        table_name
                                                    FROM
                                                        information_schema.tables
                                                    WHERE
                                                        table_schema = (SELECT DATABASE())
                                                    ORDER BY
                                                        table_name
                                                ) AS t1,
                                                (
                                                    SELECT
                                                        @seriesObservationOfferingProcedureId := 0
                                                ) AS t2
                                            ) AS procedures
                                            ON
                                                combinations.procedure = procedures.identifier
                                            JOIN
                                            (
                                                SELECT
                                                    @seriesObservationOfferingObservablePropertyId := @seriesObservationOfferingObservablePropertyId + 1 AS id,
                                                    column_name                                                                                          AS identifier
                                                FROM
                                                    (
                                                        SELECT DISTINCT
                                                            column_name
                                                        FROM
                                                            information_schema.columns
                                                        WHERE
                                                            table_schema = (SELECT DATABASE())
                                                            AND
                                                            data_type = 'double'
                                                        ORDER BY
                                                            column_name
                                                    ) AS t1,
                                                    (
                                                        SELECT
                                                            @seriesObservationOfferingObservablePropertyId := 0
                                                    ) AS t2
                                            ) AS observableProperties
                                            ON
                                                combinations.observableProperty = observableProperties.identifier
                                        GROUP BY
                                            combinations.`procedure`,
                                            combinations.observableProperty
                                        ORDER BY
                                            combinations.`procedure`,
                                            combinations.observableProperty
                                ) AS minMaxObservations
                            ) AS t1,
                            (
                                SELECT
                                    @seriesObservationOfferingSeriesId := 0
                            ) AS t2
                    ) AS series
                    ON
                        series.tab = observation.tab
                        AND
                        series.col = observation.col
            </subselect>
            <key column="observationId" />
            <many-to-many  column="offeringId" entity-name="org.n52.sos.ds.hibernate.entities.Offering" />
        </set>
		<subclass name="org.n52.sos.ds.hibernate.entities.series.SeriesNumericObservation" extends="org.n52.sos.ds.hibernate.entities.series.SeriesObservation" discriminator-value="NUMERIC_OBSERVATION">
         	<property name="value" type="double" column="value"/>
        </subclass>
    </class>
</hibernate-mapping>
