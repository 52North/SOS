<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname=" SOS" enabled="true">
      <stringProp name="TestPlan.comments">Various test for the  SOS implementation of 52Â°North</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="sos_servlet_path" elementType="Argument">
            <stringProp name="Argument.name">sos_servlet_path</stringProp>
            <stringProp name="Argument.value">sos-4.0/sos</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Configuration (localhost)" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="sos_host" elementType="Argument">
            <stringProp name="Argument.name">sos_host</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sos_port" elementType="Argument">
            <stringProp name="Argument.name">sos_port</stringProp>
            <stringProp name="Argument.value">8090</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="content_type" elementType="Argument">
            <stringProp name="Argument.name">content_type</stringProp>
            <stringProp name="Argument.value">application/xml</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Configuration (anyserver.example.com)" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="sos_host" elementType="Argument">
            <stringProp name="Argument.name">sos_host</stringProp>
            <stringProp name="Argument.value">anyserver.example.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="sos_port" elementType="Argument">
            <stringProp name="Argument.name">sos_port</stringProp>
            <stringProp name="Argument.value">80</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="content_type" elementType="Argument">
            <stringProp name="Argument.name">content_type</stringProp>
            <stringProp name="Argument.value">application/sos+xml</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Set default header" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">${content_type}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">${content_type}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="Set default host and port" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${sos_host}</stringProp>
        <stringProp name="HTTPSampler.port">${sos_port}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="KVP - Request Scenario A" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Schleifen-Controller (Loop Controller)" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1333103506000</longProp>
        <longProp name="ThreadGroup.end_time">1333103506000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="KVP specific settings" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="url_pattern" elementType="Argument">
              <stringProp name="Argument.name">url_pattern</stringProp>
              <stringProp name="Argument.value">/kvp?</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetCapabilities" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}service=SOS&amp;request=GetCapabilities&amp;AcceptVersions=2.0.0</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get sensor description format" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
            <stringProp name="RegexExtractor.refname">sensor_description_format</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;swes:procedureDescriptionFormat&gt;((https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?)&lt;/swes:procedureDescriptionFormat&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">SENSOR_DESCRIPTION_FORMAT_REG_EX_NOT_MATCHED</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get sensor id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
            <stringProp name="RegexExtractor.refname">sensor_id</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;swes:procedure&gt;((https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?)&lt;/swes:procedure&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">SENSOR_ID_REG_EX_NOT_MATCHED</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeSensor" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}service=SOS&amp;version=2.0.0&amp;request=DescribeSensor&amp;procedure=${sensor_id}&amp;procedureDescriptionFormat=${sensor_description_format}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetObservations" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}service=SOS&amp;version=2.0.0&amp;request=GetObservation&amp;procedure=${sensor_id}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Requests all observations of the extracted procedure</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get random feature id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
            <stringProp name="RegexExtractor.refname">feature_id</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;gml:identifier codeSpace=&quot;&quot;&gt;([a-z\d_]*)&lt;/gml:identifier&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">FEATURE_ID_REG_EX_NOT_MATCHED</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetFeatureOfInterest" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}service=SOS&amp;version=2.0.0&amp;request=GetFeatureOfInterest&amp;featureOfInterest=${feature_id}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Response" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="Response Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="POX - Request Scenario A" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Schleifen-Controller (Loop Controller)" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1333103506000</longProp>
        <longProp name="ThreadGroup.end_time">1333103506000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="POX specific settings" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;sos:GetCapabilities service=&quot;SOS&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
    xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
    xmlns:ows=&quot;http://www.opengis.net/ows/1.1&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sosGetCapabilities.xsd&quot;&gt;&#xd;
    &lt;ows:AcceptVersions&gt;&#xd;
        &lt;ows:Version&gt;2.0.0&lt;/ows:Version&gt;&#xd;
    &lt;/ows:AcceptVersions&gt;&#xd;
    &lt;ows:Sections&gt;&#xd;
        &lt;ows:Section&gt;OperationsMetadata&lt;/ows:Section&gt;&#xd;
        &lt;ows:Section&gt;ServiceIdentification&lt;/ows:Section&gt;&#xd;
        &lt;ows:Section&gt;ServiceProvider&lt;/ows:Section&gt;&#xd;
        &lt;ows:Section&gt;FilterCapabilities&lt;/ows:Section&gt;&#xd;
        &lt;ows:Section&gt;Contents&lt;/ows:Section&gt;&#xd;
    &lt;/ows:Sections&gt;&#xd;
&lt;/sos:GetCapabilities&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get sensor description format" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
            <stringProp name="RegexExtractor.refname">sensor_description_format</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;swes:procedureDescriptionFormat&gt;((https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?)&lt;/swes:procedureDescriptionFormat&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">SENSOR_DESCRIPTION_FORMAT_REG_EX_NOT_MATCHED</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get sensor id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
            <stringProp name="RegexExtractor.refname">sensor_id</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;swes:procedure&gt;((https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?)&lt;/swes:procedure&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">SENSOR_ID_REG_EX_NOT_MATCHED</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeSensor" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;swes:DescribeSensor service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
    xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/swes/2.0 http://schemas.opengis.net/swes/2.0/swes.xsd&quot;&gt;&#xd;
    &lt;swes:procedure&gt;${sensor_id}&lt;/swes:procedure&gt;&#xd;
    &lt;swes:procedureDescriptionFormat&gt;${sensor_description_format}&lt;/swes:procedureDescriptionFormat&gt;&#xd;
&lt;/swes:DescribeSensor&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetObservations" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;sos:GetObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
    xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
    xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
    xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
    xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
    xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
    xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
    &lt;sos:procedure&gt;${sensor_id}&lt;/sos:procedure&gt;&#xd;
&lt;/sos:GetObservation&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Requests all observations of the extracted procedure</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get random feature id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
            <stringProp name="RegexExtractor.refname">feature_id</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;gml:identifier codeSpace=&quot;&quot;&gt;([a-z\d_]*)&lt;/gml:identifier&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">FEATURE_ID_REG_EX_NOT_MATCHED</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetFeatureOfInterest" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;sos:GetFeatureOfInterest service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
    xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
    xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
    xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
    xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
    xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
    xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
    &lt;sos:featureOfInterest&gt;${feature_id}&lt;/sos:featureOfInterest&gt;&#xd;
&lt;/sos:GetFeatureOfInterest&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Response" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="Response Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="SOAP - Request Scenario A" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Schleifen-Controller (Loop Controller)" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1333103506000</longProp>
        <longProp name="ThreadGroup.end_time">1333103506000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="SOAP specific settings" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="url_pattern" elementType="Argument">
              <stringProp name="Argument.name">url_pattern</stringProp>
              <stringProp name="Argument.value">/soap</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetCapabilities service=&quot;SOS&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:ows=&quot;http://www.opengis.net/ows/1.1&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sosGetCapabilities.xsd&quot;&gt;&#xd;
            &lt;ows:AcceptVersions&gt;&#xd;
                &lt;ows:Version&gt;2.0.0&lt;/ows:Version&gt;&#xd;
            &lt;/ows:AcceptVersions&gt;&#xd;
            &lt;ows:Sections&gt;&#xd;
                &lt;ows:Section&gt;OperationsMetadata&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;ServiceIdentification&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;ServiceProvider&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;FilterCapabilities&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;Contents&lt;/ows:Section&gt;&#xd;
            &lt;/ows:Sections&gt;&#xd;
        &lt;/sos:GetCapabilities&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get sensor description format" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
            <stringProp name="RegexExtractor.refname">sensor_description_format</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;swes:procedureDescriptionFormat&gt;((https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?)&lt;/swes:procedureDescriptionFormat&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">SENSOR_DESCRIPTION_FORMAT_REG_EX_NOT_MATCHED</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get sensor id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
            <stringProp name="RegexExtractor.refname">sensor_id</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;swes:procedure&gt;((https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?)&lt;/swes:procedure&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">SENSOR_ID_REG_EX_NOT_MATCHED</stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeSensor" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;swes:DescribeSensor service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/swes/2.0 http://schemas.opengis.net/swes/2.0/swes.xsd&quot;&gt;&#xd;
            &lt;swes:procedure&gt;${sensor_id}&lt;/swes:procedure&gt;&#xd;
            &lt;swes:procedureDescriptionFormat&gt;${sensor_description_format}&lt;/swes:procedureDescriptionFormat&gt;&#xd;
        &lt;/swes:DescribeSensor&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetObservations" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
&lt;sos:GetObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
    xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
    xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
    xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
    xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
    xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
    xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
    &lt;sos:procedure&gt;${sensor_id}&lt;/sos:procedure&gt;&#xd;
&lt;/sos:GetObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="TestPlan.comments">Requests all observations of the extracted procedure</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get random feature id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
            <stringProp name="RegexExtractor.refname">feature_id</stringProp>
            <stringProp name="RegexExtractor.regex">&lt;gml:identifier codeSpace=&quot;&quot;&gt;([a-z\d_]*)&lt;/gml:identifier&gt;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default">FEATURE_ID_REG_EX_NOT_MATCHED</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetFeatureOfInterest" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
&lt;sos:GetFeatureOfInterest service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&#xd;
    xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
    xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
    xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
    xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
    xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
    xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
    &lt;sos:featureOfInterest&gt;${feature_id}&lt;/sos:featureOfInterest&gt;&#xd;
&lt;/sos:GetFeatureOfInterest&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Response" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="Response Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="REST - Request Scenario A" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Schleifen-Controller (Loop Controller)" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1333103506000</longProp>
        <longProp name="ThreadGroup.end_time">1333103506000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="REST specific settings" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="url_pattern" elementType="Argument">
              <stringProp name="Argument.name">url_pattern</stringProp>
              <stringProp name="Argument.value">/rest</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="REST specific headers" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/gml+xml</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}/capabilities</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Get random offering id" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">unescaped</stringProp>
            <stringProp name="RegexExtractor.refname">offering_id</stringProp>
            <stringProp name="RegexExtractor.regex">(rest/offerings/)([a-zA-Z0-9-_]*)</stringProp>
            <stringProp name="RegexExtractor.template">$2$</stringProp>
            <stringProp name="RegexExtractor.default">OFFERING_ID_REG_EX_NOT_MATCHED</stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="offerings GET" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}/offerings/${offering_id}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Get sensor URL" enabled="true">
            <stringProp name="XPathExtractor.default">SENSOR_URL_XPATH_NOT_MATCHED</stringProp>
            <stringProp name="XPathExtractor.refname">sensor_url</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">//sosREST:link[@rel=&quot;http://www.opengis.net/sosREST/1.0/sensor-get&quot;]/@href</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">true</boolProp>
          </XPathExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DescribeSensor" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sensor_url}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Get observations URL" enabled="true">
            <stringProp name="XPathExtractor.default">OBSERVATIONS_URL_XPATH_NOT_MATCHED</stringProp>
            <stringProp name="XPathExtractor.refname">observations_url</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">//sosREST:link[@rel=&quot;http://www.opengis.net/sosREST/1.0/observations-get&quot;]/@href</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">true</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Get features URL" enabled="true">
            <stringProp name="XPathExtractor.default">FEATURES_URL_XPATH_NOT_MATCHED</stringProp>
            <stringProp name="XPathExtractor.refname">features_url</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">//sosREST:link[@rel=&quot;http://www.opengis.net/sosREST/1.0/features-get&quot;]/@href</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">true</boolProp>
          </XPathExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetObservations" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${observations_url}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET features for procedure" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${features_url}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="Get feature URL" enabled="true">
            <stringProp name="XPathExtractor.default">FEATURES_URL_XPATH_NOT_MATCHED</stringProp>
            <stringProp name="XPathExtractor.refname">feature_url</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">//sosREST:link[@rel=&quot;http://www.opengis.net/sosREST/1.0/feature-get&quot;]/@href</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">true</boolProp>
          </XPathExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetFeatureOfInterest" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${feature_url}</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Response" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="Response Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Cache Test" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Schleifen-Controller (Loop Controller)" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1333103506000</longProp>
        <longProp name="ThreadGroup.end_time">1333103506000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Using the SOAP binding. Before starting: make sure to set the parameter: xpath.namespace.config to point to &quot;YOUR_PATH/jmeter_namespace_config_xpath.properties&quot;</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="specific settings" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="default_srs_name" elementType="Argument">
              <stringProp name="Argument.name">default_srs_name</stringProp>
              <stringProp name="Argument.value">http://www.opengis.net/def/crs/EPSG/0/4326</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="feature_id" elementType="Argument">
              <stringProp name="Argument.name">feature_id</stringProp>
              <stringProp name="Argument.value">test-feature-identifier</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="feature_type" elementType="Argument">
              <stringProp name="Argument.name">feature_type</stringProp>
              <stringProp name="Argument.value">http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="feature_x" elementType="Argument">
              <stringProp name="Argument.name">feature_x</stringProp>
              <stringProp name="Argument.value">111.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="feature_y" elementType="Argument">
              <stringProp name="Argument.name">feature_y</stringProp>
              <stringProp name="Argument.value">30.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="insert_result_date_1" elementType="Argument">
              <stringProp name="Argument.name">insert_result_date_1</stringProp>
              <stringProp name="Argument.value">1980-08-08T13:37:00.000+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="insert_result_date_2" elementType="Argument">
              <stringProp name="Argument.name">insert_result_date_2</stringProp>
              <stringProp name="Argument.value">1990-09-09T13:37:00.000+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="insert_result_date_3" elementType="Argument">
              <stringProp name="Argument.name">insert_result_date_3</stringProp>
              <stringProp name="Argument.value">2000-10-10T13:37:00.000+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="observable_property_start" elementType="Argument">
              <stringProp name="Argument.name">observable_property_start</stringProp>
              <stringProp name="Argument.value">test-observable-property-</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="observation_type" elementType="Argument">
              <stringProp name="Argument.name">observation_type</stringProp>
              <stringProp name="Argument.value">http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_TruthObservation</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="observation_identifier" elementType="Argument">
              <stringProp name="Argument.name">observation_identifier</stringProp>
              <stringProp name="Argument.value">test-observation-identifier</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="offering_identifier" elementType="Argument">
              <stringProp name="Argument.name">offering_identifier</stringProp>
              <stringProp name="Argument.value">test-offering-identifier</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="offering_name" elementType="Argument">
              <stringProp name="Argument.name">offering_name</stringProp>
              <stringProp name="Argument.value">test-offering-name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="phenomenon_time_start" elementType="Argument">
              <stringProp name="Argument.name">phenomenon_time_start</stringProp>
              <stringProp name="Argument.value">1970-01-01T13:37:00.000+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="phenomenon_time_end" elementType="Argument">
              <stringProp name="Argument.name">phenomenon_time_end</stringProp>
              <stringProp name="Argument.value">2000-12-31T20:11:11.111+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sensor_id" elementType="Argument">
              <stringProp name="Argument.name">sensor_id</stringProp>
              <stringProp name="Argument.value">test-sensor</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sensor_description_format" elementType="Argument">
              <stringProp name="Argument.name">sensor_description_format</stringProp>
              <stringProp name="Argument.value">http://www.opengis.net/sensorML/1.0.1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="template_identifier" elementType="Argument">
              <stringProp name="Argument.name">template_identifier</stringProp>
              <stringProp name="Argument.value">test-result-template-identifier</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="url_pattern" elementType="Argument">
              <stringProp name="Argument.name">url_pattern</stringProp>
              <stringProp name="Argument.value">/soap</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="feature_2_x" elementType="Argument">
              <stringProp name="Argument.name">feature_2_x</stringProp>
              <stringProp name="Argument.value">-108.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="feature_2_y" elementType="Argument">
              <stringProp name="Argument.name">feature_2_y</stringProp>
              <stringProp name="Argument.value">-17.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="phenomenon_time_start_2" elementType="Argument">
              <stringProp name="Argument.name">phenomenon_time_start_2</stringProp>
              <stringProp name="Argument.value">3000-01-01T13:30:00.000+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="phenomenon_time_end_2" elementType="Argument">
              <stringProp name="Argument.name">phenomenon_time_end_2</stringProp>
              <stringProp name="Argument.value">3500-12-31T22:00:00.000+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test BEFORE InsertSensor: GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetCapabilities service=&quot;SOS&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:ows=&quot;http://www.opengis.net/ows/1.1&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sosGetCapabilities.xsd&quot;&gt;&#xd;
            &lt;ows:AcceptVersions&gt;&#xd;
                &lt;ows:Version&gt;2.0.0&lt;/ows:Version&gt;&#xd;
            &lt;/ows:AcceptVersions&gt;&#xd;
            &lt;ows:Sections&gt;&#xd;
                &lt;ows:Section&gt;OperationsMetadata&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;Contents&lt;/ows:Section&gt;&#xd;
            &lt;/ows:Sections&gt;&#xd;
        &lt;/sos:GetCapabilities&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Procedure identifier" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;DescribeSensor&apos;]/ows:Parameter[@name=&apos;procedure&apos;]/ows:AllowedValues/ows:Value[text()=&quot;${sensor_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;ID" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;procedure" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:procedure[text()=&quot;${sensor_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Name" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:name[text()=&quot;${offering_name}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Description Format" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:procedureDescriptionFormat[text()=&quot;${sensor_description_format}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Observable Property" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:observableProperty[contains(text(),&quot;${observable_property_start}&quot;)])=5</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Feature Types &quot;../SF_SamplingPoint&quot;" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:featureOfInterestType[text()=&quot;http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint&quot;])=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Observation Type" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:observationType[text()=&quot;http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_TruthObservation&quot;])=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Result template relations" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&quot;GetResultTemplate&quot;]/ows:Parameter[@name=&quot;offering&quot;]/ows:AllowedValues/ows:Value[text()=&quot;${offering_identifier}&quot;]/../../../ows:Parameter[@name=&quot;observedProperty&quot;]/ows:AllowedValues/ows:Value[text()=&quot;${observable_property_start}1&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InsertSensor" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
	&lt;env:Body&gt;&#xd;
		&lt;swes:InsertSensor service=&quot;SOS&quot; version=&quot;2.0.0&quot; xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot; xmlns:swe=&quot;http://www.opengis.net/swe/1.0.1&quot; xmlns:sml=&quot;http://www.opengis.net/sensorML/1.0.1&quot; xmlns:gml=&quot;http://www.opengis.net/gml&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sosInsertSensor.xsd     http://www.opengis.net/swes/2.0 http://schemas.opengis.net/swes/2.0/swes.xsd&quot;&gt;&#xd;
			&lt;swes:procedureDescriptionFormat&gt;${sensor_description_format}&lt;/swes:procedureDescriptionFormat&gt;&#xd;
			&lt;swes:procedureDescription&gt;&#xd;
				&lt;sml:SensorML version=&quot;1.0.1&quot;&gt;&#xd;
					&lt;sml:member&gt;&#xd;
						&lt;sml:System&gt;&#xd;
							&lt;sml:identification&gt;&#xd;
								&lt;sml:IdentifierList&gt;&#xd;
									&lt;sml:identifier&gt;&#xd;
										&lt;sml:Term definition=&quot;urn:ogc:def:identifier:OGC:uniqueID&quot;&gt;&#xd;
											&lt;sml:value&gt;${sensor_id}&lt;/sml:value&gt;&#xd;
										&lt;/sml:Term&gt;&#xd;
									&lt;/sml:identifier&gt;&#xd;
								&lt;/sml:IdentifierList&gt;&#xd;
							&lt;/sml:identification&gt;&#xd;
							&lt;sml:identification xlink:title=&quot;offerings&quot;&gt;&#xd;
								&lt;sml:IdentifierList&gt;&#xd;
									&lt;sml:identifier name=&quot;${offering_name}&quot;&gt;&#xd;
										&lt;sml:Term definition=&quot;urn:ogc:def:identifier:OGC:offeringID&quot;&gt;&#xd;
											&lt;sml:value&gt;${offering_identifier}&lt;/sml:value&gt;&#xd;
										&lt;/sml:Term&gt;&#xd;
									&lt;/sml:identifier&gt;&#xd;
								&lt;/sml:IdentifierList&gt;&#xd;
							&lt;/sml:identification&gt;&#xd;
							&lt;sml:inputs&gt;&#xd;
								&lt;sml:InputList&gt;&#xd;
									&lt;sml:input name=&quot;&quot;&gt;&#xd;
										&lt;swe:ObservableProperty definition=&quot;${observable_property_start}1&quot;/&gt;&#xd;
									&lt;/sml:input&gt;&#xd;
								&lt;/sml:InputList&gt;&#xd;
							&lt;/sml:inputs&gt;&#xd;
							&lt;sml:outputs&gt;&#xd;
								&lt;sml:OutputList&gt;&#xd;
									&lt;sml:output name=&quot;&quot; xlink:title=&quot;application/rdf+xml&quot;&gt;&#xd;
										&lt;swe:Quantity definition=&quot;${observable_property_start}1&quot;&gt;&#xd;
											&lt;swe:uom code=&quot;NOT_DEFINED&quot;/&gt;&#xd;
										&lt;/swe:Quantity&gt;&#xd;
									&lt;/sml:output&gt;&#xd;
								&lt;/sml:OutputList&gt;&#xd;
							&lt;/sml:outputs&gt;&#xd;
						&lt;/sml:System&gt;&#xd;
					&lt;/sml:member&gt;&#xd;
				&lt;/sml:SensorML&gt;&#xd;
			&lt;/swes:procedureDescription&gt;&#xd;
			&lt;swes:observableProperty&gt;${observable_property_start}1&lt;/swes:observableProperty&gt;&#xd;
			&lt;swes:observableProperty&gt;${observable_property_start}2&lt;/swes:observableProperty&gt;&#xd;
			&lt;swes:observableProperty&gt;${observable_property_start}3&lt;/swes:observableProperty&gt;&#xd;
			&lt;swes:observableProperty&gt;${observable_property_start}4&lt;/swes:observableProperty&gt;&#xd;
			&lt;swes:observableProperty&gt;${observable_property_start}5&lt;/swes:observableProperty&gt;&#xd;
			&lt;swes:metadata&gt;&#xd;
				&lt;sos:SosInsertionMetadata&gt;&#xd;
					&lt;sos:observationType&gt;${observation_type}&lt;/sos:observationType&gt;&#xd;
					&lt;sos:featureOfInterestType&gt;${feature_type}&lt;/sos:featureOfInterestType&gt;&#xd;
				&lt;/sos:SosInsertionMetadata&gt;&#xd;
			&lt;/swes:metadata&gt;&#xd;
		&lt;/swes:InsertSensor&gt;&#xd;
	&lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: response-&gt;assigned sensor id" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//swes:assignedProcedure[text()=&quot;${sensor_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: response-&gt;assigned offering id" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//swes:assignedOffering[text()=&quot;${offering_identifier}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertSensor: GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetCapabilities service=&quot;SOS&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:ows=&quot;http://www.opengis.net/ows/1.1&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sosGetCapabilities.xsd&quot;&gt;&#xd;
            &lt;ows:AcceptVersions&gt;&#xd;
                &lt;ows:Version&gt;2.0.0&lt;/ows:Version&gt;&#xd;
            &lt;/ows:AcceptVersions&gt;&#xd;
            &lt;ows:Sections&gt;&#xd;
                &lt;ows:Section&gt;OperationsMetadata&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;Contents&lt;/ows:Section&gt;&#xd;
            &lt;/ows:Sections&gt;&#xd;
        &lt;/sos:GetCapabilities&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Procedure identifier" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;DescribeSensor&apos;]/ows:Parameter[@name=&apos;procedure&apos;]/ows:AllowedValues/ows:Value[text()=&quot;${sensor_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;ID" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;procedure" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:procedure[text()=&quot;${sensor_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Name" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:name[text()=&quot;${offering_name}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Description Format" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:procedureDescriptionFormat[text()=&quot;${sensor_description_format}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Observable Property" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:observableProperty[contains(text(),&quot;${observable_property_start}&quot;)])=5</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Feature Types &quot;../SF_SamplingPoint&quot;" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:featureOfInterestType[text()=&quot;http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint&quot;])=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Observation Type" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:observationType[text()=&quot;http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_TruthObservation&quot;])=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test BEFORE InsertObservation: GetFeatureOfInterest" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetFeatureOfInterest service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:featureOfInterest&gt;${feature_id}&lt;/sos:featureOfInterest&gt;&#xd;
        &lt;/sos:GetFeatureOfInterest&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;OwsExceptionReport-&gt;feature with id not found" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Exception[@locator=&quot;featureOfInterest&quot; and @exceptionCode=&quot;InvalidParameterValue&quot;]/ows:ExceptionText[text()=&quot;The value &apos;${feature_id}&apos; of the parameter &apos;featureOfInterest&apos; is invalid&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test BEFORE InsertObseration: GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetCapabilities service=&quot;SOS&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:ows=&quot;http://www.opengis.net/ows/1.1&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sosGetCapabilities.xsd&quot;&gt;&#xd;
            &lt;ows:AcceptVersions&gt;&#xd;
                &lt;ows:Version&gt;2.0.0&lt;/ows:Version&gt;&#xd;
            &lt;/ows:AcceptVersions&gt;&#xd;
            &lt;ows:Sections&gt;&#xd;
                &lt;ows:Section&gt;OperationsMetadata&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;Contents&lt;/ows:Section&gt;&#xd;
            &lt;/ows:Sections&gt;&#xd;
        &lt;/sos:GetCapabilities&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Temporal BBox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;temporalFilter&apos;]/ows:AllowedValues/ows:Range/ows:MinimumValue[text()=&quot;${phenomenon_time_start}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Temporal BBox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;temporalFilter&apos;]/ows:AllowedValues/ows:Range/ows:MaximumValue[text()=&quot;${phenomenon_time_end}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Spatial BBox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;spatialFilter&apos;]/ows:AllowedValues/ows:Range/ows:MaximumValue[text()=&quot;${feature_y} ${feature_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Spatial BBox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;spatialFilter&apos;]/ows:AllowedValues/ows:Range/ows:MinimumValue[text()=&quot;${feature_y} ${feature_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;bbox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:observedArea/gml:Envelope[@srsName=&quot;${default_srs_name}&quot;]/gml:lowerCorner[text()=&quot;${feature_y} ${feature_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;bbox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:observedArea/gml:Envelope[@srsName=&quot;${default_srs_name}&quot;]/gml:upperCorner[text()=&quot;${feature_y} ${feature_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;temporal bbox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:phenomenonTime/gml:TimePeriod/gml:beginPosition[text()=&quot;${phenomenon_time_start}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname=" XPath: Offering-&gt;temporal bbox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:phenomenonTime/gml:TimePeriod/gml:endPosition[text()=&quot;${phenomenon_time_end}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: observation-identifier?" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservationById&apos;]/ows:Parameter[@name=&apos;observation&apos;]/ows:AllowedValues/ows:Value[text()=&quot;${observation_identifier}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test BEFORE InsertObservation: GetObservation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:procedure&gt;${sensor_id}&lt;/sos:procedure&gt;&#xd;
            &lt;sos:featureOfInterest&gt;${feature_id}&lt;/sos:featureOfInterest&gt;&#xd;
        &lt;/sos:GetObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;observation received with observation identifier, procedure, and correct feature" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:observationData/om:OM_Observation/gml:identifier[text()=&quot;${observation_identifier}&quot;]/../om:procedure[@xlink:href=&quot;${sensor_id}&quot;]/../om:featureOfInterest/sams:SF_SpatialSamplingFeature/gml:identifier[text()=&quot;${feature_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InsertObservation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:InsertObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:sml=&quot;http://www.opengis.net/sensorML/1.0.1&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:om=&quot;http://www.opengis.net/om/2.0&quot;&#xd;
            xmlns:sams=&quot;http://www.opengis.net/samplingSpatial/2.0&quot;&#xd;
            xmlns:sf=&quot;http://www.opengis.net/sampling/2.0&quot;&#xd;
            xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:offering&gt;${offering_identifier}&lt;/sos:offering&gt;&#xd;
            &lt;sos:observation&gt;&#xd;
                &lt;om:OM_Observation gml:id=&quot;o1&quot;&gt;&#xd;
		    &lt;gml:identifier codeSpace=&quot;org.n52.sos.integration.test&quot;&gt;${observation_identifier}&lt;/gml:identifier&gt;&#xd;
                    &lt;om:type xlink:href=&quot;http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_TruthObservation&quot;/&gt;&#xd;
                    &lt;om:phenomenonTime&gt;&#xd;
                        &lt;gml:TimePeriod gml:id=&quot;phenomenonTime&quot;&gt;&#xd;
				&lt;gml:beginPosition&gt;${phenomenon_time_start}&lt;/gml:beginPosition&gt;&#xd;
				&lt;gml:endPosition&gt;${phenomenon_time_end}&lt;/gml:endPosition&gt;&#xd;
			&lt;/gml:TimePeriod&gt;&#xd;
                    &lt;/om:phenomenonTime&gt;&#xd;
                    &lt;om:resultTime&gt;&#xd;
			&lt;gml:TimeInstant gml:id=&quot;resultTime&quot;&gt;&#xd;
                            &lt;gml:timePosition&gt;${phenomenon_time_end}&lt;/gml:timePosition&gt;&#xd;
                        &lt;/gml:TimeInstant&gt;&#xd;
		    &lt;/om:resultTime&gt;&#xd;
                    &lt;om:procedure xlink:href=&quot;${sensor_id}&quot;/&gt;&#xd;
                    &lt;om:observedProperty xlink:href=&quot;${observable_property_start}1&quot;/&gt;&#xd;
                    &lt;om:featureOfInterest&gt;&#xd;
                        &lt;sams:SF_SpatialSamplingFeature gml:id=&quot;${feature_id}&quot;&gt;&#xd;
                            &lt;gml:identifier codeSpace=&quot;&quot;&gt;${feature_id}&lt;/gml:identifier&gt;&#xd;
                            &lt;sf:type xlink:href=&quot;http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint&quot;/&gt;&#xd;
                            &lt;sf:sampledFeature xlink:href=&quot;${feature_id}&quot;/&gt;&#xd;
                            &lt;sams:shape&gt;&#xd;
                                &lt;gml:Point gml:id=&quot;${feature_id}&quot;&gt;&#xd;
                                    &lt;gml:pos srsName=&quot;http://www.opengis.net/def/crs/EPSG/0/4326&quot;&gt;${feature_y} ${feature_x}&lt;/gml:pos&gt;&#xd;
                                &lt;/gml:Point&gt;&#xd;
                            &lt;/sams:shape&gt;&#xd;
                        &lt;/sams:SF_SpatialSamplingFeature&gt;&#xd;
                    &lt;/om:featureOfInterest&gt;&#xd;
                    &lt;om:result xsi:type=&quot;xs:boolean&quot;&gt;true&lt;/om:result&gt;&#xd;
                &lt;/om:OM_Observation&gt;&#xd;
            &lt;/sos:observation&gt;&#xd;
        &lt;/sos:InsertObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Is InsertObservationResponse?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:InsertObservationResponse</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertObseration: GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetCapabilities service=&quot;SOS&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:ows=&quot;http://www.opengis.net/ows/1.1&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sosGetCapabilities.xsd&quot;&gt;&#xd;
            &lt;ows:AcceptVersions&gt;&#xd;
                &lt;ows:Version&gt;2.0.0&lt;/ows:Version&gt;&#xd;
            &lt;/ows:AcceptVersions&gt;&#xd;
            &lt;ows:Sections&gt;&#xd;
                &lt;ows:Section&gt;OperationsMetadata&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;Contents&lt;/ows:Section&gt;&#xd;
            &lt;/ows:Sections&gt;&#xd;
        &lt;/sos:GetCapabilities&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Temporal BBox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;temporalFilter&apos;]/ows:AllowedValues/ows:Range/ows:MinimumValue[text()=&quot;${phenomenon_time_start}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Temporal BBox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;temporalFilter&apos;]/ows:AllowedValues/ows:Range/ows:MaximumValue[text()=&quot;${phenomenon_time_end}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Spatial BBox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;spatialFilter&apos;]/ows:AllowedValues/ows:Range/ows:MaximumValue[text()=&quot;${feature_y} ${feature_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Spatial BBox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;spatialFilter&apos;]/ows:AllowedValues/ows:Range/ows:MinimumValue[text()=&quot;${feature_y} ${feature_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;spatial bbox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:observedArea/gml:Envelope[@srsName=&quot;${default_srs_name}&quot;]/gml:lowerCorner[text()=&quot;${feature_y} ${feature_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;spatial bbox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:observedArea/gml:Envelope[@srsName=&quot;${default_srs_name}&quot;]/gml:upperCorner[text()=&quot;${feature_y} ${feature_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;temporal bbox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:phenomenonTime/gml:TimePeriod/gml:beginPosition[text()=&quot;${phenomenon_time_start}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname=" XPath: Offering-&gt;temporal bbox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:phenomenonTime/gml:TimePeriod/gml:endPosition[text()=&quot;${phenomenon_time_end}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: observation-identifier?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservationById&apos;]/ows:Parameter[@name=&apos;observation&apos;]/ows:AllowedValues/ows:Value[text()=&quot;${observation_identifier}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertObservation: GetFeatureOfInterest" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetFeatureOfInterest service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:featureOfInterest&gt;${feature_id}&lt;/sos:featureOfInterest&gt;&#xd;
        &lt;/sos:GetFeatureOfInterest&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;Feature id and coordinates" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//gml:identifier[@codeSpace=&quot;&quot; and text()=&quot;${feature_id}&quot;]/../sams:shape/gml:Point/gml:pos[@srsName=&quot;${default_srs_name}&quot; and text()=&quot;${feature_y} ${feature_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertObservation: GetObservation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:procedure&gt;${sensor_id}&lt;/sos:procedure&gt;&#xd;
            &lt;sos:featureOfInterest&gt;${feature_id}&lt;/sos:featureOfInterest&gt;&#xd;
        &lt;/sos:GetObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;observation received with observation identifier, procedure, and correct feature" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:observationData/om:OM_Observation/gml:identifier[text()=&quot;${observation_identifier}&quot;]/../om:procedure[@xlink:href=&quot;${sensor_id}&quot;]/../om:featureOfInterest/sams:SF_SpatialSamplingFeature/gml:identifier[text()=&quot;${feature_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test BEFORE InsertResultTemplate: GetResultTemplate" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetResultTemplate service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:offering&gt;${offering_identifier}&lt;/sos:offering&gt;&#xd;
            &lt;sos:observedProperty&gt;${observable_property_start}1&lt;/sos:observedProperty&gt;&#xd;
        &lt;/sos:GetResultTemplate&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;error with excepted message?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Exception[@exceptionCode=&quot;InvalidPropertyOfferingCombination&quot;]/ows:ExceptionText[text()=&quot;For the requested combination offering (${offering_identifier}) and observedProperty (${observable_property_start}1) no SWE Common 2.0 encoded result values are available!&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
            <stringProp name="TestPlan.comments">Looking for error message stating that offering - property combination is not allowed</stringProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InsertResultTemplate" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:InsertResultTemplate service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:sml=&quot;http://www.opengis.net/sensorML/1.0.1&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:om=&quot;http://www.opengis.net/om/2.0&quot;&#xd;
            xmlns:sams=&quot;http://www.opengis.net/samplingSpatial/2.0&quot;&#xd;
            xmlns:sf=&quot;http://www.opengis.net/sampling/2.0&quot;&#xd;
            xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:proposedTemplate&gt;&#xd;
                &lt;sos:ResultTemplate&gt;&#xd;
                    &lt;swes:identifier&gt;${template_identifier}&lt;/swes:identifier&gt;&#xd;
                    &lt;sos:offering&gt;${offering_identifier}&lt;/sos:offering&gt;&#xd;
                    &lt;sos:observationTemplate&gt;&#xd;
                        &lt;om:OM_Observation gml:id=&quot;sensor2obsTemplate&quot;&gt;&#xd;
                            &lt;om:type xlink:href=&quot;${observation_type}&quot;/&gt;&#xd;
                            &lt;om:phenomenonTime nilReason=&quot;template&quot;/&gt;&#xd;
                            &lt;om:resultTime nilReason=&quot;template&quot;/&gt;&#xd;
                            &lt;om:procedure xlink:href=&quot;${sensor_id}&quot;/&gt;&#xd;
                            &lt;om:observedProperty xlink:href=&quot;${observable_property_start}1&quot;/&gt;&#xd;
                            &lt;om:featureOfInterest xlink:href=&quot;${feature_id}&quot; /&gt;&#xd;
                            &lt;om:result/&gt;&#xd;
                        &lt;/om:OM_Observation&gt;&#xd;
                    &lt;/sos:observationTemplate&gt;&#xd;
                    &lt;sos:resultStructure&gt;&#xd;
                        &lt;swe:DataRecord&gt;&#xd;
                            &lt;swe:field name=&quot;phenomenonTime&quot;&gt;&#xd;
                                &lt;swe:Time definition=&quot;http://www.opengis.net/def/property/OGC/0/PhenomenonTime&quot;&gt;&#xd;
                                    &lt;swe:uom xlink:href=&quot;http://www.opengis.net/def/uom/ISO-8601/0/Gregorian&quot;/&gt;&#xd;
                                &lt;/swe:Time&gt;&#xd;
                            &lt;/swe:field&gt;&#xd;
                            &lt;swe:field name=&quot;${observable_property_start}1&quot;&gt;&#xd;
								&lt;swe:Boolean definition=&quot;${observable_property_start}1&quot; /&gt;&#xd;
                            &lt;/swe:field&gt;&#xd;
                        &lt;/swe:DataRecord&gt;&#xd;
                    &lt;/sos:resultStructure&gt;&#xd;
                    &lt;sos:resultEncoding&gt;&#xd;
                        &lt;swe:TextEncoding tokenSeparator=&quot;#&quot; blockSeparator=&quot;@&quot;/&gt;&#xd;
                    &lt;/sos:resultEncoding&gt;&#xd;
                &lt;/sos:ResultTemplate&gt;&#xd;
            &lt;/sos:proposedTemplate&gt;&#xd;
        &lt;/sos:InsertResultTemplate&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;observation template accepted?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:acceptedTemplate[text()=&quot;${template_identifier}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertResultTemplate: GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetCapabilities service=&quot;SOS&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:ows=&quot;http://www.opengis.net/ows/1.1&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sosGetCapabilities.xsd&quot;&gt;&#xd;
            &lt;ows:AcceptVersions&gt;&#xd;
                &lt;ows:Version&gt;2.0.0&lt;/ows:Version&gt;&#xd;
            &lt;/ows:AcceptVersions&gt;&#xd;
            &lt;ows:Sections&gt;&#xd;
                &lt;ows:Section&gt;OperationsMetadata&lt;/ows:Section&gt;&#xd;
            &lt;/ows:Sections&gt;&#xd;
        &lt;/sos:GetCapabilities&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Result template relations" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&quot;GetResultTemplate&quot;]/ows:Parameter[@name=&quot;offering&quot;]/ows:AllowedValues/ows:Value[text()=&quot;${offering_identifier}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertResultTemplate: GetResultTemplate" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetResultTemplate service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:offering&gt;${offering_identifier}&lt;/sos:offering&gt;&#xd;
            &lt;sos:observedProperty&gt;${observable_property_start}1&lt;/sos:observedProperty&gt;&#xd;
        &lt;/sos:GetResultTemplate&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;result structure" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:GetResultTemplateResponse/sos:resultStructure/swe:DataRecord/swe:field[@name=&quot;phenomenonTime&quot;]/swe:Time[@definition=&quot;http://www.opengis.net/def/property/OGC/0/PhenomenonTime&quot;]/swe:uom[@xlink:href=&quot;http://www.opengis.net/def/uom/ISO-8601/0/Gregorian&quot;]/../../../swe:field[@name=&quot;${observable_property_start}1&quot;]/swe:Boolean[@definition=&quot;${observable_property_start}1&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
            <stringProp name="TestPlan.comments">Result structure should contain two fields: one phenomenonTime swe:Time and one swe:Boolean</stringProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test BEFORE InsertResult: GetObservation 1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:procedure&gt;${sensor_id}&lt;/sos:procedure&gt;&#xd;
            &lt;sos:offering&gt;${offering_identifier}&lt;/sos:offering&gt;&#xd;
            &lt;sos:observedProperty&gt;${observable_property_start}1&lt;/sos:observedProperty&gt;&#xd;
	    &lt;sos:temporalFilter&gt;&#xd;
              &lt;fes:TEquals&gt;&#xd;
                &lt;fes:ValueReference&gt;phenomenonTime&lt;/fes:ValueReference&gt;&#xd;
                &lt;gml:TimeInstant gml:id=&quot;ti_1&quot;&gt;&#xd;
                  &lt;gml:timePosition&gt;${insert_result_date_1}&lt;/gml:timePosition&gt;&#xd;
                &lt;/gml:TimeInstant&gt;&#xd;
              &lt;/fes:TEquals&gt;&#xd;
            &lt;/sos:temporalFilter&gt;&#xd;
        &lt;/sos:GetObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;correct response" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:GetObservationResponse)=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;empty observation collection" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:observationData</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test BEFORE InsertResult: GetObservation 3" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:procedure&gt;${sensor_id}&lt;/sos:procedure&gt;&#xd;
            &lt;sos:offering&gt;${offering_identifier}&lt;/sos:offering&gt;&#xd;
            &lt;sos:observedProperty&gt;${observable_property_start}1&lt;/sos:observedProperty&gt;&#xd;
	    &lt;sos:temporalFilter&gt;&#xd;
              &lt;fes:TEquals&gt;&#xd;
                &lt;fes:ValueReference&gt;phenomenonTime&lt;/fes:ValueReference&gt;&#xd;
                &lt;gml:TimeInstant gml:id=&quot;ti_1&quot;&gt;&#xd;
                  &lt;gml:timePosition&gt;${insert_result_date_3}&lt;/gml:timePosition&gt;&#xd;
                &lt;/gml:TimeInstant&gt;&#xd;
              &lt;/fes:TEquals&gt;&#xd;
            &lt;/sos:temporalFilter&gt;&#xd;
        &lt;/sos:GetObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;correct response" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:GetObservationResponse)=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;empty observation collection" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:observationData</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test BEFORE InsertResult: GetObservation 2" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:procedure&gt;${sensor_id}&lt;/sos:procedure&gt;&#xd;
            &lt;sos:offering&gt;${offering_identifier}&lt;/sos:offering&gt;&#xd;
            &lt;sos:observedProperty&gt;${observable_property_start}1&lt;/sos:observedProperty&gt;&#xd;
	    &lt;sos:temporalFilter&gt;&#xd;
              &lt;fes:TEquals&gt;&#xd;
                &lt;fes:ValueReference&gt;phenomenonTime&lt;/fes:ValueReference&gt;&#xd;
                &lt;gml:TimeInstant gml:id=&quot;ti_1&quot;&gt;&#xd;
                  &lt;gml:timePosition&gt;${insert_result_date_2}&lt;/gml:timePosition&gt;&#xd;
                &lt;/gml:TimeInstant&gt;&#xd;
              &lt;/fes:TEquals&gt;&#xd;
            &lt;/sos:temporalFilter&gt;&#xd;
        &lt;/sos:GetObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;correct response" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:GetObservationResponse)=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;empty observation collection" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:observationData</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InsertResult" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:InsertResult service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:template&gt;${template_identifier}&lt;/sos:template&gt;&#xd;
            &lt;sos:resultValues&gt;${insert_result_date_1}#true@${insert_result_date_2}#false@${insert_result_date_3}#true&lt;/sos:resultValues&gt;&#xd;
        &lt;/sos:InsertResult&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;one element" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:InsertResultResponse)=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
            <stringProp name="TestPlan.comments">Result should contain one element of sos:InsertResultResponse</stringProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertResult: GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetCapabilities service=&quot;SOS&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:ows=&quot;http://www.opengis.net/ows/1.1&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sosGetCapabilities.xsd&quot;&gt;&#xd;
            &lt;ows:AcceptVersions&gt;&#xd;
                &lt;ows:Version&gt;2.0.0&lt;/ows:Version&gt;&#xd;
            &lt;/ows:AcceptVersions&gt;&#xd;
            &lt;ows:Sections&gt;&#xd;
                &lt;ows:Section&gt;OperationsMetadata&lt;/ows:Section&gt;&#xd;
            &lt;/ows:Sections&gt;&#xd;
        &lt;/sos:GetCapabilities&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Result template relations" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&quot;GetResultTemplate&quot;]/ows:Parameter[@name=&quot;offering&quot;]/ows:AllowedValues/ows:Value[text()=&quot;${offering_identifier}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertResult: GetObservation 1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:procedure&gt;${sensor_id}&lt;/sos:procedure&gt;&#xd;
            &lt;sos:offering&gt;${offering_identifier}&lt;/sos:offering&gt;&#xd;
            &lt;sos:observedProperty&gt;${observable_property_start}1&lt;/sos:observedProperty&gt;&#xd;
	    &lt;sos:temporalFilter&gt;&#xd;
              &lt;fes:TEquals&gt;&#xd;
                &lt;fes:ValueReference&gt;phenomenonTime&lt;/fes:ValueReference&gt;&#xd;
                &lt;gml:TimeInstant gml:id=&quot;ti_1&quot;&gt;&#xd;
                  &lt;gml:timePosition&gt;${insert_result_date_1}&lt;/gml:timePosition&gt;&#xd;
                &lt;/gml:TimeInstant&gt;&#xd;
              &lt;/fes:TEquals&gt;&#xd;
            &lt;/sos:temporalFilter&gt;&#xd;
        &lt;/sos:GetObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;one observation in collection" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:observationData/om:OM_Observation)=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertResult: GetObservation 2" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:procedure&gt;${sensor_id}&lt;/sos:procedure&gt;&#xd;
            &lt;sos:offering&gt;${offering_identifier}&lt;/sos:offering&gt;&#xd;
            &lt;sos:observedProperty&gt;${observable_property_start}1&lt;/sos:observedProperty&gt;&#xd;
	    &lt;sos:temporalFilter&gt;&#xd;
              &lt;fes:TEquals&gt;&#xd;
                &lt;fes:ValueReference&gt;phenomenonTime&lt;/fes:ValueReference&gt;&#xd;
                &lt;gml:TimeInstant gml:id=&quot;ti_1&quot;&gt;&#xd;
                  &lt;gml:timePosition&gt;${insert_result_date_2}&lt;/gml:timePosition&gt;&#xd;
                &lt;/gml:TimeInstant&gt;&#xd;
              &lt;/fes:TEquals&gt;&#xd;
            &lt;/sos:temporalFilter&gt;&#xd;
        &lt;/sos:GetObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;one observation in collection" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:observationData/om:OM_Observation)=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertResult: GetObservation 3" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:procedure&gt;${sensor_id}&lt;/sos:procedure&gt;&#xd;
            &lt;sos:offering&gt;${offering_identifier}&lt;/sos:offering&gt;&#xd;
            &lt;sos:observedProperty&gt;${observable_property_start}1&lt;/sos:observedProperty&gt;&#xd;
	    &lt;sos:temporalFilter&gt;&#xd;
              &lt;fes:TEquals&gt;&#xd;
                &lt;fes:ValueReference&gt;phenomenonTime&lt;/fes:ValueReference&gt;&#xd;
                &lt;gml:TimeInstant gml:id=&quot;ti_1&quot;&gt;&#xd;
                  &lt;gml:timePosition&gt;${insert_result_date_3}&lt;/gml:timePosition&gt;&#xd;
                &lt;/gml:TimeInstant&gt;&#xd;
              &lt;/fes:TEquals&gt;&#xd;
            &lt;/sos:temporalFilter&gt;&#xd;
        &lt;/sos:GetObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;one observation in collection" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">count(//sos:observationData/om:OM_Observation)=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InsertSensor &quot;-2&quot;" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
	&lt;env:Body&gt;&#xd;
		&lt;swes:InsertSensor service=&quot;SOS&quot; version=&quot;2.0.0&quot; xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot; xmlns:swe=&quot;http://www.opengis.net/swe/1.0.1&quot; xmlns:sml=&quot;http://www.opengis.net/sensorML/1.0.1&quot; xmlns:gml=&quot;http://www.opengis.net/gml&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sosInsertSensor.xsd     http://www.opengis.net/swes/2.0 http://schemas.opengis.net/swes/2.0/swes.xsd&quot;&gt;&#xd;
			&lt;swes:procedureDescriptionFormat&gt;${sensor_description_format}&lt;/swes:procedureDescriptionFormat&gt;&#xd;
			&lt;swes:procedureDescription&gt;&#xd;
				&lt;sml:SensorML version=&quot;1.0.1&quot;&gt;&#xd;
					&lt;sml:member&gt;&#xd;
						&lt;sml:System&gt;&#xd;
							&lt;sml:identification&gt;&#xd;
								&lt;sml:IdentifierList&gt;&#xd;
									&lt;sml:identifier&gt;&#xd;
										&lt;sml:Term definition=&quot;urn:ogc:def:identifier:OGC:uniqueID&quot;&gt;&#xd;
											&lt;sml:value&gt;${sensor_id}-2&lt;/sml:value&gt;&#xd;
										&lt;/sml:Term&gt;&#xd;
									&lt;/sml:identifier&gt;&#xd;
								&lt;/sml:IdentifierList&gt;&#xd;
							&lt;/sml:identification&gt;&#xd;
							&lt;sml:identification xlink:title=&quot;offerings&quot;&gt;&#xd;
								&lt;sml:IdentifierList&gt;&#xd;
									&lt;sml:identifier name=&quot;${offering_name}-2&quot;&gt;&#xd;
										&lt;sml:Term definition=&quot;urn:ogc:def:identifier:OGC:offeringID&quot;&gt;&#xd;
											&lt;sml:value&gt;${offering_identifier}-2&lt;/sml:value&gt;&#xd;
										&lt;/sml:Term&gt;&#xd;
									&lt;/sml:identifier&gt;&#xd;
								&lt;/sml:IdentifierList&gt;&#xd;
							&lt;/sml:identification&gt;&#xd;
							&lt;sml:inputs&gt;&#xd;
								&lt;sml:InputList&gt;&#xd;
									&lt;sml:input name=&quot;&quot;&gt;&#xd;
										&lt;swe:ObservableProperty definition=&quot;${observable_property_start}1-2&quot;/&gt;&#xd;
									&lt;/sml:input&gt;&#xd;
								&lt;/sml:InputList&gt;&#xd;
							&lt;/sml:inputs&gt;&#xd;
							&lt;sml:outputs&gt;&#xd;
								&lt;sml:OutputList&gt;&#xd;
									&lt;sml:output name=&quot;&quot; xlink:title=&quot;application/rdf+xml&quot;&gt;&#xd;
										&lt;swe:Quantity definition=&quot;${observable_property_start}1-2&quot;&gt;&#xd;
											&lt;swe:uom code=&quot;NOT_DEFINED&quot;/&gt;&#xd;
										&lt;/swe:Quantity&gt;&#xd;
									&lt;/sml:output&gt;&#xd;
								&lt;/sml:OutputList&gt;&#xd;
							&lt;/sml:outputs&gt;&#xd;
						&lt;/sml:System&gt;&#xd;
					&lt;/sml:member&gt;&#xd;
				&lt;/sml:SensorML&gt;&#xd;
			&lt;/swes:procedureDescription&gt;&#xd;
			&lt;swes:observableProperty&gt;${observable_property_start}1-2&lt;/swes:observableProperty&gt;&#xd;
			&lt;swes:observableProperty&gt;${observable_property_start}2-2&lt;/swes:observableProperty&gt;&#xd;
			&lt;swes:observableProperty&gt;${observable_property_start}3-2&lt;/swes:observableProperty&gt;&#xd;
			&lt;swes:observableProperty&gt;${observable_property_start}4-2&lt;/swes:observableProperty&gt;&#xd;
			&lt;swes:observableProperty&gt;${observable_property_start}5-2&lt;/swes:observableProperty&gt;&#xd;
			&lt;swes:metadata&gt;&#xd;
				&lt;sos:SosInsertionMetadata&gt;&#xd;
					&lt;sos:observationType&gt;${observation_type}&lt;/sos:observationType&gt;&#xd;
					&lt;sos:featureOfInterestType&gt;${feature_type}&lt;/sos:featureOfInterestType&gt;&#xd;
				&lt;/sos:SosInsertionMetadata&gt;&#xd;
			&lt;/swes:metadata&gt;&#xd;
		&lt;/swes:InsertSensor&gt;&#xd;
	&lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: response-&gt;assigned sensor id" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//swes:assignedProcedure[text()=&quot;${sensor_id}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: response-&gt;assigned offering id" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//swes:assignedOffering[text()=&quot;${offering_identifier}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertSenso &quot;-2&quot;: GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetCapabilities service=&quot;SOS&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:ows=&quot;http://www.opengis.net/ows/1.1&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sosGetCapabilities.xsd&quot;&gt;&#xd;
            &lt;ows:AcceptVersions&gt;&#xd;
                &lt;ows:Version&gt;2.0.0&lt;/ows:Version&gt;&#xd;
            &lt;/ows:AcceptVersions&gt;&#xd;
            &lt;ows:Sections&gt;&#xd;
                &lt;ows:Section&gt;OperationsMetadata&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;Contents&lt;/ows:Section&gt;&#xd;
            &lt;/ows:Sections&gt;&#xd;
        &lt;/sos:GetCapabilities&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Procedure identifier" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;DescribeSensor&apos;]/ows:Parameter[@name=&apos;procedure&apos;]/ows:AllowedValues/ows:Value[text()=&quot;${sensor_id}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;ID" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;procedure" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../swes:procedure[text()=&quot;${sensor_id}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Name" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../swes:name[text()=&quot;${offering_name}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Description Format" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../swes:procedureDescriptionFormat[text()=&quot;${sensor_description_format}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Observable Property" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../swes:observableProperty[contains(text(),&quot;${observable_property_start}&quot;)])=5</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Feature Types &quot;../SF_SamplingPoint&quot;" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../sos:featureOfInterestType[text()=&quot;http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint&quot;])=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Observation Type" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../sos:observationType[text()=&quot;http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_TruthObservation&quot;])=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InsertObservation &quot;-2&quot;" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:InsertObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:sml=&quot;http://www.opengis.net/sensorML/1.0.1&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:om=&quot;http://www.opengis.net/om/2.0&quot;&#xd;
            xmlns:sams=&quot;http://www.opengis.net/samplingSpatial/2.0&quot;&#xd;
            xmlns:sf=&quot;http://www.opengis.net/sampling/2.0&quot;&#xd;
            xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:offering&gt;${offering_identifier}-2&lt;/sos:offering&gt;&#xd;
            &lt;sos:observation&gt;&#xd;
                &lt;om:OM_Observation gml:id=&quot;o1&quot;&gt;&#xd;
		    &lt;gml:identifier codeSpace=&quot;org.n52.sos.integration.test&quot;&gt;${observation_identifier}-2&lt;/gml:identifier&gt;&#xd;
                    &lt;om:type xlink:href=&quot;http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_TruthObservation&quot;/&gt;&#xd;
                    &lt;om:phenomenonTime&gt;&#xd;
                        &lt;gml:TimePeriod gml:id=&quot;phenomenonTime&quot;&gt;&#xd;
				&lt;gml:beginPosition&gt;${phenomenon_time_start_2}&lt;/gml:beginPosition&gt;&#xd;
				&lt;gml:endPosition&gt;${phenomenon_time_end_2}&lt;/gml:endPosition&gt;&#xd;
			&lt;/gml:TimePeriod&gt;&#xd;
                    &lt;/om:phenomenonTime&gt;&#xd;
                    &lt;om:resultTime&gt;&#xd;
			&lt;gml:TimeInstant gml:id=&quot;resultTime&quot;&gt;&#xd;
                            &lt;gml:timePosition&gt;${phenomenon_time_end_2}&lt;/gml:timePosition&gt;&#xd;
                        &lt;/gml:TimeInstant&gt;&#xd;
		    &lt;/om:resultTime&gt;&#xd;
                    &lt;om:procedure xlink:href=&quot;${sensor_id}-2&quot;/&gt;&#xd;
                    &lt;om:observedProperty xlink:href=&quot;${observable_property_start}1-2&quot;/&gt;&#xd;
                    &lt;om:featureOfInterest&gt;&#xd;
                        &lt;sams:SF_SpatialSamplingFeature gml:id=&quot;${feature_id}-2&quot;&gt;&#xd;
                            &lt;gml:identifier codeSpace=&quot;&quot;&gt;${feature_id}-2&lt;/gml:identifier&gt;&#xd;
                            &lt;sf:type xlink:href=&quot;http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint&quot;/&gt;&#xd;
                            &lt;sf:sampledFeature xlink:href=&quot;${feature_id}-2&quot;/&gt;&#xd;
                            &lt;sams:shape&gt;&#xd;
                                &lt;gml:Point gml:id=&quot;${feature_id}-2&quot;&gt;&#xd;
                                    &lt;gml:pos srsName=&quot;http://www.opengis.net/def/crs/EPSG/0/4326&quot;&gt;${feature_2_y} ${feature_2_x}&lt;/gml:pos&gt;&#xd;
                                &lt;/gml:Point&gt;&#xd;
                            &lt;/sams:shape&gt;&#xd;
                        &lt;/sams:SF_SpatialSamplingFeature&gt;&#xd;
                    &lt;/om:featureOfInterest&gt;&#xd;
                    &lt;om:result xsi:type=&quot;xs:boolean&quot;&gt;true&lt;/om:result&gt;&#xd;
                &lt;/om:OM_Observation&gt;&#xd;
            &lt;/sos:observation&gt;&#xd;
        &lt;/sos:InsertObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Is InsertObservationResponse?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:InsertObservationResponse</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertObservation &quot;-2&quot;: GetObservation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:procedure&gt;${sensor_id}-2&lt;/sos:procedure&gt;&#xd;
            &lt;sos:featureOfInterest&gt;${feature_id}-2&lt;/sos:featureOfInterest&gt;&#xd;
        &lt;/sos:GetObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;observation received with observation identifier, procedure, and correct feature" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:observationData/om:OM_Observation/gml:identifier[text()=&quot;${observation_identifier}-2&quot;]/../om:procedure[@xlink:href=&quot;${sensor_id}-2&quot;]/../om:featureOfInterest/sams:SF_SpatialSamplingFeature/gml:identifier[text()=&quot;${feature_id}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER InsertObservation &quot;-2&quot;: GetFeatureOfInterest" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetFeatureOfInterest service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:fes=&quot;http://www.opengis.net/fes/2.0&quot;&#xd;
            xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
            xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&#xd;
            xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sos.xsd&quot;&gt;&#xd;
            &lt;sos:featureOfInterest&gt;${feature_id}-2&lt;/sos:featureOfInterest&gt;&#xd;
        &lt;/sos:GetFeatureOfInterest&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;Feature id and coordinates" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//gml:identifier[@codeSpace=&quot;&quot; and text()=&quot;${feature_id}-2&quot;]/../sams:shape/gml:Point/gml:pos[@srsName=&quot;${default_srs_name}&quot; and text()=&quot;${feature_2_y} ${feature_2_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="TODO Review Test AFTER InsertObseration &quot;-2&quot;: GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetCapabilities service=&quot;SOS&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:ows=&quot;http://www.opengis.net/ows/1.1&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sosGetCapabilities.xsd&quot;&gt;&#xd;
            &lt;ows:AcceptVersions&gt;&#xd;
                &lt;ows:Version&gt;2.0.0&lt;/ows:Version&gt;&#xd;
            &lt;/ows:AcceptVersions&gt;&#xd;
            &lt;ows:Sections&gt;&#xd;
                &lt;ows:Section&gt;OperationsMetadata&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;Contents&lt;/ows:Section&gt;&#xd;
            &lt;/ows:Sections&gt;&#xd;
        &lt;/sos:GetCapabilities&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Temporal BBox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;temporalFilter&apos;]/ows:AllowedValues/ows:Range/ows:MinimumValue[text()=&quot;${phenomenon_time_start}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Temporal BBox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;temporalFilter&apos;]/ows:AllowedValues/ows:Range/ows:MaximumValue[text()=&quot;${phenomenon_time_end_2}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="TODO Review: XPath: Global Spatial BBox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;spatialFilter&apos;]/ows:AllowedValues/ows:Range/ows:MaximumValue[text()=&quot;${feature_y} ${feature_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
            <stringProp name="TestPlan.comments">Currently this works around a bug, I think. (Eike)</stringProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Spatial BBox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;spatialFilter&apos;]/ows:AllowedValues/ows:Range/ows:MinimumValue[text()=&quot;${feature_2_y} ${feature_2_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;spatial bbox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../sos:observedArea/gml:Envelope[@srsName=&quot;${default_srs_name}&quot;]/gml:lowerCorner[text()=&quot;${feature_2_y} ${feature_2_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;spatial bbox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../sos:observedArea/gml:Envelope[@srsName=&quot;${default_srs_name}&quot;]/gml:upperCorner[text()=&quot;${feature_2_y} ${feature_2_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;temporal bbox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../sos:phenomenonTime/gml:TimePeriod/gml:beginPosition[text()=&quot;${phenomenon_time_start_2}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname=" XPath: Offering-2-&gt;temporal bbox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../sos:phenomenonTime/gml:TimePeriod/gml:endPosition[text()=&quot;${phenomenon_time_end_2}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: observation-identifier?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservationById&apos;]/ows:Parameter[@name=&apos;observation&apos;]/ows:AllowedValues/ows:Value[text()=&quot;${observation_identifier}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DeleteSensor" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;swes:DeleteSensor service=&quot;SOS&quot; version=&quot;2.0.0&quot;&#xd;
            xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; xsi:schemaLocation=&quot;http://www.opengis.net/swes/2.0 http://schemas.opengis.net/swes/2.0/swes.xsd&quot;&gt;&#xd;
            &lt;swes:procedure&gt;${sensor_id}&lt;/swes:procedure&gt;&#xd;
        &lt;/swes:DeleteSensor&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;one element" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//swes:deletedProcedure[text()=&quot;${sensor_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
            <stringProp name="TestPlan.comments">Result should contain one element of sos:InsertResultResponse</stringProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Test AFTER DeleteSensor: GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetCapabilities service=&quot;SOS&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:ows=&quot;http://www.opengis.net/ows/1.1&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sosGetCapabilities.xsd&quot;&gt;&#xd;
            &lt;ows:AcceptVersions&gt;&#xd;
                &lt;ows:Version&gt;2.0.0&lt;/ows:Version&gt;&#xd;
            &lt;/ows:AcceptVersions&gt;&#xd;
            &lt;ows:Sections&gt;&#xd;
                &lt;ows:Section&gt;OperationsMetadata&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;Contents&lt;/ows:Section&gt;&#xd;
            &lt;/ows:Sections&gt;&#xd;
        &lt;/sos:GetCapabilities&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Procedure identifier" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;DescribeSensor&apos;]/ows:Parameter[@name=&apos;procedure&apos;]/ows:AllowedValues/ows:Value[text()=&quot;${sensor_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;ID" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;procedure" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:procedure[text()=&quot;${sensor_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Name" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:name[text()=&quot;${offering_name}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Description Format" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:procedureDescriptionFormat[text()=&quot;${sensor_description_format}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Observable Property" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:observableProperty[contains(text(),&quot;${observable_property_start}&quot;)])=5</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Feature Types &quot;../SF_SamplingPoint&quot;" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:featureOfInterestType[text()=&quot;http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint&quot;])=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Observation Type" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:observationType[text()=&quot;http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_TruthObservation&quot;])=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: observation-identifier?" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservationById&apos;]/ows:Parameter[@name=&apos;observation&apos;]/ows:AllowedValues/ows:Value[text()=&quot;${observation_identifier}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: observation-2-identifier?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservationById&apos;]/ows:Parameter[@name=&apos;observation&apos;]/ows:AllowedValues/ows:Value[text()=&quot;${observation_identifier}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;Observation Type" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../sos:observationType[text()=&quot;http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_TruthObservation&quot;])=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;Feature Types &quot;../SF_SamplingPoint&quot;" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../sos:featureOfInterestType[text()=&quot;http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint&quot;])=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;Observable Property" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../swes:observableProperty[contains(text(),&quot;${observable_property_start}&quot;)])=5</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;Description Format" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../swes:procedureDescriptionFormat[text()=&quot;${sensor_description_format}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;Name" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../swes:name[text()=&quot;${offering_name}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;procedure" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../swes:procedure[text()=&quot;${sensor_id}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;ID" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Procedure-2 identifier" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;DescribeSensor&apos;]/ows:Parameter[@name=&apos;procedure&apos;]/ows:AllowedValues/ows:Value[text()=&quot;${sensor_id}-2&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;temporal bbox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../sos:phenomenonTime/gml:TimePeriod/gml:endPosition[text()=&quot;${phenomenon_time_end_2}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;temporal bbox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../sos:phenomenonTime/gml:TimePeriod/gml:beginPosition[text()=&quot;${phenomenon_time_start_2}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;spatial bbox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../sos:observedArea/gml:Envelope[@srsName=&quot;${default_srs_name}&quot;]/gml:upperCorner[text()=&quot;${feature_2_y} ${feature_2_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-2-&gt;spatial bbox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}-2&quot;]/../sos:observedArea/gml:Envelope[@srsName=&quot;${default_srs_name}&quot;]/gml:lowerCorner[text()=&quot;${feature_2_y} ${feature_2_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Spatial BBox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;spatialFilter&apos;]/ows:AllowedValues/ows:Range/ows:MinimumValue[text()=&quot;${feature_2_y} ${feature_2_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Spatial BBox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;spatialFilter&apos;]/ows:AllowedValues/ows:Range/ows:MaximumValue[text()=&quot;${feature_2_y} ${feature_2_x}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Temporal BBox-&gt;Max" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;temporalFilter&apos;]/ows:AllowedValues/ows:Range/ows:MaximumValue[text()=&quot;${phenomenon_time_end_2}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Global Temporal BBox-&gt;Min" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;GetObservation&apos;]/ows:Parameter[@name=&apos;temporalFilter&apos;]/ows:AllowedValues/ows:Range/ows:MinimumValue[text()=&quot;${phenomenon_time_start_2}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Response" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="Response Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="GetCapabilities performance test" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Schleifen-Controller (Loop Controller)" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">204</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1333103506000</longProp>
        <longProp name="ThreadGroup.end_time">1333103506000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="specific settings" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="default_srs_name" elementType="Argument">
              <stringProp name="Argument.name">default_srs_name</stringProp>
              <stringProp name="Argument.value">http://www.opengis.net/def/crs/EPSG/0/4326</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="feature_id" elementType="Argument">
              <stringProp name="Argument.name">feature_id</stringProp>
              <stringProp name="Argument.value">test-feature-identifier</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="feature_type" elementType="Argument">
              <stringProp name="Argument.name">feature_type</stringProp>
              <stringProp name="Argument.value">http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="feature_x" elementType="Argument">
              <stringProp name="Argument.name">feature_x</stringProp>
              <stringProp name="Argument.value">111.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="feature_y" elementType="Argument">
              <stringProp name="Argument.name">feature_y</stringProp>
              <stringProp name="Argument.value">30.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="insert_result_date_1" elementType="Argument">
              <stringProp name="Argument.name">insert_result_date_1</stringProp>
              <stringProp name="Argument.value">1980-08-08T13:37:00.000+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="insert_result_date_2" elementType="Argument">
              <stringProp name="Argument.name">insert_result_date_2</stringProp>
              <stringProp name="Argument.value">1990-09-09T13:37:00.000+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="insert_result_date_3" elementType="Argument">
              <stringProp name="Argument.name">insert_result_date_3</stringProp>
              <stringProp name="Argument.value">2000-10-10T13:37:00.000+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="observable_property_start" elementType="Argument">
              <stringProp name="Argument.name">observable_property_start</stringProp>
              <stringProp name="Argument.value">test-observable-property-</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="observation_type" elementType="Argument">
              <stringProp name="Argument.name">observation_type</stringProp>
              <stringProp name="Argument.value">http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_TruthObservation</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="observation_identifier" elementType="Argument">
              <stringProp name="Argument.name">observation_identifier</stringProp>
              <stringProp name="Argument.value">test-observation-identifier</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="offering_identifier" elementType="Argument">
              <stringProp name="Argument.name">offering_identifier</stringProp>
              <stringProp name="Argument.value">test-offering-identifier</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="offering_name" elementType="Argument">
              <stringProp name="Argument.name">offering_name</stringProp>
              <stringProp name="Argument.value">test-offering-name</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="phenomenon_time_start" elementType="Argument">
              <stringProp name="Argument.name">phenomenon_time_start</stringProp>
              <stringProp name="Argument.value">1970-01-01T13:37:00.000+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="phenomenon_time_end" elementType="Argument">
              <stringProp name="Argument.name">phenomenon_time_end</stringProp>
              <stringProp name="Argument.value">2000-12-31T20:11:11.111+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sensor_id" elementType="Argument">
              <stringProp name="Argument.name">sensor_id</stringProp>
              <stringProp name="Argument.value">test-sensor</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sensor_description_format" elementType="Argument">
              <stringProp name="Argument.name">sensor_description_format</stringProp>
              <stringProp name="Argument.value">http://www.opengis.net/sensorML/1.0.1</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="template_identifier" elementType="Argument">
              <stringProp name="Argument.name">template_identifier</stringProp>
              <stringProp name="Argument.value">test-result-template-identifier</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="url_pattern" elementType="Argument">
              <stringProp name="Argument.name">url_pattern</stringProp>
              <stringProp name="Argument.value">/soap</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="feature_2_x" elementType="Argument">
              <stringProp name="Argument.name">feature_2_x</stringProp>
              <stringProp name="Argument.value">-108.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="feature_2_y" elementType="Argument">
              <stringProp name="Argument.name">feature_2_y</stringProp>
              <stringProp name="Argument.value">-17.0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="phenomenon_time_start_2" elementType="Argument">
              <stringProp name="Argument.name">phenomenon_time_start_2</stringProp>
              <stringProp name="Argument.value">3000-01-01T13:30:00.000+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="phenomenon_time_end_2" elementType="Argument">
              <stringProp name="Argument.name">phenomenon_time_end_2</stringProp>
              <stringProp name="Argument.value">3500-12-31T22:00:00.000+01:00</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetCapabilities" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope&#xd;
    xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.w3.org/2003/05/soap-envelope http://www.w3.org/2003/05/soap-envelope/soap-envelope.xsd&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetCapabilities service=&quot;SOS&quot;&#xd;
            xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
            xmlns:ows=&quot;http://www.opengis.net/ows/1.1&quot; xsi:schemaLocation=&quot;http://www.opengis.net/sos/2.0 http://schemas.opengis.net/sos/2.0.0/sosGetCapabilities.xsd&quot;&gt;&#xd;
            &lt;ows:AcceptVersions&gt;&#xd;
                &lt;ows:Version&gt;2.0.0&lt;/ows:Version&gt;&#xd;
            &lt;/ows:AcceptVersions&gt;&#xd;
            &lt;ows:Sections&gt;&#xd;
                &lt;ows:Section&gt;OperationsMetadata&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;ServiceIdentification&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;ServiceProvider&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;FilterCapabilities&lt;/ows:Section&gt;&#xd;
                &lt;ows:Section&gt;Contents&lt;/ows:Section&gt;&#xd;
            &lt;/ows:Sections&gt;&#xd;
        &lt;/sos:GetCapabilities&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Procedure identifier" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//ows:Operation[@name=&apos;DescribeSensor&apos;]/ows:Parameter[@name=&apos;procedure&apos;]/ows:AllowedValues/ows:Value[text()=&quot;${sensor_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;ID" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;procedure" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:procedure[text()=&quot;${sensor_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Name" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:name[text()=&quot;${offering_name}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Description Format" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:procedureDescriptionFormat[text()=&quot;${sensor_description_format}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Observable Property" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../swes:observableProperty[contains(text(),&quot;${observable_property_start}&quot;)])=5</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Feature Types &quot;../SF_SamplingPoint&quot;" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:featureOfInterestType[text()=&quot;http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint&quot;])=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Offering-&gt;Observation Type" enabled="true">
            <boolProp name="XPath.negate">true</boolProp>
            <stringProp name="XPath.xpath">count(//sos:ObservationOffering/swes:identifier[text()=&quot;${offering_identifier}&quot;]/../sos:observationType[text()=&quot;http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_TruthObservation&quot;])=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Response" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="Response Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="InsertResultTemplate with Measurements" enabled="false">
        <stringProp name="TestPlan.comments">Test for insertion of measurement with result handling</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">stoptest</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Schleifen-Controller (Loop Controller)" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1362387788000</longProp>
        <longProp name="ThreadGroup.end_time">1362387788000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="specific settings" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="feature_id" elementType="Argument">
              <stringProp name="Argument.name">feature_id</stringProp>
              <stringProp name="Argument.value">foi_DENW082</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="observable_property" elementType="Argument">
              <stringProp name="Argument.name">observable_property</stringProp>
              <stringProp name="Argument.value">http://giv-genesis.uni-muenster.de:8080/SOR/REST/phenomenon/OGC/Concentration(NO2)</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="offering_id" elementType="Argument">
              <stringProp name="Argument.name">offering_id</stringProp>
              <stringProp name="Argument.value">DENW082</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="sensor_id" elementType="Argument">
              <stringProp name="Argument.name">sensor_id</stringProp>
              <stringProp name="Argument.value">urn:ogc:object:feature:Sensor:EEA:airbase:4.0:DENW082</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="template_id" elementType="Argument">
              <stringProp name="Argument.name">template_id</stringProp>
              <stringProp name="Argument.value">urn:ogc:object:feature:Sensor:EEA:airbase:4.0:DENW082:resultTemplate:NO2</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="url_pattern" elementType="Argument">
              <stringProp name="Argument.name">url_pattern</stringProp>
              <stringProp name="Argument.value">/soap</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="observation_type" elementType="Argument">
              <stringProp name="Argument.name">observation_type</stringProp>
              <stringProp name="Argument.value">http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InsertSensor" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope &#xd;
    xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; &#xd;
    xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; &#xd;
    xmlns:gml=&quot;http://www.opengis.net/gml&quot; &#xd;
    xmlns:swe=&quot;http://www.opengis.net/swe/1.0.1&quot; &#xd;
    xmlns:sml=&quot;http://www.opengis.net/sensorML/1.0.1&quot;&#xd;
    xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&gt;&#xd;
  &lt;soap:Body&gt;&#xd;
    &lt;swes:InsertSensor  service=&quot;SOS&quot; version=&quot;2.0.0&quot;&gt;&#xd;
      &lt;swes:procedureDescriptionFormat&gt;http://www.opengis.net/sensorML/1.0.1&lt;/swes:procedureDescriptionFormat&gt;&#xd;
      &lt;swes:procedureDescription&gt;&#xd;
        &lt;sml:SensorML version=&quot;1.0.1&quot;&gt;&#xd;
          &lt;sml:member&gt;&#xd;
            &lt;sml:System&gt;&#xd;
              &lt;sml:identification&gt;&#xd;
                &lt;sml:IdentifierList&gt;&#xd;
                  &lt;sml:identifier&gt;&#xd;
                    &lt;sml:Term definition=&quot;urn:ogc:def:identifier:OGC:1.0:uniqueID&quot;&gt;&#xd;
                      &lt;sml:value&gt;${sensor_id}&lt;/sml:value&gt;&#xd;
                    &lt;/sml:Term&gt;&#xd;
                  &lt;/sml:identifier&gt;&#xd;
                  &lt;sml:identifier&gt;&#xd;
                    &lt;sml:Term definition=&quot;urn:ogc:def:identifier:OGC:offeringID&quot;&gt;&#xd;
                      &lt;sml:value&gt;${offering_id}&lt;/sml:value&gt;&#xd;
                    &lt;/sml:Term&gt;&#xd;
                  &lt;/sml:identifier&gt;&#xd;
                &lt;/sml:IdentifierList&gt;&#xd;
              &lt;/sml:identification&gt;&#xd;
              &lt;sml:inputs&gt;&#xd;
                &lt;sml:InputList&gt;&#xd;
                  &lt;sml:input name=&quot;Nitrogen dioxide (air)&quot;&gt;&#xd;
                    &lt;swe:ObservableProperty definition=&quot;urn:ogc:def:property:EEA:airbase:4.0:componentCode:NO2&quot;/&gt;&#xd;
                  &lt;/sml:input&gt;&#xd;
                &lt;/sml:InputList&gt;&#xd;
              &lt;/sml:inputs&gt;&#xd;
              &lt;sml:outputs&gt;&#xd;
                &lt;sml:OutputList&gt;&#xd;
                  &lt;sml:output name=&quot;NO2&quot;&gt;&#xd;
                    &lt;swe:Quantity definition=&quot;${observable_property}&quot;&gt;&#xd;
                      &lt;gml:description&gt;Nitrogen dioxide (air)&lt;/gml:description&gt;&#xd;
                      &lt;swe:uom code=&quot;Âµg/m3&quot;/&gt;&#xd;
                    &lt;/swe:Quantity&gt;&#xd;
                  &lt;/sml:output&gt;&#xd;
                &lt;/sml:OutputList&gt;&#xd;
              &lt;/sml:outputs&gt;&#xd;
            &lt;/sml:System&gt;&#xd;
          &lt;/sml:member&gt;&#xd;
        &lt;/sml:SensorML&gt;&#xd;
      &lt;/swes:procedureDescription&gt;&#xd;
      &lt;swes:observableProperty&gt;${observable_property}&lt;/swes:observableProperty&gt;&#xd;
      &lt;swes:metadata&gt;&#xd;
        &lt;sos:SosInsertionMetadata&gt;&#xd;
          &lt;sos:observationType&gt;${observation_type}&lt;/sos:observationType&gt;&#xd;
          &lt;sos:featureOfInterestType&gt;http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint&lt;/sos:featureOfInterestType&gt;&#xd;
        &lt;/sos:SosInsertionMetadata&gt;&#xd;
      &lt;/swes:metadata&gt;&#xd;
    &lt;/swes:InsertSensor&gt;&#xd;
  &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: response-&gt;assigned sensor id" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//swes:assignedProcedure[text()=&quot;${sensor_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: response-&gt;assigned offering id" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//swes:assignedOffering[text()=&quot;${offering_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InsertResultTemplate" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope &#xd;
    xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot; &#xd;
    xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&#xd;
    xmlns:swes=&quot;http://www.opengis.net/swes/2.0&quot; &#xd;
    xmlns:om=&quot;http://www.opengis.net/om/2.0&quot;&#xd;
    xmlns:gml=&quot;http://www.opengis.net/gml/3.2&quot;&#xd;
    xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; &#xd;
    xmlns:sams=&quot;http://www.opengis.net/samplingSpatial/2.0&quot; &#xd;
    xmlns:sf=&quot;http://www.opengis.net/sampling/2.0&quot;&#xd;
    xmlns:swe=&quot;http://www.opengis.net/swe/2.0&quot;&gt;&#xd;
  &lt;soap:Body&gt;&#xd;
    &lt;sos:InsertResultTemplate version=&quot;2.0.0&quot; service=&quot;SOS&quot;&gt;&#xd;
      &lt;sos:proposedTemplate&gt;&#xd;
        &lt;sos:ResultTemplate&gt;&#xd;
          &lt;swes:identifier&gt;${template_id}&lt;/swes:identifier&gt;&#xd;
          &lt;sos:offering&gt;${offering_id}&lt;/sos:offering&gt;&#xd;
          &lt;sos:observationTemplate&gt;&#xd;
            &lt;om:OM_Observation gml:id=&quot;template&quot;&gt;&#xd;
              &lt;om:type xlink:href=&quot;${observation_type}&quot;/&gt;&#xd;
              &lt;om:phenomenonTime nilReason=&quot;template&quot;/&gt;&#xd;
              &lt;om:resultTime nilReason=&quot;template&quot;/&gt;&#xd;
              &lt;om:procedure xlink:href=&quot;${sensor_id}&quot;/&gt;&#xd;
              &lt;om:observedProperty xlink:href=&quot;${observable_property}&quot;/&gt;&#xd;
              &lt;om:featureOfInterest&gt;&#xd;
                &lt;sams:SF_SpatialSamplingFeature&gt;&#xd;
                  &lt;gml:identifier codeSpace=&quot;&quot;&gt;${feature_id}&lt;/gml:identifier&gt;&#xd;
                  &lt;sf:type xlink:href=&quot;http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint&quot;/&gt;&#xd;
                  &lt;sf:sampledFeature xlink:href=&quot;http://www.opengis.net/def/nil/OGC/0/unknown&quot;/&gt;&#xd;
                  &lt;sams:shape&gt;&#xd;
                    &lt;gml:Point&gt;&#xd;
                      &lt;gml:pos srsName=&quot;http://www.opengis.net/def/crs/EPSG/0/4326&quot;&gt;51.209999 6.782564 37&lt;/gml:pos&gt;&#xd;
                    &lt;/gml:Point&gt;&#xd;
                  &lt;/sams:shape&gt;&#xd;
                &lt;/sams:SF_SpatialSamplingFeature&gt;&#xd;
              &lt;/om:featureOfInterest&gt;&#xd;
              &lt;om:result/&gt;&#xd;
            &lt;/om:OM_Observation&gt;&#xd;
          &lt;/sos:observationTemplate&gt;&#xd;
          &lt;sos:resultStructure&gt;&#xd;
            &lt;swe:DataRecord&gt;&#xd;
              &lt;swe:field name=&quot;phenomenonTime&quot;&gt;&#xd;
                &lt;swe:Time definition=&quot;http://www.opengis.net/def/property/OGC/0/PhenomenonTime&quot;&gt;&#xd;
                  &lt;swe:uom xlink:href=&quot;http://www.opengis.net/def/uom/ISO-8601/0/Gregorian&quot;/&gt;&#xd;
                &lt;/swe:Time&gt;&#xd;
              &lt;/swe:field&gt;&#xd;
              &lt;swe:field name=&quot;NO2&quot;&gt;&#xd;
                &lt;swe:Quantity definition=&quot;${observable_property}&quot;&gt;&#xd;
                  &lt;swe:uom code=&quot;Âµg/m3&quot;/&gt;&#xd;
                &lt;/swe:Quantity&gt;&#xd;
              &lt;/swe:field&gt;&#xd;
            &lt;/swe:DataRecord&gt;&#xd;
          &lt;/sos:resultStructure&gt;&#xd;
          &lt;sos:resultEncoding&gt;&#xd;
            &lt;swe:TextEncoding blockSeparator=&quot;;&quot; decimalSeparator=&quot;.&quot; tokenSeparator=&quot;,&quot;/&gt;&#xd;
          &lt;/sos:resultEncoding&gt;&#xd;
        &lt;/sos:ResultTemplate&gt;&#xd;
      &lt;/sos:proposedTemplate&gt;&#xd;
    &lt;/sos:InsertResultTemplate&gt;&#xd;
  &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;observation template accepted?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//sos:acceptedTemplate[text()=&quot;${template_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="InsertResult" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soap:Envelope &#xd;
    xmlns:soap=&quot;http://www.w3.org/2003/05/soap-envelope&quot;&#xd;
    xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; &#xd;
    xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; &#xd;
    xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&gt;&#xd;
  &lt;soap:Body&gt;&#xd;
    &lt;sos:InsertResult version=&quot;2.0.0&quot; service=&quot;SOS&quot;&gt;&#xd;
      &lt;sos:template&gt;${template_id}&lt;/sos:template&gt;&#xd;
      &lt;sos:resultValues&gt; xsi:type=&quot;xs:string&quot;&gt;28;2003-01-01T00:00:00.000Z,28;2003-01-01T01:00:00.000Z,23;2003-01-01T02:00:00.000Z,25;2003-01-01T03:00:00.000Z,23;2003-01-01T04:00:00.000Z,25;2003-01-01T05:00:00.000Z,30;2003-01-01T06:00:00.000Z,30;2003-01-01T07:00:00.000Z,30;2003-01-01T08:00:00.000Z,30;2003-01-01T09:00:00.000Z,28;2003-01-01T10:00:00.000Z,22;2003-01-01T12:00:00.000Z,20;2003-01-01T13:00:00.000Z,20;2003-01-01T14:00:00.000Z,22;2003-01-01T15:00:00.000Z,27;2003-01-01T16:00:00.000Z,33;2003-01-01T17:00:00.000Z,39;2003-01-01T18:00:00.000Z,40;2003-01-01T20:00:00.000Z,48;2003-01-01T21:00:00.000Z,40;2003-01-01T22:00:00.000Z,25;2003-01-02T00:00:00.000Z,12;2003-01-02T01:00:00.000Z,5;2003-01-02T02:00:00.000Z,5;2003-01-02T03:00:00.000Z,5;2003-01-02T04:00:00.000Z,8;2003-01-02T05:00:00.000Z,14;2003-01-02T06:00:00.000Z,24;&lt;/sos:resultValues&gt;&#xd;
    &lt;/sos:InsertResult&gt;&#xd;
  &lt;/soap:Body&gt;&#xd;
&lt;/soap:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath: Response-&gt;one element" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//sos:InsertResultResponse)=1</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
            <stringProp name="TestPlan.comments">Result should contain one element of sos:InsertResultResponse</stringProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetObservation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;env:Envelope xmlns:env=&quot;http://www.w3.org/2003/05/soap-envelope&quot; xmlns:sos=&quot;http://www.opengis.net/sos/2.0&quot;&gt;&#xd;
    &lt;env:Body&gt;&#xd;
        &lt;sos:GetObservation service=&quot;SOS&quot; version=&quot;2.0.0&quot;&gt;&#xd;
            &lt;sos:procedure&gt;${sensor_id}&lt;/sos:procedure&gt;&#xd;
            &lt;sos:offering&gt;${offering_id}&lt;/sos:offering&gt;&#xd;
            &lt;sos:observedProperty&gt;${observable_property}&lt;/sos:observedProperty&gt;&#xd;
            &lt;sos:featureOfInterest&gt;${feature_id}&lt;/sos:featureOfInterest&gt;&#xd;
            &lt;sos:responseFormat&gt;http://www.opengis.net/om/2.0&lt;/sos:responseFormat&gt;&#xd;
        &lt;/sos:GetObservation&gt;&#xd;
    &lt;/env:Body&gt;&#xd;
&lt;/env:Envelope&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${sos_servlet_path}${url_pattern}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">false</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Procedure correct?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//om:procedure[@xlink:href=&quot;${sensor_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="ObservationType correct?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//om:type[@xlink:href=&quot;${observation_type}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Feature correct?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//om:featureOfInterest/sams:SF_SpatialSamplingFeature/gml:identifier[text()=&quot;${feature_id}&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="Right amount of observations?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">count(//om:OM_Observation)=28</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="ResultType correct?" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">//om:result[@xsi:type= &quot;ns:MeasureType&quot;]</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">true</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="Response" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="Response Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
