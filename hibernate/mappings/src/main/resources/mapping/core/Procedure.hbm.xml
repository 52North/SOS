<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="org.n52.sos.ds.hibernate.entities.Procedure">
        <!--
            To enable prefixes for procedure identifiers replace all occurences
            of 'SELECT *.table_name AS identifier' with something like
            'SELECT CONCAT('urn:procedure:..', *.table) AS identifier'.

            Same procedure for observable properties but replacing column_name
            everywhere.
        -->
        <!--  procedureDescriptionFormat 1 is SensorML -->
        <subselect>
            SELECT
                @procedureId := @procedureId + 1 AS procedureId,
                table_name                       AS identifier
            FROM (
                SELECT
                    t.table_name
                FROM
                    information_schema.tables AS t
                WHERE
                    t.table_schema = (SELECT DATABASE())
                ORDER BY
                    t.table_name
            ) AS t1,
            (
                SELECT
                    @procedureId := 0
            ) AS t2
        </subselect>
        <id name="procedureId" type="long" />
        <many-to-one name="procedureDescriptionFormat" class="org.n52.sos.ds.hibernate.entities.ProcedureDescriptionFormat" fetch="select" lazy="no-proxy" insert="false" update="false" formula="1"/>
        <property name="identifier" type="string" insert="false" update="false" />
        <property name="deleted" type="org.hibernate.type.TrueFalseType" insert="false" update="false" formula="'F'"/>
        <property name="descriptionFile" type="org.hibernate.type.StringClobType" insert="false" update="false" formula="NULL" />
        <property name="reference" type="org.hibernate.type.TrueFalseType" insert="false" update="false" formula="'F'"/>
        <property name="description" type="string" insert="false" update="false" formula="NULL"/>
        <many-to-one name="codespace" class="org.n52.sos.ds.hibernate.entities.Codespace" fetch="select" formula="1" />
        <property name="name" type="string" formula="NULL" />
        <many-to-one name="codespaceName" class="org.n52.sos.ds.hibernate.entities.Codespace" fetch="select" formula="1" />
		<property name="disabled" type="org.hibernate.type.TrueFalseType" formula="'F'" />
    </class>
</hibernate-mapping>
