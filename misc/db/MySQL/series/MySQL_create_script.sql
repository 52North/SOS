--
-- Copyright (C) 2012-2017 52Â°North Initiative for Geospatial Open Source
-- Software GmbH
--
-- This program is free software; you can redistribute it and/or modify it
-- under the terms of the GNU General Public License version 2 as published
-- by the Free Software Foundation.
--
-- If the program is linked with libraries which are licensed under one of
-- the following licenses, the combination of the program with the linked
-- library is not considered a "derivative work" of the program:
--
--     - Apache License, version 2.0
--     - Apache Software License, version 1.0
--     - GNU Lesser General Public License, version 3
--     - Mozilla Public License, versions 1.0, 1.1 and 2.0
--     - Common Development and Distribution License (CDDL), version 1.0
--
-- Therefore the distribution of the program linked with libraries licensed
-- under the aforementioned licenses, is permitted by the copyright holders
-- if the distribution is compliant with both the GNU General Public
-- License version 2 and the aforementioned licenses.
--
-- This program is distributed in the hope that it will be useful, but
-- WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
-- Public License for more details.
--

create table sos.`procedure` (procedureId bigint not null auto_increment comment 'Table primary key, used for relations', hibernateDiscriminator char(1) not null, procedureDescriptionFormatId bigint not null comment 'Relation/foreign key to the procedureDescriptionFormat table. Describes the format of the procedure description.', identifier varchar(255) not null comment 'The identifier of the procedure, gml:identifier. Used as parameter for queries. Unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the procedure, gml:name. Optional', codespaceName bigint comment 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional', description varchar(255) comment 'Description of the procedure, gml:description. Optional', deleted char(1) default 'F' not null comment 'Flag to indicate that this procedure is deleted or not (OGC SWES 2.0 - DeleteSensor operation)', disabled char(1) default 'F' not null comment 'For later use by the SOS. Indicator if this procedure should not be provided by the SOS.', descriptionFile longtext comment 'Field for full (XML) encoded procedure description or link to a procedure description file. Optional', referenceFlag char(1) default 'F' comment 'Flag to indicate that this procedure is a reference procedure of another procedure. Not used by the SOS but by the Sensor Web REST-API', typeOf bigint comment 'Relation/foreign key to procedure table. Optional, contains procedureId if this procedure is typeOf another procedure', isType char(1) default 'F' comment 'Flag to indicate that this procedure is a type description, has no observations.', isAggregation char(1) default 'T' comment 'Flag to indicate that this procedure is an aggregation (e.g. System, PhysicalSystem).', mobile char(1) default 'F' comment 'Flag to indicate that this procedure is stationary (false) or mobile (true). Optional', insitu char(1) default 'T' comment 'Flag to indicate that this procedure is insitu (true) or remote (false). Optional', primary key (procedureId)) comment='Table to store the procedure/sensor. Mapping file: mapping/core/Procedure.hbm.xml' ENGINE=InnoDB;
create table sos.address (pkid bigint not null auto_increment comment 'Table primary key, used for relations', nilReason varchar(255), href varchar(255), type varchar(255), role varchar(255), arcrole varchar(255), title varchar(255), show varchar(255), actuate varchar(255), remoteSchema varchar(255), id varchar(255), uuid varchar(255), city varchar(255), administrativeArea varchar(255), postalCode varchar(255), country varchar(255), primary key (pkid)) ENGINE=InnoDB;
create table sos.addressdeliveryPoint (addressId bigint not null, deliveryPoint varchar(255) not null, primary key (addressId, deliveryPoint)) ENGINE=InnoDB;
create table sos.addressemail (addressId bigint not null, electronicMailAddress varchar(255) not null, primary key (addressId, electronicMailAddress)) ENGINE=InnoDB;
create table sos.blobvalue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value longblob comment 'Blob observation value', primary key (observationId)) comment='Value table for blob observation' ENGINE=InnoDB;
create table sos.booleanfeatparamvalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "featureParameter".parameterid', value char(1) comment 'Boolean parameter value', primary key (parameterId), check (value in ('T','F'))) comment='Value table for boolean parameter' ENGINE=InnoDB;
create table sos.booleanparametervalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid', value char(1) comment 'Boolean parameter value', primary key (parameterId), check (value in ('T','F'))) comment='Value table for boolean parameter' ENGINE=InnoDB;
create table sos.booleanseriesparamvalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the series parameter table. Contains seriesparameter.parameterid', value char(1) comment 'Boolean parameter value', primary key (parameterId), check (value in ('T','F'))) comment='Value table for boolean parameter' ENGINE=InnoDB;
create table sos.booleanvalue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value char(1) comment 'Boolean observation value', primary key (observationId), check (value in ('T','F')), check (value in ('T','F'))) comment='Value table for boolean observation' ENGINE=InnoDB;
create table sos.categoryfeatparamvalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "featureParameter".parameterid', value varchar(255) comment 'Category parameter value', unitId bigint comment 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional', primary key (parameterId)) comment='Value table for category parameter' ENGINE=InnoDB;
create table sos.categoryparametervalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid', value varchar(255) comment 'Category parameter value', unitId bigint comment 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional', primary key (parameterId)) comment='Value table for category parameter' ENGINE=InnoDB;
create table sos.categoryseriesparamvalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the series parameter table. Contains seriesparameter.parameterid', value varchar(255) comment 'Category parameter value', unitId bigint comment 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional', primary key (parameterId)) comment='Value table for category parameter' ENGINE=InnoDB;
create table sos.categoryvalue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value varchar(255) comment 'Category observation value', identifier varchar(255) comment 'SweCategory observation identifier', name varchar(255) comment 'SweCategory observation name', description varchar(255) comment 'SweCategory observation description', primary key (observationId)) comment='Value table for category observation' ENGINE=InnoDB;
create table sos.codespace (codespaceId bigint not null auto_increment comment 'Table primary key, used for relations', codespace varchar(255) not null comment 'The codespace value', primary key (codespaceId)) comment='Table to store the gml:identifier and gml:name codespace information. Mapping file: mapping/core/Codespace.hbm.xml' ENGINE=InnoDB;
create table sos.complexvalue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', primary key (observationId)) comment='Value table for complex observation' ENGINE=InnoDB;
create table sos.compositeobservation (observationId bigint not null comment 'Foreign Key (FK) to the related parent complex observation. Contains "observation".observationid', childObservationId bigint not null comment 'Foreign Key (FK) to the related child complex observation. Contains "observation".observationid', primary key (observationId, childObservationId)) comment='Relation table for complex parent/child observations' ENGINE=InnoDB;
create table sos.compositephenomenon (parentObservablePropertyId bigint not null comment 'Foreign Key (FK) to the related parent observableProperty. Contains "observableProperty".observablePropertyid', childObservablePropertyId bigint not null comment 'Foreign Key (FK) to the related child observableProperty. Contains "observableProperty".observablePropertyid', primary key (childObservablePropertyId, parentObservablePropertyId)) comment='Relation table to store observableProperty hierarchies, aka compositePhenomenon. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/transactional/TObservableProperty.hbm.xml' ENGINE=InnoDB;
create table sos.contact (pkid bigint not null auto_increment comment 'Table primary key, used for relations', nilReason varchar(255), href varchar(255), type varchar(255), role varchar(255), arcrole varchar(255), title varchar(255), show varchar(255), actuate varchar(255), remoteSchema varchar(255), id varchar(255), uuid varchar(255), phoneId bigint, addressId bigint, onlineresourceid bigint, hoursOfService varchar(255), contactInstructions varchar(255), primary key (pkid)) ENGINE=InnoDB;
create table sos.coordinatesystemaxis (pkid bigint not null auto_increment comment 'Table primary key, used for relations', nilReason varchar(255), href varchar(255), type varchar(255), role varchar(255), arcrole varchar(255), title varchar(255), show varchar(255), actuate varchar(255), remoteSchema varchar(255), identifier varchar(255) comment 'The identifier of the object, gml:identifier. Used as parameter for queries. Optional but unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the object, gml:name. Optional', codespaceName bigint comment 'The name of the object, gml:name. Optional', description varchar(255) comment 'Description of the object, gml:description. Optional', remarks varchar(255), axisAbbrev varchar(255), codespaceAxisAbbrev bigint, axisDirection varchar(255), codespaceAxisDirection bigint, minimumValue double precision, maximumValue double precision, rangeMeaning varchar(255), codespaceRangeMeaning bigint, unitId bigint not null, primary key (pkid)) ENGINE=InnoDB;
create table sos.countfeatparamvalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "featureParameter".parameterid', value integer comment 'Count parameter value', primary key (parameterId)) comment='Value table for count parameter' ENGINE=InnoDB;
create table sos.countparametervalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid', value integer comment 'Count parameter value', primary key (parameterId)) comment='Value table for count parameter' ENGINE=InnoDB;
create table sos.countseriesparamvalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the series parameter table. Contains seriesparameter.parameterid', value integer comment 'Count parameter value', primary key (parameterId)) comment='Value table for count parameter' ENGINE=InnoDB;
create table sos.countvalue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value integer comment 'Count observation value', primary key (observationId)) comment='Value table for count observation' ENGINE=InnoDB;
create table sos.domainofvalidity (pkid bigint not null auto_increment comment 'Table primary key, used for relations', nilReason varchar(255), href varchar(255), type varchar(255), role varchar(255), arcrole varchar(255), title varchar(255), show varchar(255), actuate varchar(255), remoteSchema varchar(255), identifier varchar(255) comment 'The identifier of the object, gml:identifier. Used as parameter for queries. Optional but unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the object, gml:name. Optional', codespaceName bigint comment 'The name of the object, gml:name. Optional', description varchar(255) comment 'Description of the object, gml:description. Optional', exExtentId bigint, primary key (pkid)) ENGINE=InnoDB;
create table sos.exextent (pkid bigint not null auto_increment comment 'Table primary key, used for relations', id varchar(255), uuid varchar(255), description varchar(255), primary key (pkid)) ENGINE=InnoDB;
create table sos.exextentverticalext (exExtentId bigint not null, exVerticalExtentId bigint not null, primary key (exExtentId, exVerticalExtentId)) ENGINE=InnoDB;
create table sos.featureofinterest (featureOfInterestId bigint not null auto_increment comment 'Table primary key, used for relations', hibernatediscriminator varchar(255), featureOfInterestTypeId bigint not null comment 'Relation/foreign key to the featureOfInterestType table. Describes the type of the featureOfInterest. Contains "featureOfInterestType".featureOfInterestTypeId', identifier varchar(255) comment 'The identifier of the featureOfInterest, gml:identifier. Used as parameter for queries. Optional but unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the featureOfInterest, gml:name. Optional', codespaceName bigint comment 'The name of the featureOfInterest, gml:name. Optional', description varchar(255) comment 'Description of the featureOfInterest, gml:description. Optional', geom GEOMETRY comment 'The geometry of the featureOfInterest (composed of the latitude and longitude) . Optional', descriptionXml longtext comment 'XML description of the feature, used when transactional profile is supported . Optional', url varchar(255) comment 'Reference URL to the feature if it is stored in another service, e.g. WFS. Optional but unique', primary key (featureOfInterestId)) ENGINE=InnoDB;
create table sos.featureofinteresttype (featureOfInterestTypeId bigint not null auto_increment comment 'Table primary key, used for relations', featureOfInterestType varchar(255) not null comment 'The featureOfInterestType value, e.g. http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint (OGC OM 2.0 specification) for point features', primary key (featureOfInterestTypeId)) comment='Table to store the FeatureOfInterestType information. Mapping file: mapping/core/FeatureOfInterestType.hbm.xml' ENGINE=InnoDB;
create table sos.featureparameter (parameterId bigint not null auto_increment comment 'Table primary key', featureOfInterestId bigint not null comment 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest.featureOfInterestId', name varchar(255) not null comment 'Parameter name', primary key (parameterId)) comment='Table to store additional featureOfInterest information (sf:parameter). Mapping file: mapping/core/FeatureParameter.hbm.xml' ENGINE=InnoDB;
create table sos.featurerelation (parentFeatureId bigint not null comment 'Foreign Key (FK) to the related parent featureOfInterest. Contains "featureOfInterest".featureOfInterestid', childFeatureId bigint not null comment 'Foreign Key (FK) to the related child featureOfInterest. Contains "featureOfInterest".featureOfInterestid', primary key (childFeatureId, parentFeatureId)) comment='Relation table to store feature hierarchies. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/transactional/TFeatureOfInterest.hbm.xml' ENGINE=InnoDB;
create table sos.geometryvalue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value GEOMETRY comment 'Geometry observation value', primary key (observationId)) comment='Value table for geometry observation' ENGINE=InnoDB;
create table sos.i18nfeatureofinterest (id bigint not null auto_increment comment 'Table primary key', objectId bigint not null comment 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestid', locale varchar(255) not null comment 'Locale/language identification, e.g. eng, ger', name varchar(255) comment 'Locale/language specific name of the featureOfInterest', description varchar(255) comment 'Locale/language specific description of the featureOfInterest', primary key (id)) comment='Table to i18n metadata for the featureOfInterest. Mapping file: mapping/i18n/HibernateI18NFeatureOfInterestMetadata.hbm.xml' ENGINE=InnoDB;
create table sos.i18nobservableproperty (id bigint not null auto_increment comment 'Table primary key', objectId bigint not null comment 'Foreign Key (FK) to the related observableProperty. Contains "observableProperty".observablePropertyid', locale varchar(255) not null comment 'Locale/language identification, e.g. eng, ger', name varchar(255) comment 'Locale/language specific name of the observableProperty', description varchar(255) comment 'Locale/language specific description of the observableProperty', primary key (id)) comment='Table to i18n metadata for the observableProperty/phenomenon. Mapping file: mapping/i18n/HibernateI18NObservablePropertyMetadata.hbm.xml' ENGINE=InnoDB;
create table sos.i18noffering (id bigint not null auto_increment comment 'Table primary key', objectId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', locale varchar(255) not null comment 'Locale/language identification, e.g. eng, ger', name varchar(255) comment 'Locale/language specific name of the offering', description varchar(255) comment 'Locale/language specific description of the offering', primary key (id)) comment='Table to i18n metadata for the offering. Mapping file: mapping/i18n/HibernateI18NOfferingMetadata.hbm.xml' ENGINE=InnoDB;
create table sos.i18nprocedure (id bigint not null auto_increment comment 'Table primary key', objectId bigint not null comment 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid', locale varchar(255) not null comment 'Locale/language identification, e.g. eng, ger', name varchar(255) comment 'Locale/language specific name of the procedure', description varchar(255) comment 'Locale/language specific description of the procedure', shortname varchar(255) comment 'Locale/language specific shortname of the procedure', longname varchar(255) comment 'Locale/language specific longname of the procedure', primary key (id)) comment='Table to i18n metadata for the procedure. Mapping file: mapping/i18n/HibernateI18NProcedureMetadata.hbm.xml' ENGINE=InnoDB;
create table sos.numericfeatparamvalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "featureParameter".parameterid', value double precision comment 'Numeric/Quantity parameter value', unitId bigint comment 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional', primary key (parameterId)) comment='Value table for numeric/Measurment parameter' ENGINE=InnoDB;
create table sos.numericparametervalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid', value double precision comment 'Numeric/Quantity parameter value', unitId bigint comment 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional', primary key (parameterId)) comment='Value table for numeric/Measurment parameter' ENGINE=InnoDB;
create table sos.numericseriesparamvalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the series parameter table. Contains seriesparameter.parameterid', value double precision comment 'Numeric/Quantity parameter value', unitId bigint comment 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional', primary key (parameterId)) comment='Value table for numeric/Measurment parameter' ENGINE=InnoDB;
create table sos.numericvalue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value double precision comment 'Numeric/Measurment observation value', primary key (observationId)) comment='Value table for numeric/Measurment observation' ENGINE=InnoDB;
create table sos.observableproperty (observablePropertyId bigint not null auto_increment comment 'Table primary key, used for relations', identifier varchar(255) not null comment 'The identifier of the observableProperty, gml:identifier. Used as parameter for queries. Unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the observableProperty, gml:name. Optional', codespaceName bigint comment 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional', description varchar(255) comment 'Description of the observableProperty, gml:description. Optional', disabled char(1) default 'F' not null comment 'For later use by the SOS. Indicator if this observableProperty should not be provided by the SOS.', hiddenChild char(1) default 'F' not null, primary key (observablePropertyId)) comment='Table to store the ObservedProperty/Phenomenon information. Mapping file: mapping/core/ObservableProperty.hbm.xml' ENGINE=InnoDB;
create table sos.observation (observationId bigint not null auto_increment comment 'Table primary key, used in relations', seriesId bigint not null comment 'Relation/foreign key to the associated series table. Contains "series".seriesId', phenomenonTimeStart timestamp not null comment 'Time stamp when the observation was started or phenomenon was observed', phenomenonTimeEnd timestamp not null comment 'Time stamp when the observation was stopped or phenomenon was observed', resultTime timestamp not null comment 'Time stamp when the observation was published or result was published/available', identifier varchar(255) comment 'The identifier of the observation, gml:identifier. Used as parameter for queries. Optional but unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the observation, gml:name. Optional', codespaceName bigint comment 'The name of the observation, gml:name. Optional', description varchar(255) comment 'The name of the observation, gml:name. Optional', deleted char(1) default 'F' not null comment 'Flag to indicate that this observation is deleted or not (OGC SWES 2.0 - DeleteSensor operation or not specified DeleteObservation)', child char(1) default 'F' not null comment 'Flag to indicate that this observation is a child observation for complex observation', parent char(1) default 'F' not null comment 'Flag to indicate that this observation is a parent observation for complex observation', validTimeStart timestamp default NULL comment 'Start time stamp for which the observation/result is valid, e.g. used for forecasting. Optional', validTimeEnd timestamp default NULL comment 'End time stamp for which the observation/result is valid, e.g. used for forecasting. Optional', samplingGeometry GEOMETRY comment 'Sampling geometry describes exactly where the measurement has taken place. Used for OGC SOS 2.0 Spatial Filtering Profile. Optional', unitId bigint comment 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional', primary key (observationId)) comment='Stores the observations. Mapping file: mapping/series/observation/ValuedObservation.hbm.xml' ENGINE=InnoDB;
create table sos.observationconstellation (observationConstellationId bigint not null auto_increment comment 'Table primary key, used for relations', observablePropertyId bigint not null comment 'Foreign Key (FK) to the related observableProperty. Contains "observableproperty".observablepropertyid', procedureId bigint not null comment 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid', observationTypeId bigint comment 'Foreign Key (FK) to the related observation type. Contains "observationtype".observationtypeid', offeringId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', deleted char(1) default 'F' not null comment 'Flag to indicate that this observationConstellation is deleted or not. Set if the related procedure is deleted via DeleteSensor operation (OGC SWES 2.0 - DeleteSensor operation)', hiddenChild char(1) default 'F' not null comment 'Flag to indicate that this observationConstellations procedure is a child procedure of another procedure. If true, the related procedure is not contained in OGC SOS 2.0 Capabilities but in OGC SOS 1.0.0 Capabilities.', disabled char(1) default 'F' not null comment 'Flag to indicate that this observationConstellations is disabled for insertion of observations. If false, new observation could be added to the SOS.', primary key (observationConstellationId)) comment='Table to store the ObservationConstellation information. Contains information about the constellation of observableProperty, procedure, offering and the observationType. Mapping file: mapping/core/ObservationConstellation.hbm.xml' ENGINE=InnoDB;
create table sos.observationhasoffering (observationId bigint not null comment 'Foreign Key (FK) to the related observation. Contains "observation".observationid', offeringId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', primary key (observationId, offeringId)) ENGINE=InnoDB;
create table sos.observationtype (observationTypeId bigint not null auto_increment comment 'Table primary key, used for relations', observationType varchar(255) not null comment 'The observationType value, e.g. http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement (OGC OM 2.0 specification) for OM_Measurement', primary key (observationTypeId)) comment='Table to store the observationTypes. Mapping file: mapping/core/ObservationType.hbm.xml' ENGINE=InnoDB;
create table sos.offering (offeringId bigint not null auto_increment comment 'Table primary key, used for relations', hibernateDiscriminator char(1) not null, identifier varchar(255) not null comment 'The identifier of the offering, gml:identifier. Used as parameter for queries. Unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the offering, gml:name. If available, displyed in the contents of the Capabilites. Optional', codespaceName bigint comment 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional', description varchar(255) comment 'Description of the offering, gml:description. Optional', disabled char(1) default 'F' not null comment 'For later use by the SOS. Indicator if this offering should not be provided by the SOS.', primary key (offeringId)) comment='Table to store the offering information. Mapping file: mapping/core/Offering.hbm.xml' ENGINE=InnoDB;
create table sos.offeringallowedfeaturetype (offeringId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', featureOfInterestTypeId bigint not null comment 'Foreign Key (FK) to the related featureOfInterestTypeId. Contains "featureOfInterestType".featureOfInterestTypeId', primary key (offeringId, featureOfInterestTypeId)) comment='Table to store relations between offering and allowed featureOfInterestTypes, defined in InsertSensor request. Mapping file: mapping/transactional/TOffering.hbm.xml' ENGINE=InnoDB;
create table sos.offeringallowedobservationtype (offeringId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', observationTypeId bigint not null comment 'Foreign Key (FK) to the related observationType. Contains "observationType".observationTypeId', primary key (offeringId, observationTypeId)) comment='Table to store relations between offering and allowed observationTypes, defined in InsertSensor request. Mapping file: mapping/transactional/TOffering.hbm.xml' ENGINE=InnoDB;
create table sos.offeringhasrelatedfeature (relatedFeatureId bigint not null comment 'Foreign Key (FK) to the related relatedFeature. Contains "relatedFeature".relatedFeatureid', offeringId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', primary key (offeringId, relatedFeatureId)) comment='Table to store relations between offering and associated relatedFeatures. Mapping file: mapping/transactional/TOffering.hbm.xml' ENGINE=InnoDB;
create table sos.offeringrelation (parentOfferingId bigint not null comment 'Foreign Key (FK) to the related parent offering. Contains "offering".offeringid', childOfferingId bigint not null comment 'Foreign Key (FK) to the related child offering. Contains "offering".offeringid', primary key (childOfferingId, parentOfferingId)) comment='Relation table to store offering hierarchies. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/core/Offering.hbm.xml' ENGINE=InnoDB;
create table sos.onlineresource (pkid bigint not null auto_increment comment 'Table primary key, used for relations', nilReason varchar(255), href varchar(255), type varchar(255), role varchar(255), arcrole varchar(255), title varchar(255), show varchar(255), actuate varchar(255), id varchar(255), uuid varchar(255), linkage varchar(255), protocol varchar(255), applicationProfile varchar(255), name varchar(255), description varchar(255), function varchar(255), primary key (pkid)) ENGINE=InnoDB;
create table sos.parameter (parameterId bigint not null auto_increment comment 'Table primary key', observationId bigint not null comment 'Foreign Key (FK) to the related observation. Contains "observation".observationId', name varchar(255) not null comment 'Parameter name', primary key (parameterId)) comment='Table to store additional obervation information (om:parameter). Mapping file: mapping/core/Parameter.hbm.xml' ENGINE=InnoDB;
create table sos.phonefacsimile (phoneId bigint not null, facsimile varchar(255) not null, primary key (phoneId, facsimile)) ENGINE=InnoDB;
create table sos.phonevoice (phoneId bigint not null, voice varchar(255) not null, primary key (phoneId, voice)) ENGINE=InnoDB;
create table sos.proceduredescriptionformat (procedureDescriptionFormatId bigint not null auto_increment comment 'Table primary key, used for relations', procedureDescriptionFormat varchar(255) not null comment 'The procedureDescriptionFormat value, e.g. http://www.opengis.net/sensorML/1.0.1 for procedures descriptions as specified in OGC SensorML 1.0.1', primary key (procedureDescriptionFormatId)) comment='Table to store the ProcedureDescriptionFormat information of procedures. Mapping file: mapping/core/ProcedureDescriptionFormat.hbm.xml' ENGINE=InnoDB;
create table sos.profileobservation (observationId bigint not null comment 'Foreign Key (FK) to the related parent complex observation. Contains "observation".observationid', childObservationId bigint not null comment 'Foreign Key (FK) to the related child complex observation. Contains "observation".observationid', primary key (observationId, childObservationId)) comment='Relation table for complex parent/child observations' ENGINE=InnoDB;
create table sos.profilevalue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', fromlevel double precision comment 'Value of fromLevel', tolevel double precision comment 'Value of toLevel', levelunitid bigint comment 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional', primary key (observationId)) comment='Value table for profile observation' ENGINE=InnoDB;
create table sos.relatedfeature (relatedFeatureId bigint not null auto_increment comment 'Table primary key, used for relations', featureOfInterestId bigint not null comment 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestid', primary key (relatedFeatureId)) comment='Table to store related feature information used in the OGC SOS 2.0 Capabilities (See also OGC SWES 2.0). Mapping file: mapping/transactionl/RelatedFeature.hbm.xml' ENGINE=InnoDB;
create table sos.relatedfeaturehasrole (relatedFeatureId bigint not null comment 'Foreign Key (FK) to the related relatedFeature. Contains "relatedFeature".relatedFeatureid', relatedFeatureRoleId bigint not null comment 'Foreign Key (FK) to the related relatedFeatureRole. Contains "relatedFeatureRole".relatedFeatureRoleid', primary key (relatedFeatureId, relatedFeatureRoleId)) comment='Relation table to store relatedFeatures and their associated relatedFeatureRoles. Mapping file: mapping/transactionl/RelatedFeature.hbm.xml' ENGINE=InnoDB;
create table sos.relatedfeaturerole (relatedFeatureRoleId bigint not null auto_increment comment 'Table primary key, used for relations', relatedFeatureRole varchar(255) not null comment 'The related feature role definition. See OGC SWES 2.0 specification', primary key (relatedFeatureRoleId)) comment='Table to store related feature role information used in the OGC SOS 2.0 Capabilities (See also OGC SWES 2.0). Mapping file: mapping/transactionl/RelatedFeatureRole.hbm.xml' ENGINE=InnoDB;
create table sos.relatedobservation (relatedObservationId bigint not null auto_increment comment 'Table primary key', observationId bigint comment 'Foreign Key (FK) to the observation. Contains "observation".observationId', relatedObservation bigint comment 'Relation/foreign key to the associated observation table. Contains "observation".observationId', role varchar(255) comment 'The role of the relation', relatedUrl varchar(255) comment 'An url to a related observation', primary key (relatedObservationId)) comment='The related observation of an observation.' ENGINE=InnoDB;
create table sos.relatedseries (relationId bigint not null auto_increment comment 'Table primary key', seriesId bigint not null comment 'Foreign Key (FK) to the series. Contains "series".seriesId', relatedSeries bigint comment 'Relation/foreign key to the associated series table. Contains "series".seriesId', role varchar(255) comment 'The role of the relation', relatedUrl varchar(255) comment 'An url to a related observation', primary key (relationId)) comment='The series relation should be used if the series table represents a timeseries.' ENGINE=InnoDB;
create table sos.responsibleparty (pkid bigint not null auto_increment comment 'Table primary key, used for relations', nilReason varchar(255), href varchar(255), type varchar(255), role varchar(255), arcrole varchar(255), title varchar(255), show varchar(255), actuate varchar(255), remoteSchema varchar(255), id varchar(255), uuid varchar(255), individualName varchar(255), organizationName varchar(255), positionName varchar(255), contactInfo bigint, ciRole bigint, primary key (pkid)) ENGINE=InnoDB;
create table sos.resulttemplate (resultTemplateId bigint not null auto_increment comment 'Table primary key', offeringId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', observablePropertyId bigint not null comment 'Foreign Key (FK) to the related observableProperty. Contains "observableProperty".observablePropertyId', procedureId bigint comment 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureId', featureOfInterestId bigint comment 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestid', identifier varchar(255) not null comment 'The resultTemplate identifier, required for InsertResult requests.', resultStructure longtext not null comment 'The resultStructure as XML string. Describes the types and order of the values in a GetResultResponse/InsertResultRequest', resultEncoding longtext not null comment 'The resultEncoding as XML string. Describes the encoding of the values in a GetResultResponse/InsertResultRequest', primary key (resultTemplateId)) comment='Table to store resultTemplates (OGC SOS 2.0 result handling profile). Mapping file: mapping/transactionl/ResultTemplate.hbm.xml' ENGINE=InnoDB;
create table sos.role (pkid bigint not null auto_increment comment 'Table primary key, used for relations', codeList varchar(255) not null, codeListValue varchar(255) not null, primary key (pkid)) ENGINE=InnoDB;
create table sos.sensorsystem (parentSensorId bigint not null comment 'Foreign Key (FK) to the related parent procedure. Contains "procedure".procedureid', childSensorId bigint not null comment 'Foreign Key (FK) to the related child procedure. Contains "procedure".procedureid', primary key (childSensorId, parentSensorId)) comment='Relation table to store procedure hierarchies. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/transactional/TProcedure.hbm.xml' ENGINE=InnoDB;
create table sos.series (seriesId bigint not null auto_increment comment 'Table primary key, used for relations', featureOfInterestId bigint not null comment 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestId', observablePropertyId bigint not null comment 'Foreign Key (FK) to the related observableProperty. Contains "observableproperty".observablepropertyid', procedureId bigint not null comment 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid', offeringId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', deleted char(1) default 'F' not null comment 'Flag to indicate that this series is deleted or not. Set if the related procedure is deleted via DeleteSensor operation (OGC SWES 2.0 - DeleteSensor operation)', published char(1) default 'T' not null comment 'Flag to indicate that this series is published or not. A not published series is not contained in GetObservation and GetDataAvailability responses', hiddenChild char(1) default 'F' not null comment 'TODO', firstTimeStamp timestamp default NULL comment 'The time stamp of the first (temporal) observation associated to this series', lastTimeStamp timestamp default NULL comment 'The time stamp of the last (temporal) observation associated to this series', firstNumericValue double precision comment 'The value of the first (temporal) observation associated to this series', lastNumericValue double precision comment 'The value of the last (temporal) observation associated to this series', unitId bigint comment 'Foreign Key (FK) to the related unit of the first/last numeric values . Contains "unit".unitid', identifier varchar(255) comment 'The identifier of the series, gml:identifier. Unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the series, gml:name. Optional', codespaceName bigint comment 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional', description varchar(255) comment 'Description of the series, gml:description. Optional', seriesType varchar(255) comment 'Definition of the series type, e.g. measurement for OM_Measurement. Optional', primary key (seriesId)) comment='Table to store a (time-) series which consists of featureOfInterest, observableProperty, and procedure. Mapping file: mapping/series/Series.hbm.xml' ENGINE=InnoDB;
create table sos.seriesmetadata (metadataId bigint not null auto_increment comment 'Table primary key, used for relations', seriesId bigint not null comment 'Foreign Key (FK) to the related series. Contains "series".seriesId', identifier varchar(255) not null comment 'The identifier of the metadata value.', value varchar(255) not null comment 'The metadata value.', domain varchar(255) not null comment 'The metadata value domain.', primary key (metadataId)) ENGINE=InnoDB;
create table sos.seriesparameter (parameterId bigint not null auto_increment comment 'Table primary key', seriesId bigint not null comment 'Foreign Key (FK) to the related series. Contains "series".seriesId', name varchar(255) not null comment 'Parameter name', primary key (parameterId)) comment='Table to store additional obervation information (om:parameter). Mapping file: mapping/series/metadata/SeriesParameter.hbm.xml' ENGINE=InnoDB;
create table sos.specimen (featureOfInterestId bigint not null comment 'Foreign Key (FK) to the related featureOfInterest from the featureOfInterest table. Contains "featureOfInterest".featureOfInterestId', materialClass varchar(255) not null comment 'Material class', samplingTimeStart timestamp not null comment 'Time stamp when the specimen was started', samplingTimeEnd timestamp not null comment 'Time stamp when the specimen was stopped', samplingMethod varchar(255) comment 'Sampling method as referenced link', size double precision comment 'Sampling method as referenced link', sizeUnitId bigint comment 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional', currentLocation varchar(255) comment 'Sampling method as referenced link', specimenType varchar(255) comment 'Specimen type', primary key (featureOfInterestId)) ENGINE=InnoDB;
create table sos.swedataarrayvalue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value longtext comment 'SweDataArray observation value', primary key (observationId)) comment='Value table for SweDataArray observation' ENGINE=InnoDB;
create table sos.telephone (pkid bigint not null auto_increment comment 'Table primary key, used for relations', nilReason varchar(255), href varchar(255), type varchar(255), role varchar(255), arcrole varchar(255), title varchar(255), show varchar(255), actuate varchar(255), remoteSchema varchar(255), id varchar(255), uuid varchar(255), primary key (pkid)) ENGINE=InnoDB;
create table sos.textfeatparamvalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "featureParameter".parameterid', value varchar(255) comment 'Text parameter value', primary key (parameterId)) comment='Value table for text parameter' ENGINE=InnoDB;
create table sos.textparametervalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid', value varchar(255) comment 'Text parameter value', primary key (parameterId)) comment='Value table for text parameter' ENGINE=InnoDB;
create table sos.textseriesparamvalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the series parameter table. Contains seriesparameter.parameterid', value varchar(255) comment 'Text parameter value', primary key (parameterId)) comment='Value table for text parameter' ENGINE=InnoDB;
create table sos.textvalue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value longtext comment 'Text observation value', identifier varchar(255) comment 'SweText observation identifier', name varchar(255) comment 'SweText observation name', description varchar(255) comment 'SweText observation description', primary key (observationId)) comment='Value table for text observation' ENGINE=InnoDB;
create table sos.unit (unitId bigint not null auto_increment comment 'Table primary key, used for relations', unit varchar(255) not null comment 'The unit of measure of observations. See http://unitsofmeasure.org/ucum.html', name varchar(255) comment 'The name of the unit of measure of observations', link varchar(255) comment 'The link to an external description of the unit of measure of observations, e.g. a vocabulary', primary key (unitId)) comment='Table to store the unit of measure information, used in observations. Mapping file: mapping/core/Unit.hbm.xml' ENGINE=InnoDB;
create table sos.validproceduretime (validProcedureTimeId bigint not null auto_increment comment 'Table primary key', procedureId bigint not null comment 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid', procedureDescriptionFormatId bigint not null comment 'Foreign Key (FK) to the related procedureDescriptionFormat. Contains "procedureDescriptionFormat".procedureDescriptionFormatid', startTime timestamp not null comment 'Timestamp since this procedure description is valid', endTime timestamp default NULL comment 'Timestamp until this procedure description is invalid', descriptionXml longtext not null comment 'Procedure description as XML string', primary key (validProcedureTimeId)) comment='Table to store procedure descriptions which were inserted or updated via the transactional Profile. Mapping file: mapping/transactionl/ValidProcedureTime.hbm.xml' ENGINE=InnoDB;
create table sos.verticalcrs (pkid bigint not null auto_increment comment 'Table primary key, used for relations', nilReason varchar(255), href varchar(255), type varchar(255), role varchar(255), arcrole varchar(255), title varchar(255), show varchar(255), actuate varchar(255), remoteSchema varchar(255), identifier varchar(255) comment 'The identifier of the object, gml:identifier. Used as parameter for queries. Optional but unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the object, gml:name. Optional', codespaceName bigint comment 'The name of the object, gml:name. Optional', description varchar(255) comment 'Description of the object, gml:description. Optional', remarks varchar(255), verticalCS bigint, verticalDatum bigint, primary key (pkid)) ENGINE=InnoDB;
create table sos.verticalcrscope (verticalcrsId bigint not null, scope varchar(255) not null, primary key (verticalcrsId, scope)) ENGINE=InnoDB;
create table sos.verticalcrsdomofval (verticalcrsId bigint not null, domainOfValidity bigint not null, primary key (verticalcrsId, domainOfValidity)) ENGINE=InnoDB;
create table sos.verticalcs (pkid bigint not null auto_increment comment 'Table primary key, used for relations', nilReason varchar(255), href varchar(255), type varchar(255), role varchar(255), arcrole varchar(255), title varchar(255), show varchar(255), actuate varchar(255), remoteSchema varchar(255), identifier varchar(255) comment 'The identifier of the object, gml:identifier. Used as parameter for queries. Optional but unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the object, gml:name. Optional', codespaceName bigint comment 'The name of the object, gml:name. Optional', description varchar(255) comment 'Description of the object, gml:description. Optional', remarks varchar(255), aggregation varchar(255), primary key (pkid)) ENGINE=InnoDB;
create table sos.verticalcscoodsysaxis (verticalCSId bigint not null, coordinateSystemAxis bigint not null, primary key (verticalCSId, coordinateSystemAxis)) ENGINE=InnoDB;
create table sos.verticaldatum (pkid bigint not null auto_increment comment 'Table primary key, used for relations', nilReason varchar(255), href varchar(255), type varchar(255), role varchar(255), arcrole varchar(255), title varchar(255), show varchar(255), actuate varchar(255), remoteSchema varchar(255), identifier varchar(255) comment 'The identifier of the object, gml:identifier. Used as parameter for queries. Optional but unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the object, gml:name. Optional', codespaceName bigint comment 'The name of the object, gml:name. Optional', description varchar(255) comment 'Description of the object, gml:description. Optional', remarks varchar(255), domainOfValidityId bigint, anchorDefinition varchar(255), codespaceAnchorDef bigint, realizationEpoch timestamp default NULL, primary key (pkid)) ENGINE=InnoDB;
create table sos.verticaldatumscope (verticalDatumId bigint not null, scope varchar(255) not null, primary key (verticalDatumId, scope)) ENGINE=InnoDB;
create table sos.verticalexextent (pkid bigint not null auto_increment comment 'Table primary key, used for relations', nilReason varchar(255), href varchar(255), type varchar(255), role varchar(255), arcrole varchar(255), title varchar(255), show varchar(255), actuate varchar(255), remoteSchema varchar(255), id varchar(255), uuid varchar(255), minimumValue double precision, maximumValue double precision, verticalCRSId bigint, primary key (pkid)) ENGINE=InnoDB;
create table sos.wmlmonitoringpoint (featureOfInterestId bigint not null comment 'Foreign Key (FK) to the related featureOfInterest from the featureOfInterest table. Contains "featureOfInterest".featureOfInterestId', primary key (featureOfInterestId)) ENGINE=InnoDB;
create table sos.wmlmprelatedparty (featureOfInterestId bigint not null, responsiblePartyId bigint not null, primary key (featureOfInterestId, responsiblePartyId)) ENGINE=InnoDB;
create table sos.wmlmpverticaldatum (featureOfInterestId bigint not null, verticalDatumId bigint not null, primary key (featureOfInterestId, verticalDatumId)) ENGINE=InnoDB;
create table sos.xmlfeatparamvalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "featureParameter".parameterid', value longtext comment 'XML parameter value', primary key (parameterId)) comment='Value table for XML parameter' ENGINE=InnoDB;
create table sos.xmlparametervalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid', value longtext comment 'XML parameter value', primary key (parameterId)) comment='Value table for XML parameter' ENGINE=InnoDB;
create table sos.xmlseriesparamvalue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the series parameter table. Contains seriesparameter.parameterid', value longtext comment 'XML parameter value', primary key (parameterId)) comment='Value table for XML parameter' ENGINE=InnoDB;
alter table sos.`procedure` add constraint procIdentifierUK unique (identifier);
create index booleanFeatParamIdx on sos.booleanfeatparamvalue (value);
create index booleanParamIdx on sos.booleanparametervalue (value);
create index seriesBooleanParamIdx on sos.booleanseriesparamvalue (value);
create index categoryFeatParamIdx on sos.categoryfeatparamvalue (value);
create index categoryParamIdx on sos.categoryparametervalue (value);
create index seriesCategoryParamIdx on sos.categoryseriesparamvalue (value);
alter table sos.codespace add constraint codespaceUK unique (codespace);
alter table sos.coordinatesystemaxis add constraint csaIdentifierUK unique (identifier);
create index countFeatParamIdx on sos.countfeatparamvalue (value);
create index countParamIdx on sos.countparametervalue (value);
create index seriesCountParamIdx on sos.countseriesparamvalue (value);
alter table sos.domainofvalidity add constraint dovIdentifierUK unique (identifier);
alter table sos.featureofinterest add constraint foiIdentifierUK unique (identifier);
alter table sos.featureofinterest add constraint featureUrl unique (url);
alter table sos.featureofinteresttype add constraint featureTypeUK unique (featureOfInterestType);
create index featParamNameIdx on sos.featureparameter (name);
alter table sos.i18nfeatureofinterest add constraint i18nFeatureIdentity unique (objectId, locale);
create index i18nFeatureIdx on sos.i18nfeatureofinterest (objectId);
alter table sos.i18nobservableproperty add constraint i18nobsPropIdentity unique (objectId, locale);
create index i18nObsPropIdx on sos.i18nobservableproperty (objectId);
alter table sos.i18noffering add constraint i18nOfferingIdentity unique (objectId, locale);
create index i18nOfferingIdx on sos.i18noffering (objectId);
alter table sos.i18nprocedure add constraint i18nProcedureIdentity unique (objectId, locale);
create index i18nProcedureIdx on sos.i18nprocedure (objectId);
create index quantityFeatParamIdx on sos.numericfeatparamvalue (value);
create index quantityParamIdx on sos.numericparametervalue (value);
create index seriesQuantityParamIdx on sos.numericseriesparamvalue (value);
alter table sos.observableproperty add constraint obsPropIdentifierUK unique (identifier);
create index obsSeriesIdx on sos.observation (seriesId);
create index obsPhenTimeStartIdx on sos.observation (phenomenonTimeStart);
create index obsPhenTimeEndIdx on sos.observation (phenomenonTimeEnd);
create index obsResultTimeIdx on sos.observation (resultTime);
alter table sos.observationconstellation add constraint obsnConstellationIdentity unique (observablePropertyId, procedureId, offeringId);
create index obsConstObsPropIdx on sos.observationconstellation (observablePropertyId);
create index obsConstProcedureIdx on sos.observationconstellation (procedureId);
create index obsConstOfferingIdx on sos.observationconstellation (offeringId);
create index obshasoffobservationidx on sos.observationhasoffering (observationId);
create index obshasoffofferingidx on sos.observationhasoffering (offeringId);
alter table sos.observationtype add constraint observationTypeUK unique (observationType);
alter table sos.offering add constraint offIdentifierUK unique (identifier);
create index paramNameIdx on sos.parameter (name);
alter table sos.proceduredescriptionformat add constraint procDescFormatUK unique (procedureDescriptionFormat);
alter table sos.relatedfeaturerole add constraint relFeatRoleUK unique (relatedFeatureRole);
create index relatedObsObsIdx on sos.relatedobservation (observationId);
create index seriesRelationIdx on sos.relatedseries (seriesId);
create index resultTempOfferingIdx on sos.resulttemplate (offeringId);
create index resultTempeObsPropIdx on sos.resulttemplate (observablePropertyId);
create index resultTempProcedureIdx on sos.resulttemplate (procedureId);
create index resultTempIdentifierIdx on sos.resulttemplate (identifier);
alter table sos.series add constraint seriesIdentity unique (featureOfInterestId, observablePropertyId, procedureId, offeringId);
alter table sos.series add constraint seriesIdentifierUK unique (identifier);
create index seriesFeatureIdx on sos.series (featureOfInterestId);
create index seriesObsPropIdx on sos.series (observablePropertyId);
create index seriesProcedureIdx on sos.series (procedureId);
create index seriesOfferingIdx on sos.series (offeringId);
create index seriesParamNameIdx on sos.seriesparameter (name);
create index textFeatParamIdx on sos.textfeatparamvalue (value);
create index textParamIdx on sos.textparametervalue (value);
create index seriesTextParamIdx on sos.textseriesparamvalue (value);
alter table sos.unit add constraint unitUK unique (unit);
create index validProcedureTimeStartTimeIdx on sos.validproceduretime (startTime);
create index validProcedureTimeEndTimeIdx on sos.validproceduretime (endTime);
alter table sos.verticalcrs add constraint vcrsIdentifierUK unique (identifier);
alter table sos.verticalcs add constraint vcsIdentifierUK unique (identifier);
alter table sos.verticaldatum add constraint vdIdentifierUK unique (identifier);
create index vddovIdx on sos.verticaldatum (domainOfValidityId);
create index vevcrsIdx on sos.verticalexextent (verticalCRSId);
create index seriesXmlParamIdx on sos.xmlseriesparamvalue (value);
alter table sos.`procedure` add constraint procProcDescFormatFk foreign key (procedureDescriptionFormatId) references sos.proceduredescriptionformat (procedureDescriptionFormatId);
alter table sos.`procedure` add constraint procCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.`procedure` add constraint procCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.`procedure` add constraint typeOfFk foreign key (typeOf) references sos.`procedure` (procedureId);
alter table sos.addressdeliveryPoint add constraint adddelpoiFk foreign key (addressId) references sos.address (pkid);
alter table sos.addressemail add constraint addemailFk foreign key (addressId) references sos.address (pkid);
alter table sos.blobvalue add constraint observationBlobValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.booleanfeatparamvalue add constraint featParamBooleanValueFk foreign key (parameterId) references sos.featureparameter (parameterId);
alter table sos.booleanparametervalue add constraint parameterBooleanValueFk foreign key (parameterId) references sos.parameter (parameterId);
alter table sos.booleanseriesparamvalue add constraint seriesParamBooleanValueFk foreign key (parameterId) references sos.seriesparameter (parameterId);
alter table sos.booleanvalue add constraint observationBooleanValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.categoryfeatparamvalue add constraint featParamCategoryValueFk foreign key (parameterId) references sos.featureparameter (parameterId);
alter table sos.categoryfeatparamvalue add constraint catfeatparamvalueUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.categoryparametervalue add constraint parameterCategoryValueFk foreign key (parameterId) references sos.parameter (parameterId);
alter table sos.categoryparametervalue add constraint catParamValueUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.categoryseriesparamvalue add constraint seriesParamCategoryValueFk foreign key (parameterId) references sos.seriesparameter (parameterId);
alter table sos.categoryseriesparamvalue add constraint seriesCatParamValueUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.categoryvalue add constraint observationCategoryValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.complexvalue add constraint observationComplexValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.compositeobservation add constraint observationChildFk foreign key (childObservationId) references sos.observation (observationId);
alter table sos.compositeobservation add constraint observationParentFK foreign key (observationId) references sos.complexvalue (observationId);
alter table sos.compositephenomenon add constraint observablePropertyChildFk foreign key (childObservablePropertyId) references sos.observableproperty (observablePropertyId);
alter table sos.compositephenomenon add constraint observablePropertyParentFk foreign key (parentObservablePropertyId) references sos.observableproperty (observablePropertyId);
alter table sos.contact add constraint contactphoneFk foreign key (phoneId) references sos.telephone (pkid);
alter table sos.contact add constraint contactaddressFk foreign key (addressId) references sos.address (pkid);
alter table sos.contact add constraint contactonlineresFk foreign key (onlineresourceid) references sos.onlineresource (pkid);
alter table sos.coordinatesystemaxis add constraint csaCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.coordinatesystemaxis add constraint csaCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.coordinatesystemaxis add constraint scsacodeaaFk foreign key (codespaceAxisAbbrev) references sos.codespace (codespaceId);
alter table sos.coordinatesystemaxis add constraint scsacodeadFk foreign key (codespaceAxisDirection) references sos.codespace (codespaceId);
alter table sos.coordinatesystemaxis add constraint scsacodermFk foreign key (codespaceRangeMeaning) references sos.codespace (codespaceId);
alter table sos.coordinatesystemaxis add constraint csaUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.countfeatparamvalue add constraint featParamCountValueFk foreign key (parameterId) references sos.featureparameter (parameterId);
alter table sos.countparametervalue add constraint parameterCountValueFk foreign key (parameterId) references sos.parameter (parameterId);
alter table sos.countseriesparamvalue add constraint seriesParamCountValueFk foreign key (parameterId) references sos.seriesparameter (parameterId);
alter table sos.countvalue add constraint observationCountValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.domainofvalidity add constraint codCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.domainofvalidity add constraint codCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.domainofvalidity add constraint dovexeFk foreign key (exExtentId) references sos.exextent (pkid);
alter table sos.exextentverticalext add constraint FK_qppk0ymn6peh5v1571aajqa8g foreign key (exVerticalExtentId) references sos.verticalexextent (pkid);
alter table sos.exextentverticalext add constraint exeexveFk foreign key (exExtentId) references sos.exextent (pkid);
alter table sos.featureofinterest add constraint featureFeatureTypeFk foreign key (featureOfInterestTypeId) references sos.featureofinteresttype (featureOfInterestTypeId);
alter table sos.featureofinterest add constraint featureCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.featureofinterest add constraint featureCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.featureparameter add constraint FK_4ps6yv41rwnbu3q0let2v7772 foreign key (featureOfInterestId) references sos.featureofinterest (featureOfInterestId);
alter table sos.featurerelation add constraint featureOfInterestChildFk foreign key (childFeatureId) references sos.featureofinterest (featureOfInterestId);
alter table sos.featurerelation add constraint featureOfInterestParentFk foreign key (parentFeatureId) references sos.featureofinterest (featureOfInterestId);
alter table sos.geometryvalue add constraint observationGeometryValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.i18nfeatureofinterest add constraint i18nFeatureFeatureFk foreign key (objectId) references sos.featureofinterest (featureOfInterestId);
alter table sos.i18nobservableproperty add constraint i18nObsPropObsPropFk foreign key (objectId) references sos.observableproperty (observablePropertyId);
alter table sos.i18noffering add constraint i18nOfferingOfferingFk foreign key (objectId) references sos.offering (offeringId);
alter table sos.i18nprocedure add constraint i18nProcedureProcedureFk foreign key (objectId) references sos.`procedure` (procedureId);
alter table sos.numericfeatparamvalue add constraint featParamNumericValueFk foreign key (parameterId) references sos.featureparameter (parameterId);
alter table sos.numericfeatparamvalue add constraint quanfeatparamvalueUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.numericparametervalue add constraint parameterNumericValueFk foreign key (parameterId) references sos.parameter (parameterId);
alter table sos.numericparametervalue add constraint quanParamValueUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.numericseriesparamvalue add constraint seriesParamNumericValueFk foreign key (parameterId) references sos.seriesparameter (parameterId);
alter table sos.numericseriesparamvalue add constraint seriesQuanParamValueUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.numericvalue add constraint observationNumericValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.observableproperty add constraint obsPropCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.observableproperty add constraint obsPropCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.observation add constraint observationSeriesFk foreign key (seriesId) references sos.series (seriesId);
alter table sos.observation add constraint obsCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.observation add constraint obsCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.observation add constraint observationUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.observationconstellation add constraint obsConstObsPropFk foreign key (observablePropertyId) references sos.observableproperty (observablePropertyId);
alter table sos.observationconstellation add constraint obsnConstProcedureFk foreign key (procedureId) references sos.`procedure` (procedureId);
alter table sos.observationconstellation add constraint obsConstObservationIypeFk foreign key (observationTypeId) references sos.observationtype (observationTypeId);
alter table sos.observationconstellation add constraint obsConstOfferingFk foreign key (offeringId) references sos.offering (offeringId);
alter table sos.observationhasoffering add constraint observationOfferingFk foreign key (offeringId) references sos.offering (offeringId);
alter table sos.observationhasoffering add constraint FK_s19siow5aetbwb8ppww4kb96n foreign key (observationId) references sos.observation (observationId);
alter table sos.offering add constraint offCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.offering add constraint offCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.offeringallowedfeaturetype add constraint offeringFeatureTypeFk foreign key (featureOfInterestTypeId) references sos.featureofinteresttype (featureOfInterestTypeId);
alter table sos.offeringallowedfeaturetype add constraint FK_cu8nfsf9q5vsn070o2d3u6chg foreign key (offeringId) references sos.offering (offeringId);
alter table sos.offeringallowedobservationtype add constraint offeringObservationTypeFk foreign key (observationTypeId) references sos.observationtype (observationTypeId);
alter table sos.offeringallowedobservationtype add constraint FK_jehw0637hllvta9ao1tqdhrtm foreign key (offeringId) references sos.offering (offeringId);
alter table sos.offeringhasrelatedfeature add constraint relatedFeatureOfferingFk foreign key (offeringId) references sos.offering (offeringId);
alter table sos.offeringhasrelatedfeature add constraint offeringRelatedFeatureFk foreign key (relatedFeatureId) references sos.relatedfeature (relatedFeatureId);
alter table sos.offeringrelation add constraint offeringChildFk foreign key (childOfferingId) references sos.offering (offeringId);
alter table sos.offeringrelation add constraint offeringParenfFk foreign key (parentOfferingId) references sos.offering (offeringId);
alter table sos.parameter add constraint FK_3v5iovcndi9w0hgh827hcvivw foreign key (observationId) references sos.observation (observationId);
alter table sos.phonefacsimile add constraint phonefacsimilefk foreign key (phoneId) references sos.telephone (pkid);
alter table sos.phonevoice add constraint phonevoicefk foreign key (phoneId) references sos.telephone (pkid);
alter table sos.profileobservation add constraint profileObsChildFk foreign key (childObservationId) references sos.observation (observationId);
alter table sos.profileobservation add constraint profileObsParentFK foreign key (observationId) references sos.profilevalue (observationId);
alter table sos.profilevalue add constraint observationProfileValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.profilevalue add constraint profileUnitFk foreign key (levelunitid) references sos.unit (unitId);
alter table sos.relatedfeature add constraint relatedFeatureFeatureFk foreign key (featureOfInterestId) references sos.featureofinterest (featureOfInterestId);
alter table sos.relatedfeaturehasrole add constraint relatedFeatRelatedFeatRoleFk foreign key (relatedFeatureRoleId) references sos.relatedfeaturerole (relatedFeatureRoleId);
alter table sos.relatedfeaturehasrole add constraint FK_5fd921q6mnbkc57mgm5g4uyyn foreign key (relatedFeatureId) references sos.relatedfeature (relatedFeatureId);
alter table sos.relatedobservation add constraint FK_g0f0mpuxn3co65uwud4pwxh4q foreign key (observationId) references sos.observation (observationId);
alter table sos.relatedobservation add constraint FK_m4nuof4x6w253biuu1r6ttnqc foreign key (relatedObservation) references sos.observation (observationId);
alter table sos.relatedseries add constraint relatedSeriesFk foreign key (relatedSeries) references sos.series (seriesId);
alter table sos.responsibleparty add constraint rpcontactFk foreign key (contactInfo) references sos.contact (pkid);
alter table sos.responsibleparty add constraint rproleFk foreign key (ciRole) references sos.role (pkid);
alter table sos.resulttemplate add constraint resultTemplateOfferingIdx foreign key (offeringId) references sos.offering (offeringId);
alter table sos.resulttemplate add constraint resultTemplateObsPropFk foreign key (observablePropertyId) references sos.observableproperty (observablePropertyId);
alter table sos.resulttemplate add constraint resultTemplateProcedureFk foreign key (procedureId) references sos.`procedure` (procedureId);
alter table sos.resulttemplate add constraint resultTemplateFeatureIdx foreign key (featureOfInterestId) references sos.featureofinterest (featureOfInterestId);
alter table sos.sensorsystem add constraint procedureChildFk foreign key (childSensorId) references sos.`procedure` (procedureId);
alter table sos.sensorsystem add constraint procedureParenfFk foreign key (parentSensorId) references sos.`procedure` (procedureId);
alter table sos.series add constraint seriesFeatureFk foreign key (featureOfInterestId) references sos.featureofinterest (featureOfInterestId);
alter table sos.series add constraint seriesObPropFk foreign key (observablePropertyId) references sos.observableproperty (observablePropertyId);
alter table sos.series add constraint seriesProcedureFk foreign key (procedureId) references sos.`procedure` (procedureId);
alter table sos.series add constraint seriesOfferingFk foreign key (offeringId) references sos.offering (offeringId);
alter table sos.series add constraint seriesUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.series add constraint seriesCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.series add constraint seriesCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.specimen add constraint specimenFeatureFk foreign key (featureOfInterestId) references sos.featureofinterest (featureOfInterestId);
alter table sos.specimen add constraint observationUnitFk foreign key (sizeUnitId) references sos.unit (unitId);
alter table sos.swedataarrayvalue add constraint observationSweDataArrayValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.textfeatparamvalue add constraint featParamTextValueFk foreign key (parameterId) references sos.featureparameter (parameterId);
alter table sos.textparametervalue add constraint parameterTextValueFk foreign key (parameterId) references sos.parameter (parameterId);
alter table sos.textseriesparamvalue add constraint seriesParamTextValueFk foreign key (parameterId) references sos.seriesparameter (parameterId);
alter table sos.textvalue add constraint observationTextValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.validproceduretime add constraint validProcedureTimeProcedureFk foreign key (procedureId) references sos.`procedure` (procedureId);
alter table sos.validproceduretime add constraint validProcProcDescFormatFk foreign key (procedureDescriptionFormatId) references sos.proceduredescriptionformat (procedureDescriptionFormatId);
alter table sos.verticalcrs add constraint vcrsCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.verticalcrs add constraint vcrsCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.verticalcrs add constraint vcrsvcsfk foreign key (verticalCS) references sos.verticalcs (pkid);
alter table sos.verticalcrs add constraint vcrsvdfk foreign key (verticalDatum) references sos.verticaldatum (pkid);
alter table sos.verticalcrscope add constraint vcrsscopefk foreign key (verticalcrsId) references sos.verticalcrs (pkid);
alter table sos.verticalcrsdomofval add constraint vcrsdovfk foreign key (domainOfValidity) references sos.domainofvalidity (pkid);
alter table sos.verticalcrsdomofval add constraint vcrsdovidfk foreign key (verticalcrsId) references sos.verticalcrs (pkid);
alter table sos.verticalcs add constraint vcsCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.verticalcs add constraint vcsCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.verticalcscoodsysaxis add constraint vcscsafk foreign key (coordinateSystemAxis) references sos.coordinatesystemaxis (pkid);
alter table sos.verticalcscoodsysaxis add constraint vcscsaidfk foreign key (verticalCSId) references sos.verticalcs (pkid);
alter table sos.verticaldatum add constraint vdCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.verticaldatum add constraint vdCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.verticaldatum add constraint vddovFk foreign key (domainOfValidityId) references sos.domainofvalidity (pkid);
alter table sos.verticaldatum add constraint vdCodespaceADefFk foreign key (codespaceAnchorDef) references sos.codespace (codespaceId);
alter table sos.verticaldatumscope add constraint vdscopefk foreign key (verticalDatumId) references sos.verticaldatum (pkid);
alter table sos.verticalexextent add constraint vevcrsFk foreign key (verticalCRSId) references sos.verticalcrs (pkid);
alter table sos.wmlmonitoringpoint add constraint wmlmpFeatureFk foreign key (featureOfInterestId) references sos.featureofinterest (featureOfInterestId);
alter table sos.wmlmprelatedparty add constraint wmlmprpFk foreign key (responsiblePartyId) references sos.responsibleparty (pkid);
alter table sos.wmlmprelatedparty add constraint FK_nyt2o5m81p35lqk7rctyook4o foreign key (featureOfInterestId) references sos.featureofinterest (featureOfInterestId);
alter table sos.wmlmpverticaldatum add constraint FK_r4s9vt1g0o5o4lfi37qrh2yad foreign key (verticalDatumId) references sos.verticaldatum (pkid);
alter table sos.wmlmpverticaldatum add constraint wmlmpvdFk foreign key (featureOfInterestId) references sos.featureofinterest (featureOfInterestId);
alter table sos.xmlfeatparamvalue add constraint featParamXmlValueFk foreign key (parameterId) references sos.featureparameter (parameterId);
alter table sos.xmlparametervalue add constraint parameterXmlValueFk foreign key (parameterId) references sos.parameter (parameterId);
alter table sos.xmlseriesparamvalue add constraint seriesParamXmlValueFk foreign key (parameterId) references sos.seriesparameter (parameterId);