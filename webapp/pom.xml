<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>52n-sos</artifactId>
        <groupId>org.n52.sensorweb.sos</groupId>
        <version>4.1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>webapp</artifactId>
    <packaging>war</packaging>
    <name>52°North SOS - Webapp</name>
    <description>52°North Sensor Observation Service WAR</description>
    <properties>
        <sqliteSettingDatabase>${project.parent.basedir}/misc/conf/default_settings.db</sqliteSettingDatabase>
        <databaseConfigurationFile>${project.parent.basedir}/misc/conf/datasource.properties</databaseConfigurationFile>
        <!-- do not overwrite this one! -->
        <sqliteSettingDatabaseTargetFile>${project.build.directory}/${project.build.finalName}/configuration.db</sqliteSettingDatabaseTargetFile>
        <sos.test.suite.version>1.0.0-M2</sos.test.suite.version>
    </properties>
    <build>
        <finalName>${conf.sos.name}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                    	<id>hibernate-mapping</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>hibernate-mappings</artifactId>
                                    <overWrite>false</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <includes>**/*.xml</includes>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                        </configuration>
                    </execution>
                    <execution>
                    	<id>example-data</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>example-data</artifactId>
                                    <overWrite>false</overWrite>
                                </artifactItem>
                            </artifactItems>
                            <includes>**/*.json</includes>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
                    <webResources>
                        <resource>
                            <directory>src/main/webapp</directory>
                            <filtering>true</filtering>
                        </resource>
                        <resource>
                            <directory>src/main/resources</directory>
                            <filtering>true</filtering>
                            <targetPath>WEB-INF/classes</targetPath>
                        </resource>
                        <resource>
                            <directory>../misc/db</directory>
                            <filtering>false</filtering>
                            <targetPath>sql</targetPath>
                            <includes>
                                <include>**/*.sql</include>
                            </includes>
                        </resource>
                    </webResources>
                    <overlays>
                        <overlay>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>views</artifactId>
                        </overlay>
                    </overlays>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings
                only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>[2.6,)</versionRange>
                                        <goals>
                                            <goal>unpack</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>profile-xml</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>profile-coding</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>api</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>sqlite-config</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>admin</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>cache</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>coding-ows-v110</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>coding-sensorML-v101</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>coding-sos-v20</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>core-v20</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>gc-dao</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-session-factory</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-common</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-dao</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-feature</artifactId>
        </dependency>
        <!-- dependencies for integration test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.n52.sensorweb</groupId>
            <artifactId>52n-xml-gml-v321</artifactId>
        </dependency>
        <dependency>
            <groupId>org.n52.sensorweb</groupId>
            <artifactId>52n-xml-sweCommon-v20</artifactId>
        </dependency>
        <dependency>
            <groupId>org.n52.sensorweb</groupId>
            <artifactId>52n-xml-sweCommon-v101</artifactId>
        </dependency>
        <dependency>
            <groupId>org.n52.sensorweb</groupId>
            <artifactId>52n-xml-sensorML-v101</artifactId>
        </dependency>
        <dependency>
            <groupId>org.n52.sensorweb</groupId>
            <artifactId>52n-xml-om-v20</artifactId>
        </dependency>
        <dependency>
            <groupId>org.n52.sensorweb</groupId>
            <artifactId>52n-xml-sampling-v20</artifactId>
        </dependency>
        <dependency>
            <groupId>org.n52.sensorweb</groupId>
            <artifactId>52n-xml-ows-v110</artifactId>
        </dependency>
        <dependency>
            <groupId>org.n52.sensorweb</groupId>
            <artifactId>52n-xml-sos-v20</artifactId>
        </dependency>
        <dependency>
            <groupId>org.n52.sensorweb</groupId>
            <artifactId>52n-xml-sos-v100</artifactId>
        </dependency>
        <!-- #### Spring dependencies #### -->
        <dependency>
            <groupId>com.thetransactioncompany</groupId>
            <artifactId>cors-filter</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <!-- installer/admin/client dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>client-controller</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>install-controller</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>admin-controller</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>common-controller</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-datasource-common</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-datasource-postgres</artifactId>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-datasource-mysql</artifactId>
        </dependency>       
        <dependency>
		    <groupId>${project.groupId}</groupId>
		    <artifactId>hibernate-datasource-h2</artifactId>
		</dependency>        
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>views</artifactId>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hibernate-h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>test-suite-common</artifactId>
            <version>${sos.test.suite.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>test-suite-sos-20</artifactId>
            <version>${sos.test.suite.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>3.2.0.RELEASE</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>3.2.0.RELEASE</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>binding-kvp</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>binding-soap</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>binding-pox</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>enhanced-v20</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>transactional-v20</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>resultHandling-v20</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>gda-operation</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>gda-hibernate</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>do-xml</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>do-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>do-json</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>do-hibernate</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>do-kvp</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>rest-code</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- third party -->
        <dependency>
			<groupId>org.n52.sensorweb.sos</groupId>
			<artifactId>third-party-ncname-resolver</artifactId>
         </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-kvp</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-soap</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>enhanced-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>hibernate-dao</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>transactional-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>resultHandling-v20</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>develop</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-kvp</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-soap</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-pox</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-json</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>enhanced-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>hibernate-dao</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>transactional-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>resultHandling-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>coding-sos-v100</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>coding-json</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>core-v100</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>coding-wml-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>gda-operation</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>gda-hibernate</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-xml</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-core</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-hibernate</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-kvp</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-json</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>rest-code</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>rest-xml</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>oracle</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>hibernate-datasource-oracle</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>both</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-kvp</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-soap</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>kvp</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-kvp</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>soap</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-soap</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>pox</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-pox</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>json</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-json</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>coding-json</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>sosV100</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>coding-sos-v100</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>core-v100</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>enhancedV20</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>enhanced-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>hibernate-dao</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>transactionalV20</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>transactional-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>hibernate-dao</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>resultHandlingV20</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>resultHandling-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>hibernate-dao</artifactId>
                </dependency>
            </dependencies>
        </profile>
        
        <profile>
            <id>wml</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>wml-v20</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>gda</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>gda-operation</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>gda-hibernate</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>do</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-xml</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-core</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-hibernate</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-kvp</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>restful</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-xml</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-core</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-hibernate</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-kvp</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>rest-code</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>rest-xml</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>diagram</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>52n-sos-coding-diagram</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>task</id>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>52n-sos-getResultTasking</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <!-- Profile for integration testing, run with: mvn -P itest clean install -->
            <!-- To specify an alternate port: mvn -P itest clean install -Djetty.port=9090 -->
            <id>itest</id>
            <properties>
                <jetty.port>9090</jetty.port>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>maven-jetty-plugin</artifactId>
                        <configuration>
                            <scanIntervalSeconds>10</scanIntervalSeconds>
                            <stopPort>9999</stopPort>
                            <stopKey>STOP</stopKey>
                            <contextPath>/</contextPath>
                            <connectors>
                                <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                                    <port>${jetty.port}</port>
                                </connector>
                            </connectors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>start-jetty</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>run-exploded</goal>
                                </goals>
                                <configuration>
                                    <scanIntervalSeconds>0</scanIntervalSeconds>
                                    <daemon>true</daemon>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-jetty</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-kvp</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-soap</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-pox</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>binding-json</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>enhanced-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>hibernate-dao</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>hibernate-datasource-oracle</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>transactional-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>resultHandling-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>coding-sos-v100</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>coding-json</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>core-v100</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>coding-wml-v20</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>gda-operation</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>gda-hibernate</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-xml</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-core</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-hibernate</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-kvp</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>do-json</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>rest-code</artifactId>
                </dependency>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>rest-xml</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <!-- Profile for deploy SOS -->
        <profile>
			<id>deploy</id>
			<build>
				<finalName>${conf.sos.name}</finalName>
				<plugins>
					<plugin>
						<inherited>true</inherited>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<executions>
							<execution>
								<id>verify-deploy</id>
								<phase>install</phase>
								<goals>
									<goal>deployer-redeploy</goal>
								</goals>
							</execution>
							<!-- <execution>
								<id>clean-undeploy</id>
								<phase>pre-clean</phase>
								<goals>
									<goal>deployer-undeploy</goal>
								</goals>
							</execution> -->
						</executions>
						<configuration>
							<!-- Container Configuration -->
							<container>
								<!-- e.g. tomcat6x -->
								<containerId>${deploy.containerId}</containerId>
								<type>remote</type>
							</container>
							<configuration>
								<type>runtime</type>
								 <!--
                                    <cargo.hostname>${remote.server}</cargo.hostname>
                                    <cargo.servlet.port>${remote.port}</cargo.servlet.port>
                                    <cargo.remote.username>${remote.user}</cargo.remote.username>
									<cargo.remote.password>${remote.password}</cargo.remote.password>
                                    
                                     -->
							</configuration>
								<deployables>
									<deployable>
										<groupId>${project.groupId}</groupId>
										<artifactId>${project.artifactId}</artifactId>
										<type>war</type>
									</deployable>
								</deployables>
							<!-- Deployer and Deployables configuration -->
							<deployer>
								<type>remote</type>
							</deployer>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
        <!-- ################################################################################
        ######################## Profiles to preconfigure the webapp ########################
        ################################################################################# -->

        <!-- ########## Profile to use a specified database configuration file
        ########## -->
        <profile>
            <id>configure-datasource</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>configure-datasource</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <copy file="${databaseConfigurationFile}"
                                              tofile="${project.build.directory}/${project.build.finalName}/WEB-INF/datasource.properties" />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- ############## Profile to use a existing SQLite configuration ############## -->
        <profile>
            <id>use-default-settings</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>use-default-settings</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <tasks>
                                        <delete quiet="true" file="${sqliteSettingDatabaseTargetFile}" />
                                        <copy file="${sqliteSettingDatabase}" tofile="${sqliteSettingDatabaseTargetFile}" />
                                    </tasks>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
