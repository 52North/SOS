--
-- Copyright (C) 2012-2017 52Â°North Initiative for Geospatial Open Source
-- Software GmbH
--
-- This program is free software; you can redistribute it and/or modify it
-- under the terms of the GNU General Public License version 2 as published
-- by the Free Software Foundation.
--
-- If the program is linked with libraries which are licensed under one of
-- the following licenses, the combination of the program with the linked
-- library is not considered a "derivative work" of the program:
--
--     - Apache License, version 2.0
--     - Apache Software License, version 1.0
--     - GNU Lesser General Public License, version 3
--     - Mozilla Public License, versions 1.0, 1.1 and 2.0
--     - Common Development and Distribution License (CDDL), version 1.0
--
-- Therefore the distribution of the program linked with libraries licensed
-- under the aforementioned licenses, is permitted by the copyright holders
-- if the distribution is compliant with both the GNU General Public
-- License version 2 and the aforementioned licenses.
--
-- This program is distributed in the hope that it will be useful, but
-- WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
-- Public License for more details.
--

create table oracle."procedure" (procedureId number(19,0) not null, hibernateDiscriminator char(1 char) not null, procedureDescriptionFormatId number(19,0) not null, identifier varchar2(255 char) not null, codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), deleted char(1 char) default 'F' not null check (deleted in ('T','F')), disabled char(1 char) default 'F' not null check (disabled in ('T','F')), descriptionFile clob, referenceFlag char(1 char) default 'F' check (referenceFlag in ('T','F')), typeOf number(19,0), isType char(1 char) default 'F' check (isType in ('T','F')), isAggregation char(1 char) default 'T' check (isAggregation in ('T','F')), mobile char(1 char) default 'F' check (mobile in ('T','F')), insitu char(1 char) default 'T' check (insitu in ('T','F')), primary key (procedureId));
comment on table oracle."procedure" is 'Table to store the procedure/sensor. Mapping file: mapping/core/Procedure.hbm.xml';
comment on column oracle."procedure".procedureId is 'Table primary key, used for relations';
comment on column oracle."procedure".procedureDescriptionFormatId is 'Relation/foreign key to the procedureDescriptionFormat table. Describes the format of the procedure description.';
comment on column oracle."procedure".identifier is 'The identifier of the procedure, gml:identifier. Used as parameter for queries. Unique';
comment on column oracle."procedure".codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column oracle."procedure".name is 'The name of the procedure, gml:name. Optional';
comment on column oracle."procedure".codespaceName is 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional';
comment on column oracle."procedure".description is 'Description of the procedure, gml:description. Optional';
comment on column oracle."procedure".deleted is 'Flag to indicate that this procedure is deleted or not (OGC SWES 2.0 - DeleteSensor operation)';
comment on column oracle."procedure".disabled is 'For later use by the SOS. Indicator if this procedure should not be provided by the SOS.';
comment on column oracle."procedure".descriptionFile is 'Field for full (XML) encoded procedure description or link to a procedure description file. Optional';
comment on column oracle."procedure".referenceFlag is 'Flag to indicate that this procedure is a reference procedure of another procedure. Not used by the SOS but by the Sensor Web REST-API';
comment on column oracle."procedure".typeOf is 'Relation/foreign key to procedure table. Optional, contains procedureId if this procedure is typeOf another procedure';
comment on column oracle."procedure".isType is 'Flag to indicate that this procedure is a type description, has no observations.';
comment on column oracle."procedure".isAggregation is 'Flag to indicate that this procedure is an aggregation (e.g. System, PhysicalSystem).';
comment on column oracle."procedure".mobile is 'Flag to indicate that this procedure is stationary (false) or mobile (true). Optional';
comment on column oracle."procedure".insitu is 'Flag to indicate that this procedure is insitu (true) or remote (false). Optional';
create table oracle.address (pkid number(19,0) not null, nilReason varchar2(255 char), href varchar2(255 char), type varchar2(255 char), role varchar2(255 char), arcrole varchar2(255 char), title varchar2(255 char), show varchar2(255 char), actuate varchar2(255 char), remoteSchema varchar2(255 char), id varchar2(255 char), uuid varchar2(255 char), city varchar2(255 char), administrativeArea varchar2(255 char), postalCode varchar2(255 char), country varchar2(255 char), primary key (pkid));
comment on column oracle.address.pkid is 'Table primary key, used for relations';
create table oracle.addressdeliveryPoint (addressId number(19,0) not null, deliveryPoint varchar2(255 char) not null, primary key (addressId, deliveryPoint));
create table oracle.addressemail (addressId number(19,0) not null, electronicMailAddress varchar2(255 char) not null, primary key (addressId, electronicMailAddress));
create table oracle.blobvalue (observationId number(19,0) not null, value blob, primary key (observationId));
comment on table oracle.blobvalue is 'Value table for blob observation';
comment on column oracle.blobvalue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column oracle.blobvalue.value is 'Blob observation value';
create table oracle.booleanfeatparamvalue (parameterId number(19,0) not null, value char(1 char), primary key (parameterId), check (value in ('T','F')));
comment on table oracle.booleanfeatparamvalue is 'Value table for boolean parameter';
comment on column oracle.booleanfeatparamvalue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "featureParameter".parameterid';
comment on column oracle.booleanfeatparamvalue.value is 'Boolean parameter value';
create table oracle.booleanparametervalue (parameterId number(19,0) not null, value char(1 char), primary key (parameterId), check (value in ('T','F')));
comment on table oracle.booleanparametervalue is 'Value table for boolean parameter';
comment on column oracle.booleanparametervalue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid';
comment on column oracle.booleanparametervalue.value is 'Boolean parameter value';
create table oracle.booleanseriesparamvalue (parameterId number(19,0) not null, value char(1 char), primary key (parameterId), check (value in ('T','F')));
comment on table oracle.booleanseriesparamvalue is 'Value table for boolean parameter';
comment on column oracle.booleanseriesparamvalue.parameterId is 'Foreign Key (FK) to the related parameter from the series parameter table. Contains seriesparameter.parameterid';
comment on column oracle.booleanseriesparamvalue.value is 'Boolean parameter value';
create table oracle.booleanvalue (observationId number(19,0) not null, value char(1 char), primary key (observationId), check (value in ('T','F')), check (value in ('T','F')));
comment on table oracle.booleanvalue is 'Value table for boolean observation';
comment on column oracle.booleanvalue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column oracle.booleanvalue.value is 'Boolean observation value';
create table oracle.categoryfeatparamvalue (parameterId number(19,0) not null, value varchar2(255 char), unitId number(19,0), primary key (parameterId));
comment on table oracle.categoryfeatparamvalue is 'Value table for category parameter';
comment on column oracle.categoryfeatparamvalue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "featureParameter".parameterid';
comment on column oracle.categoryfeatparamvalue.value is 'Category parameter value';
comment on column oracle.categoryfeatparamvalue.unitId is 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional';
create table oracle.categoryparametervalue (parameterId number(19,0) not null, value varchar2(255 char), unitId number(19,0), primary key (parameterId));
comment on table oracle.categoryparametervalue is 'Value table for category parameter';
comment on column oracle.categoryparametervalue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid';
comment on column oracle.categoryparametervalue.value is 'Category parameter value';
comment on column oracle.categoryparametervalue.unitId is 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional';
create table oracle.categoryseriesparamvalue (parameterId number(19,0) not null, value varchar2(255 char), unitId number(19,0), primary key (parameterId));
comment on table oracle.categoryseriesparamvalue is 'Value table for category parameter';
comment on column oracle.categoryseriesparamvalue.parameterId is 'Foreign Key (FK) to the related parameter from the series parameter table. Contains seriesparameter.parameterid';
comment on column oracle.categoryseriesparamvalue.value is 'Category parameter value';
comment on column oracle.categoryseriesparamvalue.unitId is 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional';
create table oracle.categoryvalue (observationId number(19,0) not null, value varchar2(255 char), identifier varchar2(255 char), name varchar2(255 char), description varchar2(255 char), primary key (observationId));
comment on table oracle.categoryvalue is 'Value table for category observation';
comment on column oracle.categoryvalue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column oracle.categoryvalue.value is 'Category observation value';
comment on column oracle.categoryvalue.identifier is 'SweCategory observation identifier';
comment on column oracle.categoryvalue.name is 'SweCategory observation name';
comment on column oracle.categoryvalue.description is 'SweCategory observation description';
create table oracle.codespace (codespaceId number(19,0) not null, codespace varchar2(255 char) not null, primary key (codespaceId));
comment on table oracle.codespace is 'Table to store the gml:identifier and gml:name codespace information. Mapping file: mapping/core/Codespace.hbm.xml';
comment on column oracle.codespace.codespaceId is 'Table primary key, used for relations';
comment on column oracle.codespace.codespace is 'The codespace value';
create table oracle.complexvalue (observationId number(19,0) not null, primary key (observationId));
comment on table oracle.complexvalue is 'Value table for complex observation';
comment on column oracle.complexvalue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
create table oracle.compositeobservation (observationId number(19,0) not null, childObservationId number(19,0) not null, primary key (observationId, childObservationId));
comment on table oracle.compositeobservation is 'Relation table for complex parent/child observations';
comment on column oracle.compositeobservation.observationId is 'Foreign Key (FK) to the related parent complex observation. Contains "observation".observationid';
comment on column oracle.compositeobservation.childObservationId is 'Foreign Key (FK) to the related child complex observation. Contains "observation".observationid';
create table oracle.compositephenomenon (parentObservablePropertyId number(19,0) not null, childObservablePropertyId number(19,0) not null, primary key (childObservablePropertyId, parentObservablePropertyId));
comment on table oracle.compositephenomenon is 'Relation table to store observableProperty hierarchies, aka compositePhenomenon. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/transactional/TObservableProperty.hbm.xml';
comment on column oracle.compositephenomenon.parentObservablePropertyId is 'Foreign Key (FK) to the related parent observableProperty. Contains "observableProperty".observablePropertyid';
comment on column oracle.compositephenomenon.childObservablePropertyId is 'Foreign Key (FK) to the related child observableProperty. Contains "observableProperty".observablePropertyid';
create table oracle.contact (pkid number(19,0) not null, nilReason varchar2(255 char), href varchar2(255 char), type varchar2(255 char), role varchar2(255 char), arcrole varchar2(255 char), title varchar2(255 char), show varchar2(255 char), actuate varchar2(255 char), remoteSchema varchar2(255 char), id varchar2(255 char), uuid varchar2(255 char), phoneId number(19,0), addressId number(19,0), onlineresourceid number(19,0), hoursOfService varchar2(255 char), contactInstructions varchar2(255 char), primary key (pkid));
comment on column oracle.contact.pkid is 'Table primary key, used for relations';
create table oracle.coordinatesystemaxis (pkid number(19,0) not null, nilReason varchar2(255 char), href varchar2(255 char), type varchar2(255 char), role varchar2(255 char), arcrole varchar2(255 char), title varchar2(255 char), show varchar2(255 char), actuate varchar2(255 char), remoteSchema varchar2(255 char), identifier varchar2(255 char), codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), remarks varchar2(255 char), axisAbbrev varchar2(255 char), codespaceAxisAbbrev number(19,0), axisDirection varchar2(255 char), codespaceAxisDirection number(19,0), minimumValue float, maximumValue float, rangeMeaning varchar2(255 char), codespaceRangeMeaning number(19,0), unitId number(19,0) not null, primary key (pkid));
comment on column oracle.coordinatesystemaxis.pkid is 'Table primary key, used for relations';
comment on column oracle.coordinatesystemaxis.identifier is 'The identifier of the object, gml:identifier. Used as parameter for queries. Optional but unique';
comment on column oracle.coordinatesystemaxis.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column oracle.coordinatesystemaxis.name is 'The name of the object, gml:name. Optional';
comment on column oracle.coordinatesystemaxis.codespaceName is 'The name of the object, gml:name. Optional';
comment on column oracle.coordinatesystemaxis.description is 'Description of the object, gml:description. Optional';
create table oracle.countfeatparamvalue (parameterId number(19,0) not null, value number(10,0), primary key (parameterId));
comment on table oracle.countfeatparamvalue is 'Value table for count parameter';
comment on column oracle.countfeatparamvalue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "featureParameter".parameterid';
comment on column oracle.countfeatparamvalue.value is 'Count parameter value';
create table oracle.countparametervalue (parameterId number(19,0) not null, value number(10,0), primary key (parameterId));
comment on table oracle.countparametervalue is 'Value table for count parameter';
comment on column oracle.countparametervalue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid';
comment on column oracle.countparametervalue.value is 'Count parameter value';
create table oracle.countseriesparamvalue (parameterId number(19,0) not null, value number(10,0), primary key (parameterId));
comment on table oracle.countseriesparamvalue is 'Value table for count parameter';
comment on column oracle.countseriesparamvalue.parameterId is 'Foreign Key (FK) to the related parameter from the series parameter table. Contains seriesparameter.parameterid';
comment on column oracle.countseriesparamvalue.value is 'Count parameter value';
create table oracle.countvalue (observationId number(19,0) not null, value number(10,0), primary key (observationId));
comment on table oracle.countvalue is 'Value table for count observation';
comment on column oracle.countvalue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column oracle.countvalue.value is 'Count observation value';
create table oracle.domainofvalidity (pkid number(19,0) not null, nilReason varchar2(255 char), href varchar2(255 char), type varchar2(255 char), role varchar2(255 char), arcrole varchar2(255 char), title varchar2(255 char), show varchar2(255 char), actuate varchar2(255 char), remoteSchema varchar2(255 char), identifier varchar2(255 char), codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), exExtentId number(19,0), primary key (pkid));
comment on column oracle.domainofvalidity.pkid is 'Table primary key, used for relations';
comment on column oracle.domainofvalidity.identifier is 'The identifier of the object, gml:identifier. Used as parameter for queries. Optional but unique';
comment on column oracle.domainofvalidity.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column oracle.domainofvalidity.name is 'The name of the object, gml:name. Optional';
comment on column oracle.domainofvalidity.codespaceName is 'The name of the object, gml:name. Optional';
comment on column oracle.domainofvalidity.description is 'Description of the object, gml:description. Optional';
create table oracle.exextent (pkid number(19,0) not null, id varchar2(255 char), uuid varchar2(255 char), description varchar2(255 char), primary key (pkid));
comment on column oracle.exextent.pkid is 'Table primary key, used for relations';
create table oracle.exextentverticalext (exExtentId number(19,0) not null, exVerticalExtentId number(19,0) not null, primary key (exExtentId, exVerticalExtentId));
create table oracle.featureofinterest (featureOfInterestId number(19,0) not null, hibernatediscriminator varchar2(255 char), featureOfInterestTypeId number(19,0) not null, identifier varchar2(255 char), codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), geom SDO_GEOMETRY, descriptionXml clob, url varchar2(255 char), primary key (featureOfInterestId));
comment on column oracle.featureofinterest.featureOfInterestId is 'Table primary key, used for relations';
comment on column oracle.featureofinterest.featureOfInterestTypeId is 'Relation/foreign key to the featureOfInterestType table. Describes the type of the featureOfInterest. Contains "featureOfInterestType".featureOfInterestTypeId';
comment on column oracle.featureofinterest.identifier is 'The identifier of the featureOfInterest, gml:identifier. Used as parameter for queries. Optional but unique';
comment on column oracle.featureofinterest.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column oracle.featureofinterest.name is 'The name of the featureOfInterest, gml:name. Optional';
comment on column oracle.featureofinterest.codespaceName is 'The name of the featureOfInterest, gml:name. Optional';
comment on column oracle.featureofinterest.description is 'Description of the featureOfInterest, gml:description. Optional';
comment on column oracle.featureofinterest.geom is 'The geometry of the featureOfInterest (composed of the latitude and longitude) . Optional';
comment on column oracle.featureofinterest.descriptionXml is 'XML description of the feature, used when transactional profile is supported . Optional';
comment on column oracle.featureofinterest.url is 'Reference URL to the feature if it is stored in another service, e.g. WFS. Optional but unique';
create table oracle.featureofinteresttype (featureOfInterestTypeId number(19,0) not null, featureOfInterestType varchar2(255 char) not null, primary key (featureOfInterestTypeId));
comment on table oracle.featureofinteresttype is 'Table to store the FeatureOfInterestType information. Mapping file: mapping/core/FeatureOfInterestType.hbm.xml';
comment on column oracle.featureofinteresttype.featureOfInterestTypeId is 'Table primary key, used for relations';
comment on column oracle.featureofinteresttype.featureOfInterestType is 'The featureOfInterestType value, e.g. http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint (OGC OM 2.0 specification) for point features';
create table oracle.featureparameter (parameterId number(19,0) not null, featureOfInterestId number(19,0) not null, name varchar2(255 char) not null, primary key (parameterId));
comment on table oracle.featureparameter is 'Table to store additional featureOfInterest information (sf:parameter). Mapping file: mapping/core/FeatureParameter.hbm.xml';
comment on column oracle.featureparameter.parameterId is 'Table primary key';
comment on column oracle.featureparameter.featureOfInterestId is 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest.featureOfInterestId';
comment on column oracle.featureparameter.name is 'Parameter name';
create table oracle.featurerelation (parentFeatureId number(19,0) not null, childFeatureId number(19,0) not null, primary key (childFeatureId, parentFeatureId));
comment on table oracle.featurerelation is 'Relation table to store feature hierarchies. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/transactional/TFeatureOfInterest.hbm.xml';
comment on column oracle.featurerelation.parentFeatureId is 'Foreign Key (FK) to the related parent featureOfInterest. Contains "featureOfInterest".featureOfInterestid';
comment on column oracle.featurerelation.childFeatureId is 'Foreign Key (FK) to the related child featureOfInterest. Contains "featureOfInterest".featureOfInterestid';
create table oracle.geometryvalue (observationId number(19,0) not null, value SDO_GEOMETRY, primary key (observationId));
comment on table oracle.geometryvalue is 'Value table for geometry observation';
comment on column oracle.geometryvalue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column oracle.geometryvalue.value is 'Geometry observation value';
create table oracle.i18nfeatureofinterest (id number(19,0) not null, objectId number(19,0) not null, locale varchar2(255 char) not null, name varchar2(255 char), description varchar2(255 char), primary key (id));
comment on table oracle.i18nfeatureofinterest is 'Table to i18n metadata for the featureOfInterest. Mapping file: mapping/i18n/HibernateI18NFeatureOfInterestMetadata.hbm.xml';
comment on column oracle.i18nfeatureofinterest.id is 'Table primary key';
comment on column oracle.i18nfeatureofinterest.objectId is 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestid';
comment on column oracle.i18nfeatureofinterest.locale is 'Locale/language identification, e.g. eng, ger';
comment on column oracle.i18nfeatureofinterest.name is 'Locale/language specific name of the featureOfInterest';
comment on column oracle.i18nfeatureofinterest.description is 'Locale/language specific description of the featureOfInterest';
create table oracle.i18nobservableproperty (id number(19,0) not null, objectId number(19,0) not null, locale varchar2(255 char) not null, name varchar2(255 char), description varchar2(255 char), primary key (id));
comment on table oracle.i18nobservableproperty is 'Table to i18n metadata for the observableProperty/phenomenon. Mapping file: mapping/i18n/HibernateI18NObservablePropertyMetadata.hbm.xml';
comment on column oracle.i18nobservableproperty.id is 'Table primary key';
comment on column oracle.i18nobservableproperty.objectId is 'Foreign Key (FK) to the related observableProperty. Contains "observableProperty".observablePropertyid';
comment on column oracle.i18nobservableproperty.locale is 'Locale/language identification, e.g. eng, ger';
comment on column oracle.i18nobservableproperty.name is 'Locale/language specific name of the observableProperty';
comment on column oracle.i18nobservableproperty.description is 'Locale/language specific description of the observableProperty';
create table oracle.i18noffering (id number(19,0) not null, objectId number(19,0) not null, locale varchar2(255 char) not null, name varchar2(255 char), description varchar2(255 char), primary key (id));
comment on table oracle.i18noffering is 'Table to i18n metadata for the offering. Mapping file: mapping/i18n/HibernateI18NOfferingMetadata.hbm.xml';
comment on column oracle.i18noffering.id is 'Table primary key';
comment on column oracle.i18noffering.objectId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
comment on column oracle.i18noffering.locale is 'Locale/language identification, e.g. eng, ger';
comment on column oracle.i18noffering.name is 'Locale/language specific name of the offering';
comment on column oracle.i18noffering.description is 'Locale/language specific description of the offering';
create table oracle.i18nprocedure (id number(19,0) not null, objectId number(19,0) not null, locale varchar2(255 char) not null, name varchar2(255 char), description varchar2(255 char), shortname varchar2(255 char), longname varchar2(255 char), primary key (id));
comment on table oracle.i18nprocedure is 'Table to i18n metadata for the procedure. Mapping file: mapping/i18n/HibernateI18NProcedureMetadata.hbm.xml';
comment on column oracle.i18nprocedure.id is 'Table primary key';
comment on column oracle.i18nprocedure.objectId is 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid';
comment on column oracle.i18nprocedure.locale is 'Locale/language identification, e.g. eng, ger';
comment on column oracle.i18nprocedure.name is 'Locale/language specific name of the procedure';
comment on column oracle.i18nprocedure.description is 'Locale/language specific description of the procedure';
comment on column oracle.i18nprocedure.shortname is 'Locale/language specific shortname of the procedure';
comment on column oracle.i18nprocedure.longname is 'Locale/language specific longname of the procedure';
create table oracle.numericfeatparamvalue (parameterId number(19,0) not null, value float, unitId number(19,0), primary key (parameterId));
comment on table oracle.numericfeatparamvalue is 'Value table for numeric/Measurment parameter';
comment on column oracle.numericfeatparamvalue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "featureParameter".parameterid';
comment on column oracle.numericfeatparamvalue.value is 'Numeric/Quantity parameter value';
comment on column oracle.numericfeatparamvalue.unitId is 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional';
create table oracle.numericparametervalue (parameterId number(19,0) not null, value float, unitId number(19,0), primary key (parameterId));
comment on table oracle.numericparametervalue is 'Value table for numeric/Measurment parameter';
comment on column oracle.numericparametervalue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid';
comment on column oracle.numericparametervalue.value is 'Numeric/Quantity parameter value';
comment on column oracle.numericparametervalue.unitId is 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional';
create table oracle.numericseriesparamvalue (parameterId number(19,0) not null, value float, unitId number(19,0), primary key (parameterId));
comment on table oracle.numericseriesparamvalue is 'Value table for numeric/Measurment parameter';
comment on column oracle.numericseriesparamvalue.parameterId is 'Foreign Key (FK) to the related parameter from the series parameter table. Contains seriesparameter.parameterid';
comment on column oracle.numericseriesparamvalue.value is 'Numeric/Quantity parameter value';
comment on column oracle.numericseriesparamvalue.unitId is 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional';
create table oracle.numericvalue (observationId number(19,0) not null, value float, primary key (observationId));
comment on table oracle.numericvalue is 'Value table for numeric/Measurment observation';
comment on column oracle.numericvalue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column oracle.numericvalue.value is 'Numeric/Measurment observation value';
create table oracle.observableproperty (observablePropertyId number(19,0) not null, identifier varchar2(255 char) not null, codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), disabled char(1 char) default 'F' not null check (disabled in ('T','F')), hiddenChild char(1 char) default 'F' not null check (hiddenChild in ('T','F')), primary key (observablePropertyId));
comment on table oracle.observableproperty is 'Table to store the ObservedProperty/Phenomenon information. Mapping file: mapping/core/ObservableProperty.hbm.xml';
comment on column oracle.observableproperty.observablePropertyId is 'Table primary key, used for relations';
comment on column oracle.observableproperty.identifier is 'The identifier of the observableProperty, gml:identifier. Used as parameter for queries. Unique';
comment on column oracle.observableproperty.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column oracle.observableproperty.name is 'The name of the observableProperty, gml:name. Optional';
comment on column oracle.observableproperty.codespaceName is 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional';
comment on column oracle.observableproperty.description is 'Description of the observableProperty, gml:description. Optional';
comment on column oracle.observableproperty.disabled is 'For later use by the SOS. Indicator if this observableProperty should not be provided by the SOS.';
create table oracle.observation (observationId number(19,0) not null, seriesId number(19,0) not null, phenomenonTimeStart timestamp not null, phenomenonTimeEnd timestamp not null, resultTime timestamp not null, identifier varchar2(255 char), codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), deleted char(1 char) default 'F' not null check (deleted in ('T','F')), child char(1 char) default 'F' not null check (child in ('T','F')), parent char(1 char) default 'F' not null check (parent in ('T','F')), validTimeStart timestamp default NULL, validTimeEnd timestamp default NULL, samplingGeometry SDO_GEOMETRY, unitId number(19,0), primary key (observationId));
comment on table oracle.observation is 'Stores the observations. Mapping file: mapping/series/observation/ValuedObservation.hbm.xml';
comment on column oracle.observation.observationId is 'Table primary key, used in relations';
comment on column oracle.observation.seriesId is 'Relation/foreign key to the associated series table. Contains "series".seriesId';
comment on column oracle.observation.phenomenonTimeStart is 'Time stamp when the observation was started or phenomenon was observed';
comment on column oracle.observation.phenomenonTimeEnd is 'Time stamp when the observation was stopped or phenomenon was observed';
comment on column oracle.observation.resultTime is 'Time stamp when the observation was published or result was published/available';
comment on column oracle.observation.identifier is 'The identifier of the observation, gml:identifier. Used as parameter for queries. Optional but unique';
comment on column oracle.observation.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column oracle.observation.name is 'The name of the observation, gml:name. Optional';
comment on column oracle.observation.codespaceName is 'The name of the observation, gml:name. Optional';
comment on column oracle.observation.description is 'The name of the observation, gml:name. Optional';
comment on column oracle.observation.deleted is 'Flag to indicate that this observation is deleted or not (OGC SWES 2.0 - DeleteSensor operation or not specified DeleteObservation)';
comment on column oracle.observation.child is 'Flag to indicate that this observation is a child observation for complex observation';
comment on column oracle.observation.parent is 'Flag to indicate that this observation is a parent observation for complex observation';
comment on column oracle.observation.validTimeStart is 'Start time stamp for which the observation/result is valid, e.g. used for forecasting. Optional';
comment on column oracle.observation.validTimeEnd is 'End time stamp for which the observation/result is valid, e.g. used for forecasting. Optional';
comment on column oracle.observation.samplingGeometry is 'Sampling geometry describes exactly where the measurement has taken place. Used for OGC SOS 2.0 Spatial Filtering Profile. Optional';
comment on column oracle.observation.unitId is 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional';
create table oracle.observationconstellation (observationConstellationId number(19,0) not null, observablePropertyId number(19,0) not null, procedureId number(19,0) not null, observationTypeId number(19,0), offeringId number(19,0) not null, deleted char(1 char) default 'F' not null check (deleted in ('T','F')), hiddenChild char(1 char) default 'F' not null check (hiddenChild in ('T','F')), disabled char(1 char) default 'F' not null check (disabled in ('T','F')), primary key (observationConstellationId));
comment on table oracle.observationconstellation is 'Table to store the ObservationConstellation information. Contains information about the constellation of observableProperty, procedure, offering and the observationType. Mapping file: mapping/core/ObservationConstellation.hbm.xml';
comment on column oracle.observationconstellation.observationConstellationId is 'Table primary key, used for relations';
comment on column oracle.observationconstellation.observablePropertyId is 'Foreign Key (FK) to the related observableProperty. Contains "observableproperty".observablepropertyid';
comment on column oracle.observationconstellation.procedureId is 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid';
comment on column oracle.observationconstellation.observationTypeId is 'Foreign Key (FK) to the related observation type. Contains "observationtype".observationtypeid';
comment on column oracle.observationconstellation.offeringId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
comment on column oracle.observationconstellation.deleted is 'Flag to indicate that this observationConstellation is deleted or not. Set if the related procedure is deleted via DeleteSensor operation (OGC SWES 2.0 - DeleteSensor operation)';
comment on column oracle.observationconstellation.hiddenChild is 'Flag to indicate that this observationConstellations procedure is a child procedure of another procedure. If true, the related procedure is not contained in OGC SOS 2.0 Capabilities but in OGC SOS 1.0.0 Capabilities.';
comment on column oracle.observationconstellation.disabled is 'Flag to indicate that this observationConstellations is disabled for insertion of observations. If false, new observation could be added to the SOS.';
create table oracle.observationhasoffering (observationId number(19,0) not null, offeringId number(19,0) not null, primary key (observationId, offeringId));
comment on column oracle.observationhasoffering.observationId is 'Foreign Key (FK) to the related observation. Contains "observation".observationid';
comment on column oracle.observationhasoffering.offeringId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
create table oracle.observationtype (observationTypeId number(19,0) not null, observationType varchar2(255 char) not null, primary key (observationTypeId));
comment on table oracle.observationtype is 'Table to store the observationTypes. Mapping file: mapping/core/ObservationType.hbm.xml';
comment on column oracle.observationtype.observationTypeId is 'Table primary key, used for relations';
comment on column oracle.observationtype.observationType is 'The observationType value, e.g. http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement (OGC OM 2.0 specification) for OM_Measurement';
create table oracle.offering (offeringId number(19,0) not null, hibernateDiscriminator char(1 char) not null, identifier varchar2(255 char) not null, codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), disabled char(1 char) default 'F' not null check (disabled in ('T','F')), primary key (offeringId));
comment on table oracle.offering is 'Table to store the offering information. Mapping file: mapping/core/Offering.hbm.xml';
comment on column oracle.offering.offeringId is 'Table primary key, used for relations';
comment on column oracle.offering.identifier is 'The identifier of the offering, gml:identifier. Used as parameter for queries. Unique';
comment on column oracle.offering.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column oracle.offering.name is 'The name of the offering, gml:name. If available, displyed in the contents of the Capabilites. Optional';
comment on column oracle.offering.codespaceName is 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional';
comment on column oracle.offering.description is 'Description of the offering, gml:description. Optional';
comment on column oracle.offering.disabled is 'For later use by the SOS. Indicator if this offering should not be provided by the SOS.';
create table oracle.offeringallowedfeaturetype (offeringId number(19,0) not null, featureOfInterestTypeId number(19,0) not null, primary key (offeringId, featureOfInterestTypeId));
comment on table oracle.offeringallowedfeaturetype is 'Table to store relations between offering and allowed featureOfInterestTypes, defined in InsertSensor request. Mapping file: mapping/transactional/TOffering.hbm.xml';
comment on column oracle.offeringallowedfeaturetype.offeringId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
comment on column oracle.offeringallowedfeaturetype.featureOfInterestTypeId is 'Foreign Key (FK) to the related featureOfInterestTypeId. Contains "featureOfInterestType".featureOfInterestTypeId';
create table oracle.offeringallowedobservationtype (offeringId number(19,0) not null, observationTypeId number(19,0) not null, primary key (offeringId, observationTypeId));
comment on table oracle.offeringallowedobservationtype is 'Table to store relations between offering and allowed observationTypes, defined in InsertSensor request. Mapping file: mapping/transactional/TOffering.hbm.xml';
comment on column oracle.offeringallowedobservationtype.offeringId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
comment on column oracle.offeringallowedobservationtype.observationTypeId is 'Foreign Key (FK) to the related observationType. Contains "observationType".observationTypeId';
create table oracle.offeringhasrelatedfeature (relatedFeatureId number(19,0) not null, offeringId number(19,0) not null, primary key (offeringId, relatedFeatureId));
comment on table oracle.offeringhasrelatedfeature is 'Table to store relations between offering and associated relatedFeatures. Mapping file: mapping/transactional/TOffering.hbm.xml';
comment on column oracle.offeringhasrelatedfeature.relatedFeatureId is 'Foreign Key (FK) to the related relatedFeature. Contains "relatedFeature".relatedFeatureid';
comment on column oracle.offeringhasrelatedfeature.offeringId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
create table oracle.offeringrelation (parentOfferingId number(19,0) not null, childOfferingId number(19,0) not null, primary key (childOfferingId, parentOfferingId));
comment on table oracle.offeringrelation is 'Relation table to store offering hierarchies. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/core/Offering.hbm.xml';
comment on column oracle.offeringrelation.parentOfferingId is 'Foreign Key (FK) to the related parent offering. Contains "offering".offeringid';
comment on column oracle.offeringrelation.childOfferingId is 'Foreign Key (FK) to the related child offering. Contains "offering".offeringid';
create table oracle.onlineresource (pkid number(19,0) not null, nilReason varchar2(255 char), href varchar2(255 char), type varchar2(255 char), role varchar2(255 char), arcrole varchar2(255 char), title varchar2(255 char), show varchar2(255 char), actuate varchar2(255 char), id varchar2(255 char), uuid varchar2(255 char), linkage varchar2(255 char), protocol varchar2(255 char), applicationProfile varchar2(255 char), name varchar2(255 char), description varchar2(255 char), function varchar2(255 char), primary key (pkid));
comment on column oracle.onlineresource.pkid is 'Table primary key, used for relations';
create table oracle.parameter (parameterId number(19,0) not null, observationId number(19,0) not null, name varchar2(255 char) not null, primary key (parameterId));
comment on table oracle.parameter is 'Table to store additional obervation information (om:parameter). Mapping file: mapping/core/Parameter.hbm.xml';
comment on column oracle.parameter.parameterId is 'Table primary key';
comment on column oracle.parameter.observationId is 'Foreign Key (FK) to the related observation. Contains "observation".observationId';
comment on column oracle.parameter.name is 'Parameter name';
create table oracle.phonefacsimile (phoneId number(19,0) not null, facsimile varchar2(255 char) not null, primary key (phoneId, facsimile));
create table oracle.phonevoice (phoneId number(19,0) not null, voice varchar2(255 char) not null, primary key (phoneId, voice));
create table oracle.proceduredescriptionformat (procedureDescriptionFormatId number(19,0) not null, procedureDescriptionFormat varchar2(255 char) not null, primary key (procedureDescriptionFormatId));
comment on table oracle.proceduredescriptionformat is 'Table to store the ProcedureDescriptionFormat information of procedures. Mapping file: mapping/core/ProcedureDescriptionFormat.hbm.xml';
comment on column oracle.proceduredescriptionformat.procedureDescriptionFormatId is 'Table primary key, used for relations';
comment on column oracle.proceduredescriptionformat.procedureDescriptionFormat is 'The procedureDescriptionFormat value, e.g. http://www.opengis.net/sensorML/1.0.1 for procedures descriptions as specified in OGC SensorML 1.0.1';
create table oracle.profileobservation (observationId number(19,0) not null, childObservationId number(19,0) not null, primary key (observationId, childObservationId));
comment on table oracle.profileobservation is 'Relation table for complex parent/child observations';
comment on column oracle.profileobservation.observationId is 'Foreign Key (FK) to the related parent complex observation. Contains "observation".observationid';
comment on column oracle.profileobservation.childObservationId is 'Foreign Key (FK) to the related child complex observation. Contains "observation".observationid';
create table oracle.profilevalue (observationId number(19,0) not null, fromlevel float, tolevel float, levelunitid number(19,0), primary key (observationId));
comment on table oracle.profilevalue is 'Value table for profile observation';
comment on column oracle.profilevalue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column oracle.profilevalue.fromlevel is 'Value of fromLevel';
comment on column oracle.profilevalue.tolevel is 'Value of toLevel';
comment on column oracle.profilevalue.levelunitid is 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional';
create table oracle.relatedfeature (relatedFeatureId number(19,0) not null, featureOfInterestId number(19,0) not null, primary key (relatedFeatureId));
comment on table oracle.relatedfeature is 'Table to store related feature information used in the OGC SOS 2.0 Capabilities (See also OGC SWES 2.0). Mapping file: mapping/transactionl/RelatedFeature.hbm.xml';
comment on column oracle.relatedfeature.relatedFeatureId is 'Table primary key, used for relations';
comment on column oracle.relatedfeature.featureOfInterestId is 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestid';
create table oracle.relatedfeaturehasrole (relatedFeatureId number(19,0) not null, relatedFeatureRoleId number(19,0) not null, primary key (relatedFeatureId, relatedFeatureRoleId));
comment on table oracle.relatedfeaturehasrole is 'Relation table to store relatedFeatures and their associated relatedFeatureRoles. Mapping file: mapping/transactionl/RelatedFeature.hbm.xml';
comment on column oracle.relatedfeaturehasrole.relatedFeatureId is 'Foreign Key (FK) to the related relatedFeature. Contains "relatedFeature".relatedFeatureid';
comment on column oracle.relatedfeaturehasrole.relatedFeatureRoleId is 'Foreign Key (FK) to the related relatedFeatureRole. Contains "relatedFeatureRole".relatedFeatureRoleid';
create table oracle.relatedfeaturerole (relatedFeatureRoleId number(19,0) not null, relatedFeatureRole varchar2(255 char) not null, primary key (relatedFeatureRoleId));
comment on table oracle.relatedfeaturerole is 'Table to store related feature role information used in the OGC SOS 2.0 Capabilities (See also OGC SWES 2.0). Mapping file: mapping/transactionl/RelatedFeatureRole.hbm.xml';
comment on column oracle.relatedfeaturerole.relatedFeatureRoleId is 'Table primary key, used for relations';
comment on column oracle.relatedfeaturerole.relatedFeatureRole is 'The related feature role definition. See OGC SWES 2.0 specification';
create table oracle.relatedobservation (relatedObservationId number(19,0) not null, observationId number(19,0), relatedObservation number(19,0), role varchar2(255 char), relatedUrl varchar2(255 char), primary key (relatedObservationId));
comment on table oracle.relatedobservation is 'The related observation of an observation.';
comment on column oracle.relatedobservation.relatedObservationId is 'Table primary key';
comment on column oracle.relatedobservation.observationId is 'Foreign Key (FK) to the observation. Contains "observation".observationId';
comment on column oracle.relatedobservation.relatedObservation is 'Relation/foreign key to the associated observation table. Contains "observation".observationId';
comment on column oracle.relatedobservation.role is 'The role of the relation';
comment on column oracle.relatedobservation.relatedUrl is 'An url to a related observation';
create table oracle.relatedseries (relationId number(19,0) not null, seriesId number(19,0) not null, relatedSeries number(19,0), role varchar2(255 char), relatedUrl varchar2(255 char), primary key (relationId));
comment on table oracle.relatedseries is 'The series relation should be used if the series table represents a timeseries.';
comment on column oracle.relatedseries.relationId is 'Table primary key';
comment on column oracle.relatedseries.seriesId is 'Foreign Key (FK) to the series. Contains "series".seriesId';
comment on column oracle.relatedseries.relatedSeries is 'Relation/foreign key to the associated series table. Contains "series".seriesId';
comment on column oracle.relatedseries.role is 'The role of the relation';
comment on column oracle.relatedseries.relatedUrl is 'An url to a related observation';
create table oracle.responsibleparty (pkid number(19,0) not null, nilReason varchar2(255 char), href varchar2(255 char), type varchar2(255 char), role varchar2(255 char), arcrole varchar2(255 char), title varchar2(255 char), show varchar2(255 char), actuate varchar2(255 char), remoteSchema varchar2(255 char), id varchar2(255 char), uuid varchar2(255 char), individualName varchar2(255 char), organizationName varchar2(255 char), positionName varchar2(255 char), contactInfo number(19,0), ciRole number(19,0), primary key (pkid));
comment on column oracle.responsibleparty.pkid is 'Table primary key, used for relations';
create table oracle.resulttemplate (resultTemplateId number(19,0) not null, offeringId number(19,0) not null, observablePropertyId number(19,0) not null, procedureId number(19,0), featureOfInterestId number(19,0), identifier varchar2(255 char) not null, resultStructure clob not null, resultEncoding clob not null, primary key (resultTemplateId));
comment on table oracle.resulttemplate is 'Table to store resultTemplates (OGC SOS 2.0 result handling profile). Mapping file: mapping/transactionl/ResultTemplate.hbm.xml';
comment on column oracle.resulttemplate.resultTemplateId is 'Table primary key';
comment on column oracle.resulttemplate.offeringId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
comment on column oracle.resulttemplate.observablePropertyId is 'Foreign Key (FK) to the related observableProperty. Contains "observableProperty".observablePropertyId';
comment on column oracle.resulttemplate.procedureId is 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureId';
comment on column oracle.resulttemplate.featureOfInterestId is 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestid';
comment on column oracle.resulttemplate.identifier is 'The resultTemplate identifier, required for InsertResult requests.';
comment on column oracle.resulttemplate.resultStructure is 'The resultStructure as XML string. Describes the types and order of the values in a GetResultResponse/InsertResultRequest';
comment on column oracle.resulttemplate.resultEncoding is 'The resultEncoding as XML string. Describes the encoding of the values in a GetResultResponse/InsertResultRequest';
create table oracle.role (pkid number(19,0) not null, codeList varchar2(255 char) not null, codeListValue varchar2(255 char) not null, primary key (pkid));
comment on column oracle.role.pkid is 'Table primary key, used for relations';
create table oracle.sensorsystem (parentSensorId number(19,0) not null, childSensorId number(19,0) not null, primary key (childSensorId, parentSensorId));
comment on table oracle.sensorsystem is 'Relation table to store procedure hierarchies. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/transactional/TProcedure.hbm.xml';
comment on column oracle.sensorsystem.parentSensorId is 'Foreign Key (FK) to the related parent procedure. Contains "procedure".procedureid';
comment on column oracle.sensorsystem.childSensorId is 'Foreign Key (FK) to the related child procedure. Contains "procedure".procedureid';
create table oracle.series (seriesId number(19,0) not null, featureOfInterestId number(19,0) not null, observablePropertyId number(19,0) not null, procedureId number(19,0) not null, offeringId number(19,0) not null, deleted char(1 char) default 'F' not null check (deleted in ('T','F')), published char(1 char) default 'T' not null check (published in ('T','F')), hiddenChild char(1 char) default 'F' not null check (hiddenChild in ('T','F')), firstTimeStamp timestamp default NULL, lastTimeStamp timestamp default NULL, firstNumericValue float, lastNumericValue float, unitId number(19,0), identifier varchar2(255 char), codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), seriesType varchar2(255 char), primary key (seriesId));
comment on table oracle.series is 'Table to store a (time-) series which consists of featureOfInterest, observableProperty, and procedure. Mapping file: mapping/series/Series.hbm.xml';
comment on column oracle.series.seriesId is 'Table primary key, used for relations';
comment on column oracle.series.featureOfInterestId is 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestId';
comment on column oracle.series.observablePropertyId is 'Foreign Key (FK) to the related observableProperty. Contains "observableproperty".observablepropertyid';
comment on column oracle.series.procedureId is 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid';
comment on column oracle.series.offeringId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
comment on column oracle.series.deleted is 'Flag to indicate that this series is deleted or not. Set if the related procedure is deleted via DeleteSensor operation (OGC SWES 2.0 - DeleteSensor operation)';
comment on column oracle.series.published is 'Flag to indicate that this series is published or not. A not published series is not contained in GetObservation and GetDataAvailability responses';
comment on column oracle.series.hiddenChild is 'TODO';
comment on column oracle.series.firstTimeStamp is 'The time stamp of the first (temporal) observation associated to this series';
comment on column oracle.series.lastTimeStamp is 'The time stamp of the last (temporal) observation associated to this series';
comment on column oracle.series.firstNumericValue is 'The value of the first (temporal) observation associated to this series';
comment on column oracle.series.lastNumericValue is 'The value of the last (temporal) observation associated to this series';
comment on column oracle.series.unitId is 'Foreign Key (FK) to the related unit of the first/last numeric values . Contains "unit".unitid';
comment on column oracle.series.identifier is 'The identifier of the series, gml:identifier. Unique';
comment on column oracle.series.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column oracle.series.name is 'The name of the series, gml:name. Optional';
comment on column oracle.series.codespaceName is 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional';
comment on column oracle.series.description is 'Description of the series, gml:description. Optional';
comment on column oracle.series.seriesType is 'Definition of the series type, e.g. measurement for OM_Measurement. Optional';
create table oracle.seriesmetadata (metadataId number(19,0) not null, seriesId number(19,0) not null, identifier varchar2(255 char) not null, value varchar2(255 char) not null, domain varchar2(255 char) not null, primary key (metadataId));
comment on column oracle.seriesmetadata.metadataId is 'Table primary key, used for relations';
comment on column oracle.seriesmetadata.seriesId is 'Foreign Key (FK) to the related series. Contains "series".seriesId';
comment on column oracle.seriesmetadata.identifier is 'The identifier of the metadata value.';
comment on column oracle.seriesmetadata.value is 'The metadata value.';
comment on column oracle.seriesmetadata.domain is 'The metadata value domain.';
create table oracle.seriesparameter (parameterId number(19,0) not null, seriesId number(19,0) not null, name varchar2(255 char) not null, primary key (parameterId));
comment on table oracle.seriesparameter is 'Table to store additional obervation information (om:parameter). Mapping file: mapping/series/metadata/SeriesParameter.hbm.xml';
comment on column oracle.seriesparameter.parameterId is 'Table primary key';
comment on column oracle.seriesparameter.seriesId is 'Foreign Key (FK) to the related series. Contains "series".seriesId';
comment on column oracle.seriesparameter.name is 'Parameter name';
create table oracle.specimen (featureOfInterestId number(19,0) not null, materialClass varchar2(255 char) not null, samplingTimeStart timestamp not null, samplingTimeEnd timestamp not null, samplingMethod varchar2(255 char), size float, sizeUnitId number(19,0), currentLocation varchar2(255 char), specimenType varchar2(255 char), primary key (featureOfInterestId));
comment on column oracle.specimen.featureOfInterestId is 'Foreign Key (FK) to the related featureOfInterest from the featureOfInterest table. Contains "featureOfInterest".featureOfInterestId';
comment on column oracle.specimen.materialClass is 'Material class';
comment on column oracle.specimen.samplingTimeStart is 'Time stamp when the specimen was started';
comment on column oracle.specimen.samplingTimeEnd is 'Time stamp when the specimen was stopped';
comment on column oracle.specimen.samplingMethod is 'Sampling method as referenced link';
comment on column oracle.specimen.size is 'Sampling method as referenced link';
comment on column oracle.specimen.sizeUnitId is 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional';
comment on column oracle.specimen.currentLocation is 'Sampling method as referenced link';
comment on column oracle.specimen.specimenType is 'Specimen type';
create table oracle.swedataarrayvalue (observationId number(19,0) not null, value clob, primary key (observationId));
comment on table oracle.swedataarrayvalue is 'Value table for SweDataArray observation';
comment on column oracle.swedataarrayvalue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column oracle.swedataarrayvalue.value is 'SweDataArray observation value';
create table oracle.telephone (pkid number(19,0) not null, nilReason varchar2(255 char), href varchar2(255 char), type varchar2(255 char), role varchar2(255 char), arcrole varchar2(255 char), title varchar2(255 char), show varchar2(255 char), actuate varchar2(255 char), remoteSchema varchar2(255 char), id varchar2(255 char), uuid varchar2(255 char), primary key (pkid));
comment on column oracle.telephone.pkid is 'Table primary key, used for relations';
create table oracle.textfeatparamvalue (parameterId number(19,0) not null, value varchar2(255 char), primary key (parameterId));
comment on table oracle.textfeatparamvalue is 'Value table for text parameter';
comment on column oracle.textfeatparamvalue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "featureParameter".parameterid';
comment on column oracle.textfeatparamvalue.value is 'Text parameter value';
create table oracle.textparametervalue (parameterId number(19,0) not null, value varchar2(255 char), primary key (parameterId));
comment on table oracle.textparametervalue is 'Value table for text parameter';
comment on column oracle.textparametervalue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid';
comment on column oracle.textparametervalue.value is 'Text parameter value';
create table oracle.textseriesparamvalue (parameterId number(19,0) not null, value varchar2(255 char), primary key (parameterId));
comment on table oracle.textseriesparamvalue is 'Value table for text parameter';
comment on column oracle.textseriesparamvalue.parameterId is 'Foreign Key (FK) to the related parameter from the series parameter table. Contains seriesparameter.parameterid';
comment on column oracle.textseriesparamvalue.value is 'Text parameter value';
create table oracle.textvalue (observationId number(19,0) not null, value clob, identifier varchar2(255 char), name varchar2(255 char), description varchar2(255 char), primary key (observationId));
comment on table oracle.textvalue is 'Value table for text observation';
comment on column oracle.textvalue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column oracle.textvalue.value is 'Text observation value';
comment on column oracle.textvalue.identifier is 'SweText observation identifier';
comment on column oracle.textvalue.name is 'SweText observation name';
comment on column oracle.textvalue.description is 'SweText observation description';
create table oracle.unit (unitId number(19,0) not null, unit varchar2(255 char) not null, name varchar2(255 char), link varchar2(255 char), primary key (unitId));
comment on table oracle.unit is 'Table to store the unit of measure information, used in observations. Mapping file: mapping/core/Unit.hbm.xml';
comment on column oracle.unit.unitId is 'Table primary key, used for relations';
comment on column oracle.unit.unit is 'The unit of measure of observations. See http://unitsofmeasure.org/ucum.html';
comment on column oracle.unit.name is 'The name of the unit of measure of observations';
comment on column oracle.unit.link is 'The link to an external description of the unit of measure of observations, e.g. a vocabulary';
create table oracle.validproceduretime (validProcedureTimeId number(19,0) not null, procedureId number(19,0) not null, procedureDescriptionFormatId number(19,0) not null, startTime timestamp not null, endTime timestamp default NULL, descriptionXml clob not null, primary key (validProcedureTimeId));
comment on table oracle.validproceduretime is 'Table to store procedure descriptions which were inserted or updated via the transactional Profile. Mapping file: mapping/transactionl/ValidProcedureTime.hbm.xml';
comment on column oracle.validproceduretime.validProcedureTimeId is 'Table primary key';
comment on column oracle.validproceduretime.procedureId is 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid';
comment on column oracle.validproceduretime.procedureDescriptionFormatId is 'Foreign Key (FK) to the related procedureDescriptionFormat. Contains "procedureDescriptionFormat".procedureDescriptionFormatid';
comment on column oracle.validproceduretime.startTime is 'Timestamp since this procedure description is valid';
comment on column oracle.validproceduretime.endTime is 'Timestamp until this procedure description is invalid';
comment on column oracle.validproceduretime.descriptionXml is 'Procedure description as XML string';
create table oracle.verticalcrs (pkid number(19,0) not null, nilReason varchar2(255 char), href varchar2(255 char), type varchar2(255 char), role varchar2(255 char), arcrole varchar2(255 char), title varchar2(255 char), show varchar2(255 char), actuate varchar2(255 char), remoteSchema varchar2(255 char), identifier varchar2(255 char), codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), remarks varchar2(255 char), verticalCS number(19,0), verticalDatum number(19,0), primary key (pkid));
comment on column oracle.verticalcrs.pkid is 'Table primary key, used for relations';
comment on column oracle.verticalcrs.identifier is 'The identifier of the object, gml:identifier. Used as parameter for queries. Optional but unique';
comment on column oracle.verticalcrs.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column oracle.verticalcrs.name is 'The name of the object, gml:name. Optional';
comment on column oracle.verticalcrs.codespaceName is 'The name of the object, gml:name. Optional';
comment on column oracle.verticalcrs.description is 'Description of the object, gml:description. Optional';
create table oracle.verticalcrscope (verticalcrsId number(19,0) not null, scope varchar2(255 char) not null, primary key (verticalcrsId, scope));
create table oracle.verticalcrsdomofval (verticalcrsId number(19,0) not null, domainOfValidity number(19,0) not null, primary key (verticalcrsId, domainOfValidity));
create table oracle.verticalcs (pkid number(19,0) not null, nilReason varchar2(255 char), href varchar2(255 char), type varchar2(255 char), role varchar2(255 char), arcrole varchar2(255 char), title varchar2(255 char), show varchar2(255 char), actuate varchar2(255 char), remoteSchema varchar2(255 char), identifier varchar2(255 char), codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), remarks varchar2(255 char), aggregation varchar2(255 char), primary key (pkid));
comment on column oracle.verticalcs.pkid is 'Table primary key, used for relations';
comment on column oracle.verticalcs.identifier is 'The identifier of the object, gml:identifier. Used as parameter for queries. Optional but unique';
comment on column oracle.verticalcs.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column oracle.verticalcs.name is 'The name of the object, gml:name. Optional';
comment on column oracle.verticalcs.codespaceName is 'The name of the object, gml:name. Optional';
comment on column oracle.verticalcs.description is 'Description of the object, gml:description. Optional';
create table oracle.verticalcscoodsysaxis (verticalCSId number(19,0) not null, coordinateSystemAxis number(19,0) not null, primary key (verticalCSId, coordinateSystemAxis));
create table oracle.verticaldatum (pkid number(19,0) not null, nilReason varchar2(255 char), href varchar2(255 char), type varchar2(255 char), role varchar2(255 char), arcrole varchar2(255 char), title varchar2(255 char), show varchar2(255 char), actuate varchar2(255 char), remoteSchema varchar2(255 char), identifier varchar2(255 char), codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), remarks varchar2(255 char), domainOfValidityId number(19,0), anchorDefinition varchar2(255 char), codespaceAnchorDef number(19,0), realizationEpoch timestamp default NULL, primary key (pkid));
comment on column oracle.verticaldatum.pkid is 'Table primary key, used for relations';
comment on column oracle.verticaldatum.identifier is 'The identifier of the object, gml:identifier. Used as parameter for queries. Optional but unique';
comment on column oracle.verticaldatum.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column oracle.verticaldatum.name is 'The name of the object, gml:name. Optional';
comment on column oracle.verticaldatum.codespaceName is 'The name of the object, gml:name. Optional';
comment on column oracle.verticaldatum.description is 'Description of the object, gml:description. Optional';
create table oracle.verticaldatumscope (verticalDatumId number(19,0) not null, scope varchar2(255 char) not null, primary key (verticalDatumId, scope));
create table oracle.verticalexextent (pkid number(19,0) not null, nilReason varchar2(255 char), href varchar2(255 char), type varchar2(255 char), role varchar2(255 char), arcrole varchar2(255 char), title varchar2(255 char), show varchar2(255 char), actuate varchar2(255 char), remoteSchema varchar2(255 char), id varchar2(255 char), uuid varchar2(255 char), minimumValue float, maximumValue float, verticalCRSId number(19,0), primary key (pkid));
comment on column oracle.verticalexextent.pkid is 'Table primary key, used for relations';
create table oracle.wmlmonitoringpoint (featureOfInterestId number(19,0) not null, primary key (featureOfInterestId));
comment on column oracle.wmlmonitoringpoint.featureOfInterestId is 'Foreign Key (FK) to the related featureOfInterest from the featureOfInterest table. Contains "featureOfInterest".featureOfInterestId';
create table oracle.wmlmprelatedparty (featureOfInterestId number(19,0) not null, responsiblePartyId number(19,0) not null, primary key (featureOfInterestId, responsiblePartyId));
create table oracle.wmlmpverticaldatum (featureOfInterestId number(19,0) not null, verticalDatumId number(19,0) not null, primary key (featureOfInterestId, verticalDatumId));
create table oracle.xmlfeatparamvalue (parameterId number(19,0) not null, value long, primary key (parameterId));
comment on table oracle.xmlfeatparamvalue is 'Value table for XML parameter';
comment on column oracle.xmlfeatparamvalue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "featureParameter".parameterid';
comment on column oracle.xmlfeatparamvalue.value is 'XML parameter value';
create table oracle.xmlparametervalue (parameterId number(19,0) not null, value long, primary key (parameterId));
comment on table oracle.xmlparametervalue is 'Value table for XML parameter';
comment on column oracle.xmlparametervalue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid';
comment on column oracle.xmlparametervalue.value is 'XML parameter value';
create table oracle.xmlseriesparamvalue (parameterId number(19,0) not null, value long, primary key (parameterId));
comment on table oracle.xmlseriesparamvalue is 'Value table for XML parameter';
comment on column oracle.xmlseriesparamvalue.parameterId is 'Foreign Key (FK) to the related parameter from the series parameter table. Contains seriesparameter.parameterid';
comment on column oracle.xmlseriesparamvalue.value is 'XML parameter value';
alter table oracle."procedure" add constraint procIdentifierUK unique (identifier);
create index booleanFeatParamIdx on oracle.booleanfeatparamvalue (value);
create index booleanParamIdx on oracle.booleanparametervalue (value);
create index seriesBooleanParamIdx on oracle.booleanseriesparamvalue (value);
create index categoryFeatParamIdx on oracle.categoryfeatparamvalue (value);
create index categoryParamIdx on oracle.categoryparametervalue (value);
create index seriesCategoryParamIdx on oracle.categoryseriesparamvalue (value);
alter table oracle.codespace add constraint codespaceUK unique (codespace);
alter table oracle.coordinatesystemaxis add constraint csaIdentifierUK unique (identifier);
create index countFeatParamIdx on oracle.countfeatparamvalue (value);
create index countParamIdx on oracle.countparametervalue (value);
create index seriesCountParamIdx on oracle.countseriesparamvalue (value);
alter table oracle.domainofvalidity add constraint dovIdentifierUK unique (identifier);
alter table oracle.featureofinterest add constraint foiIdentifierUK unique (identifier);
alter table oracle.featureofinterest add constraint featureUrl unique (url);
;
alter table oracle.featureofinteresttype add constraint featureTypeUK unique (featureOfInterestType);
create index featParamNameIdx on oracle.featureparameter (name);
alter table oracle.i18nfeatureofinterest add constraint i18nFeatureIdentity unique (objectId, locale);
create index i18nFeatureIdx on oracle.i18nfeatureofinterest (objectId);
alter table oracle.i18nobservableproperty add constraint i18nobsPropIdentity unique (objectId, locale);
create index i18nObsPropIdx on oracle.i18nobservableproperty (objectId);
alter table oracle.i18noffering add constraint i18nOfferingIdentity unique (objectId, locale);
create index i18nOfferingIdx on oracle.i18noffering (objectId);
alter table oracle.i18nprocedure add constraint i18nProcedureIdentity unique (objectId, locale);
create index i18nProcedureIdx on oracle.i18nprocedure (objectId);
create index quantityFeatParamIdx on oracle.numericfeatparamvalue (value);
create index quantityParamIdx on oracle.numericparametervalue (value);
create index seriesQuantityParamIdx on oracle.numericseriesparamvalue (value);
alter table oracle.observableproperty add constraint obsPropIdentifierUK unique (identifier);
create index obsSeriesIdx on oracle.observation (seriesId);
create index obsPhenTimeStartIdx on oracle.observation (phenomenonTimeStart);
create index obsPhenTimeEndIdx on oracle.observation (phenomenonTimeEnd);
create index obsResultTimeIdx on oracle.observation (resultTime);
alter table oracle.observationconstellation add constraint obsnConstellationIdentity unique (observablePropertyId, procedureId, offeringId);
create index obsConstObsPropIdx on oracle.observationconstellation (observablePropertyId);
create index obsConstProcedureIdx on oracle.observationconstellation (procedureId);
create index obsConstOfferingIdx on oracle.observationconstellation (offeringId);
create index obshasoffobservationidx on oracle.observationhasoffering (observationId);
create index obshasoffofferingidx on oracle.observationhasoffering (offeringId);
alter table oracle.observationtype add constraint observationTypeUK unique (observationType);
alter table oracle.offering add constraint offIdentifierUK unique (identifier);
create index paramNameIdx on oracle.parameter (name);
alter table oracle.proceduredescriptionformat add constraint procDescFormatUK unique (procedureDescriptionFormat);
alter table oracle.relatedfeaturerole add constraint relFeatRoleUK unique (relatedFeatureRole);
create index relatedObsObsIdx on oracle.relatedobservation (observationId);
create index seriesRelationIdx on oracle.relatedseries (seriesId);
create index resultTempOfferingIdx on oracle.resulttemplate (offeringId);
create index resultTempeObsPropIdx on oracle.resulttemplate (observablePropertyId);
create index resultTempProcedureIdx on oracle.resulttemplate (procedureId);
create index resultTempIdentifierIdx on oracle.resulttemplate (identifier);
alter table oracle.series add constraint seriesIdentity unique (featureOfInterestId, observablePropertyId, procedureId, offeringId);
alter table oracle.series add constraint seriesIdentifierUK unique (identifier);
create index seriesFeatureIdx on oracle.series (featureOfInterestId);
create index seriesObsPropIdx on oracle.series (observablePropertyId);
create index seriesProcedureIdx on oracle.series (procedureId);
create index seriesOfferingIdx on oracle.series (offeringId);
create index seriesParamNameIdx on oracle.seriesparameter (name);
create index textFeatParamIdx on oracle.textfeatparamvalue (value);
create index textParamIdx on oracle.textparametervalue (value);
create index seriesTextParamIdx on oracle.textseriesparamvalue (value);
alter table oracle.unit add constraint unitUK unique (unit);
create index validProcedureTimeStartTimeIdx on oracle.validproceduretime (startTime);
create index validProcedureTimeEndTimeIdx on oracle.validproceduretime (endTime);
alter table oracle.verticalcrs add constraint vcrsIdentifierUK unique (identifier);
alter table oracle.verticalcs add constraint vcsIdentifierUK unique (identifier);
alter table oracle.verticaldatum add constraint vdIdentifierUK unique (identifier);
create index vddovIdx on oracle.verticaldatum (domainOfValidityId);
create index vevcrsIdx on oracle.verticalexextent (verticalCRSId);
create index seriesXmlParamIdx on oracle.xmlseriesparamvalue (value);
alter table oracle."procedure" add constraint procProcDescFormatFk foreign key (procedureDescriptionFormatId) references oracle.proceduredescriptionformat;
alter table oracle."procedure" add constraint procCodespaceIdentifierFk foreign key (codespace) references oracle.codespace;
alter table oracle."procedure" add constraint procCodespaceNameFk foreign key (codespaceName) references oracle.codespace;
alter table oracle."procedure" add constraint typeOfFk foreign key (typeOf) references oracle."procedure";
alter table oracle.addressdeliveryPoint add constraint adddelpoiFk foreign key (addressId) references oracle.address;
alter table oracle.addressemail add constraint addemailFk foreign key (addressId) references oracle.address;
alter table oracle.blobvalue add constraint observationBlobValueFk foreign key (observationId) references oracle.observation;
alter table oracle.booleanfeatparamvalue add constraint featParamBooleanValueFk foreign key (parameterId) references oracle.featureparameter;
alter table oracle.booleanparametervalue add constraint parameterBooleanValueFk foreign key (parameterId) references oracle.parameter;
alter table oracle.booleanseriesparamvalue add constraint seriesParamBooleanValueFk foreign key (parameterId) references oracle.seriesparameter;
alter table oracle.booleanvalue add constraint observationBooleanValueFk foreign key (observationId) references oracle.observation;
alter table oracle.categoryfeatparamvalue add constraint featParamCategoryValueFk foreign key (parameterId) references oracle.featureparameter;
alter table oracle.categoryfeatparamvalue add constraint catfeatparamvalueUnitFk foreign key (unitId) references oracle.unit;
alter table oracle.categoryparametervalue add constraint parameterCategoryValueFk foreign key (parameterId) references oracle.parameter;
alter table oracle.categoryparametervalue add constraint catParamValueUnitFk foreign key (unitId) references oracle.unit;
alter table oracle.categoryseriesparamvalue add constraint seriesParamCategoryValueFk foreign key (parameterId) references oracle.seriesparameter;
alter table oracle.categoryseriesparamvalue add constraint seriesCatParamValueUnitFk foreign key (unitId) references oracle.unit;
alter table oracle.categoryvalue add constraint observationCategoryValueFk foreign key (observationId) references oracle.observation;
alter table oracle.complexvalue add constraint observationComplexValueFk foreign key (observationId) references oracle.observation;
alter table oracle.compositeobservation add constraint observationChildFk foreign key (childObservationId) references oracle.observation;
alter table oracle.compositeobservation add constraint observationParentFK foreign key (observationId) references oracle.complexvalue;
alter table oracle.compositephenomenon add constraint observablePropertyChildFk foreign key (childObservablePropertyId) references oracle.observableproperty;
alter table oracle.compositephenomenon add constraint observablePropertyParentFk foreign key (parentObservablePropertyId) references oracle.observableproperty;
alter table oracle.contact add constraint contactphoneFk foreign key (phoneId) references oracle.telephone;
alter table oracle.contact add constraint contactaddressFk foreign key (addressId) references oracle.address;
alter table oracle.contact add constraint contactonlineresFk foreign key (onlineresourceid) references oracle.onlineresource;
alter table oracle.coordinatesystemaxis add constraint csaCodespaceIdentifierFk foreign key (codespace) references oracle.codespace;
alter table oracle.coordinatesystemaxis add constraint csaCodespaceNameFk foreign key (codespaceName) references oracle.codespace;
alter table oracle.coordinatesystemaxis add constraint scsacodeaaFk foreign key (codespaceAxisAbbrev) references oracle.codespace;
alter table oracle.coordinatesystemaxis add constraint scsacodeadFk foreign key (codespaceAxisDirection) references oracle.codespace;
alter table oracle.coordinatesystemaxis add constraint scsacodermFk foreign key (codespaceRangeMeaning) references oracle.codespace;
alter table oracle.coordinatesystemaxis add constraint csaUnitFk foreign key (unitId) references oracle.unit;
alter table oracle.countfeatparamvalue add constraint featParamCountValueFk foreign key (parameterId) references oracle.featureparameter;
alter table oracle.countparametervalue add constraint parameterCountValueFk foreign key (parameterId) references oracle.parameter;
alter table oracle.countseriesparamvalue add constraint seriesParamCountValueFk foreign key (parameterId) references oracle.seriesparameter;
alter table oracle.countvalue add constraint observationCountValueFk foreign key (observationId) references oracle.observation;
alter table oracle.domainofvalidity add constraint codCodespaceIdentifierFk foreign key (codespace) references oracle.codespace;
alter table oracle.domainofvalidity add constraint codCodespaceNameFk foreign key (codespaceName) references oracle.codespace;
alter table oracle.domainofvalidity add constraint dovexeFk foreign key (exExtentId) references oracle.exextent;
alter table oracle.exextentverticalext add constraint FK_qppk0ymn6peh5v1571aajqa8g foreign key (exVerticalExtentId) references oracle.verticalexextent;
alter table oracle.exextentverticalext add constraint exeexveFk foreign key (exExtentId) references oracle.exextent;
alter table oracle.featureofinterest add constraint featureFeatureTypeFk foreign key (featureOfInterestTypeId) references oracle.featureofinteresttype;
alter table oracle.featureofinterest add constraint featureCodespaceIdentifierFk foreign key (codespace) references oracle.codespace;
alter table oracle.featureofinterest add constraint featureCodespaceNameFk foreign key (codespaceName) references oracle.codespace;
alter table oracle.featureparameter add constraint FK_4ps6yv41rwnbu3q0let2v7772 foreign key (featureOfInterestId) references oracle.featureofinterest;
alter table oracle.featurerelation add constraint featureOfInterestChildFk foreign key (childFeatureId) references oracle.featureofinterest;
alter table oracle.featurerelation add constraint featureOfInterestParentFk foreign key (parentFeatureId) references oracle.featureofinterest;
alter table oracle.geometryvalue add constraint observationGeometryValueFk foreign key (observationId) references oracle.observation;
alter table oracle.i18nfeatureofinterest add constraint i18nFeatureFeatureFk foreign key (objectId) references oracle.featureofinterest;
alter table oracle.i18nobservableproperty add constraint i18nObsPropObsPropFk foreign key (objectId) references oracle.observableproperty;
alter table oracle.i18noffering add constraint i18nOfferingOfferingFk foreign key (objectId) references oracle.offering;
alter table oracle.i18nprocedure add constraint i18nProcedureProcedureFk foreign key (objectId) references oracle."procedure";
alter table oracle.numericfeatparamvalue add constraint featParamNumericValueFk foreign key (parameterId) references oracle.featureparameter;
alter table oracle.numericfeatparamvalue add constraint quanfeatparamvalueUnitFk foreign key (unitId) references oracle.unit;
alter table oracle.numericparametervalue add constraint parameterNumericValueFk foreign key (parameterId) references oracle.parameter;
alter table oracle.numericparametervalue add constraint quanParamValueUnitFk foreign key (unitId) references oracle.unit;
alter table oracle.numericseriesparamvalue add constraint seriesParamNumericValueFk foreign key (parameterId) references oracle.seriesparameter;
alter table oracle.numericseriesparamvalue add constraint seriesQuanParamValueUnitFk foreign key (unitId) references oracle.unit;
alter table oracle.numericvalue add constraint observationNumericValueFk foreign key (observationId) references oracle.observation;
alter table oracle.observableproperty add constraint obsPropCodespaceIdentifierFk foreign key (codespace) references oracle.codespace;
alter table oracle.observableproperty add constraint obsPropCodespaceNameFk foreign key (codespaceName) references oracle.codespace;
alter table oracle.observation add constraint observationSeriesFk foreign key (seriesId) references oracle.series;
alter table oracle.observation add constraint obsCodespaceIdentifierFk foreign key (codespace) references oracle.codespace;
alter table oracle.observation add constraint obsCodespaceNameFk foreign key (codespaceName) references oracle.codespace;
alter table oracle.observation add constraint observationUnitFk foreign key (unitId) references oracle.unit;
alter table oracle.observationconstellation add constraint obsConstObsPropFk foreign key (observablePropertyId) references oracle.observableproperty;
alter table oracle.observationconstellation add constraint obsnConstProcedureFk foreign key (procedureId) references oracle."procedure";
alter table oracle.observationconstellation add constraint obsConstObservationIypeFk foreign key (observationTypeId) references oracle.observationtype;
alter table oracle.observationconstellation add constraint obsConstOfferingFk foreign key (offeringId) references oracle.offering;
alter table oracle.observationhasoffering add constraint observationOfferingFk foreign key (offeringId) references oracle.offering;
alter table oracle.observationhasoffering add constraint FK_s19siow5aetbwb8ppww4kb96n foreign key (observationId) references oracle.observation;
alter table oracle.offering add constraint offCodespaceIdentifierFk foreign key (codespace) references oracle.codespace;
alter table oracle.offering add constraint offCodespaceNameFk foreign key (codespaceName) references oracle.codespace;
alter table oracle.offeringallowedfeaturetype add constraint offeringFeatureTypeFk foreign key (featureOfInterestTypeId) references oracle.featureofinteresttype;
alter table oracle.offeringallowedfeaturetype add constraint FK_cu8nfsf9q5vsn070o2d3u6chg foreign key (offeringId) references oracle.offering;
alter table oracle.offeringallowedobservationtype add constraint offeringObservationTypeFk foreign key (observationTypeId) references oracle.observationtype;
alter table oracle.offeringallowedobservationtype add constraint FK_jehw0637hllvta9ao1tqdhrtm foreign key (offeringId) references oracle.offering;
alter table oracle.offeringhasrelatedfeature add constraint relatedFeatureOfferingFk foreign key (offeringId) references oracle.offering;
alter table oracle.offeringhasrelatedfeature add constraint offeringRelatedFeatureFk foreign key (relatedFeatureId) references oracle.relatedfeature;
alter table oracle.offeringrelation add constraint offeringChildFk foreign key (childOfferingId) references oracle.offering;
alter table oracle.offeringrelation add constraint offeringParenfFk foreign key (parentOfferingId) references oracle.offering;
alter table oracle.parameter add constraint FK_3v5iovcndi9w0hgh827hcvivw foreign key (observationId) references oracle.observation;
alter table oracle.phonefacsimile add constraint phonefacsimilefk foreign key (phoneId) references oracle.telephone;
alter table oracle.phonevoice add constraint phonevoicefk foreign key (phoneId) references oracle.telephone;
alter table oracle.profileobservation add constraint profileObsChildFk foreign key (childObservationId) references oracle.observation;
alter table oracle.profileobservation add constraint profileObsParentFK foreign key (observationId) references oracle.profilevalue;
alter table oracle.profilevalue add constraint observationProfileValueFk foreign key (observationId) references oracle.observation;
alter table oracle.profilevalue add constraint profileUnitFk foreign key (levelunitid) references oracle.unit;
alter table oracle.relatedfeature add constraint relatedFeatureFeatureFk foreign key (featureOfInterestId) references oracle.featureofinterest;
alter table oracle.relatedfeaturehasrole add constraint relatedFeatRelatedFeatRoleFk foreign key (relatedFeatureRoleId) references oracle.relatedfeaturerole;
alter table oracle.relatedfeaturehasrole add constraint FK_5fd921q6mnbkc57mgm5g4uyyn foreign key (relatedFeatureId) references oracle.relatedfeature;
alter table oracle.relatedobservation add constraint FK_g0f0mpuxn3co65uwud4pwxh4q foreign key (observationId) references oracle.observation;
alter table oracle.relatedobservation add constraint FK_m4nuof4x6w253biuu1r6ttnqc foreign key (relatedObservation) references oracle.observation;
alter table oracle.relatedseries add constraint relatedSeriesFk foreign key (relatedSeries) references oracle.series;
alter table oracle.responsibleparty add constraint rpcontactFk foreign key (contactInfo) references oracle.contact;
alter table oracle.responsibleparty add constraint rproleFk foreign key (ciRole) references oracle.role;
alter table oracle.resulttemplate add constraint resultTemplateOfferingIdx foreign key (offeringId) references oracle.offering;
alter table oracle.resulttemplate add constraint resultTemplateObsPropFk foreign key (observablePropertyId) references oracle.observableproperty;
alter table oracle.resulttemplate add constraint resultTemplateProcedureFk foreign key (procedureId) references oracle."procedure";
alter table oracle.resulttemplate add constraint resultTemplateFeatureIdx foreign key (featureOfInterestId) references oracle.featureofinterest;
alter table oracle.sensorsystem add constraint procedureChildFk foreign key (childSensorId) references oracle."procedure";
alter table oracle.sensorsystem add constraint procedureParenfFk foreign key (parentSensorId) references oracle."procedure";
alter table oracle.series add constraint seriesFeatureFk foreign key (featureOfInterestId) references oracle.featureofinterest;
alter table oracle.series add constraint seriesObPropFk foreign key (observablePropertyId) references oracle.observableproperty;
alter table oracle.series add constraint seriesProcedureFk foreign key (procedureId) references oracle."procedure";
alter table oracle.series add constraint seriesOfferingFk foreign key (offeringId) references oracle.offering;
alter table oracle.series add constraint seriesUnitFk foreign key (unitId) references oracle.unit;
alter table oracle.series add constraint seriesCodespaceIdentifierFk foreign key (codespace) references oracle.codespace;
alter table oracle.series add constraint seriesCodespaceNameFk foreign key (codespaceName) references oracle.codespace;
alter table oracle.specimen add constraint specimenFeatureFk foreign key (featureOfInterestId) references oracle.featureofinterest;
alter table oracle.specimen add constraint observationUnitFk foreign key (sizeUnitId) references oracle.unit;
alter table oracle.swedataarrayvalue add constraint observationSweDataArrayValueFk foreign key (observationId) references oracle.observation;
alter table oracle.textfeatparamvalue add constraint featParamTextValueFk foreign key (parameterId) references oracle.featureparameter;
alter table oracle.textparametervalue add constraint parameterTextValueFk foreign key (parameterId) references oracle.parameter;
alter table oracle.textseriesparamvalue add constraint seriesParamTextValueFk foreign key (parameterId) references oracle.seriesparameter;
alter table oracle.textvalue add constraint observationTextValueFk foreign key (observationId) references oracle.observation;
alter table oracle.validproceduretime add constraint validProcedureTimeProcedureFk foreign key (procedureId) references oracle."procedure";
alter table oracle.validproceduretime add constraint validProcProcDescFormatFk foreign key (procedureDescriptionFormatId) references oracle.proceduredescriptionformat;
alter table oracle.verticalcrs add constraint vcrsCodespaceIdentifierFk foreign key (codespace) references oracle.codespace;
alter table oracle.verticalcrs add constraint vcrsCodespaceNameFk foreign key (codespaceName) references oracle.codespace;
alter table oracle.verticalcrs add constraint vcrsvcsfk foreign key (verticalCS) references oracle.verticalcs;
alter table oracle.verticalcrs add constraint vcrsvdfk foreign key (verticalDatum) references oracle.verticaldatum;
alter table oracle.verticalcrscope add constraint vcrsscopefk foreign key (verticalcrsId) references oracle.verticalcrs;
alter table oracle.verticalcrsdomofval add constraint vcrsdovfk foreign key (domainOfValidity) references oracle.domainofvalidity;
alter table oracle.verticalcrsdomofval add constraint vcrsdovidfk foreign key (verticalcrsId) references oracle.verticalcrs;
alter table oracle.verticalcs add constraint vcsCodespaceIdentifierFk foreign key (codespace) references oracle.codespace;
alter table oracle.verticalcs add constraint vcsCodespaceNameFk foreign key (codespaceName) references oracle.codespace;
alter table oracle.verticalcscoodsysaxis add constraint vcscsafk foreign key (coordinateSystemAxis) references oracle.coordinatesystemaxis;
alter table oracle.verticalcscoodsysaxis add constraint vcscsaidfk foreign key (verticalCSId) references oracle.verticalcs;
alter table oracle.verticaldatum add constraint vdCodespaceIdentifierFk foreign key (codespace) references oracle.codespace;
alter table oracle.verticaldatum add constraint vdCodespaceNameFk foreign key (codespaceName) references oracle.codespace;
alter table oracle.verticaldatum add constraint vddovFk foreign key (domainOfValidityId) references oracle.domainofvalidity;
alter table oracle.verticaldatum add constraint vdCodespaceADefFk foreign key (codespaceAnchorDef) references oracle.codespace;
alter table oracle.verticaldatumscope add constraint vdscopefk foreign key (verticalDatumId) references oracle.verticaldatum;
alter table oracle.verticalexextent add constraint vevcrsFk foreign key (verticalCRSId) references oracle.verticalcrs;
alter table oracle.wmlmonitoringpoint add constraint wmlmpFeatureFk foreign key (featureOfInterestId) references oracle.featureofinterest;
alter table oracle.wmlmprelatedparty add constraint wmlmprpFk foreign key (responsiblePartyId) references oracle.responsibleparty;
alter table oracle.wmlmprelatedparty add constraint FK_nyt2o5m81p35lqk7rctyook4o foreign key (featureOfInterestId) references oracle.featureofinterest;
alter table oracle.wmlmpverticaldatum add constraint FK_r4s9vt1g0o5o4lfi37qrh2yad foreign key (verticalDatumId) references oracle.verticaldatum;
alter table oracle.wmlmpverticaldatum add constraint wmlmpvdFk foreign key (featureOfInterestId) references oracle.featureofinterest;
alter table oracle.xmlfeatparamvalue add constraint featParamXmlValueFk foreign key (parameterId) references oracle.featureparameter;
alter table oracle.xmlparametervalue add constraint parameterXmlValueFk foreign key (parameterId) references oracle.parameter;
alter table oracle.xmlseriesparamvalue add constraint seriesParamXmlValueFk foreign key (parameterId) references oracle.seriesparameter;
create sequence oracle.addressId_seq;
create sequence oracle.codespaceId_seq;
create sequence oracle.contactId_seq;
create sequence oracle.coordSysAxisId_seq;
create sequence oracle.domOfValidityId_seq;
create sequence oracle.exExtentId_seq;
create sequence oracle.featureOfInterestId_seq;
create sequence oracle.featureOfInterestTypeId_seq;
create sequence oracle.i18nObsPropId_seq;
create sequence oracle.i18nOfferingId_seq;
create sequence oracle.i18nProcedureId_seq;
create sequence oracle.i18nfeatureOfInterestId_seq;
create sequence oracle.metadataId_seq;
create sequence oracle.observablePropertyId_seq;
create sequence oracle.observationConstellationId_seq;
create sequence oracle.observationId_seq;
create sequence oracle.observationTypeId_seq;
create sequence oracle.offeringId_seq;
create sequence oracle.onlineResourceId_seq;
create sequence oracle.parameterId_seq;
create sequence oracle.procDescFormatId_seq;
create sequence oracle.procedureId_seq;
create sequence oracle.relatedFeatureId_seq;
create sequence oracle.relatedFeatureRoleId_seq;
create sequence oracle.relatedObservationId_seq;
create sequence oracle.responsiblePartyId_seq;
create sequence oracle.resultTemplateId_seq;
create sequence oracle.roleId_seq;
create sequence oracle.seriesId_seq;
create sequence oracle.seriesRelationId_seq;
create sequence oracle.telephoneId_seq;
create sequence oracle.unitId_seq;
create sequence oracle.validProcedureTimeId_seq;
create sequence oracle.verticalCRSId_seq;
create sequence oracle.verticalCSId_seq;
create sequence oracle.verticalDatumId_seq;
create sequence oracle.verticalExExtentId_seq;