--
-- Copyright (C) 2012-2017 52°North Initiative for Geospatial Open Source
-- Software GmbH
--
-- This program is free software; you can redistribute it and/or modify it
-- under the terms of the GNU General Public License version 2 as published
-- by the Free Software Foundation.
--
-- If the program is linked with libraries which are licensed under one of
-- the following licenses, the combination of the program with the linked
-- library is not considered a "derivative work" of the program:
--
--     - Apache License, version 2.0
--     - Apache Software License, version 1.0
--     - GNU Lesser General Public License, version 3
--     - Mozilla Public License, versions 1.0, 1.1 and 2.0
--     - Common Development and Distribution License (CDDL), version 1.0
--
-- Therefore the distribution of the program linked with libraries licensed
-- under the aforementioned licenses, is permitted by the copyright holders
-- if the distribution is compliant with both the GNU General Public
-- License version 2 and the aforementioned licenses.
--
-- This program is distributed in the hope that it will be useful, but
-- WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
-- Public License for more details.
--

create table sos.`procedure` (procedureId bigint not null auto_increment comment 'Table primary key, used for relations', hibernateDiscriminator char(1) not null, procedureDescriptionFormatId bigint not null comment 'Relation/foreign key to the procedureDescriptionFormat table. Describes the format of the procedure description.', identifier varchar(255) not null comment 'The identifier of the procedure, gml:identifier. Used as parameter for queries. Unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the procedure, gml:name. Optional', codespaceName bigint comment 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional', description varchar(255) comment 'Description of the procedure, gml:description. Optional', deleted char(1) default 'F' not null comment 'Flag to indicate that this procedure is deleted or not (OGC SWES 2.0 - DeleteSensor operation)', disabled char(1) default 'F' not null comment 'For later use by the SOS. Indicator if this procedure should not be provided by the SOS.', descriptionFile longtext comment 'Field for full (XML) encoded procedure description or link to a procedure description file. Optional', referenceFlag char(1) default 'F' comment 'Flag to indicate that this procedure is a reference procedure of another procedure. Not used by the SOS but by the Sensor Web REST-API', typeOf bigint comment 'Relation/foreign key to procedure table. Optional, contains procedureId if this procedure is typeOf another procedure', isType char(1) default 'F' comment 'Flag to indicate that this procedure is a type description, has no observations.', isAggregation char(1) default 'T' comment 'Flag to indicate that this procedure is an aggregation (e.g. System, PhysicalSystem).', primary key (procedureId)) comment='Table to store the procedure/sensor. Mapping file: mapping/core/Procedure.hbm.xml' ENGINE=InnoDB;
create table sos.blobValue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value longblob comment 'Blob observation value', primary key (observationId)) comment='Value table for blob observation' ENGINE=InnoDB;
create table sos.booleanParameterValue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid', value char(1) comment 'Boolean parameter value', primary key (parameterId), check (value in ('T','F'))) comment='Value table for boolean parameter' ENGINE=InnoDB;
create table sos.booleanValue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value char(1) comment 'Boolean observation value', primary key (observationId), check (value in ('T','F')), check (value in ('T','F'))) comment='Value table for boolean observation' ENGINE=InnoDB;
create table sos.categoryParameterValue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid', value varchar(255) comment 'Category parameter value', unitId bigint comment 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional', primary key (parameterId)) comment='Value table for category parameter' ENGINE=InnoDB;
create table sos.categoryValue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value varchar(255) comment 'Category observation value', primary key (observationId)) comment='Value table for category observation' ENGINE=InnoDB;
create table sos.codespace (codespaceId bigint not null auto_increment comment 'Table primary key, used for relations', codespace varchar(255) not null comment 'The codespace value', primary key (codespaceId)) comment='Table to store the gml:identifier and gml:name codespace information. Mapping file: mapping/core/Codespace.hbm.xml' ENGINE=InnoDB;
create table sos.complexValue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', primary key (observationId)) comment='Value table for complex observation' ENGINE=InnoDB;
create table sos.compositeObservation (observationId bigint not null comment 'Foreign Key (FK) to the related parent complex observation. Contains "observation".observationid', childObservationId bigint not null comment 'Foreign Key (FK) to the related child complex observation. Contains "observation".observationid', primary key (observationId, childObservationId)) comment='Relation table for complex parent/child observations' ENGINE=InnoDB;
create table sos.compositePhenomenon (parentObservablePropertyId bigint not null comment 'Foreign Key (FK) to the related parent observableProperty. Contains "observableProperty".observablePropertyid', childObservablePropertyId bigint not null comment 'Foreign Key (FK) to the related child observableProperty. Contains "observableProperty".observablePropertyid', primary key (childObservablePropertyId, parentObservablePropertyId)) comment='Relation table to store observableProperty hierarchies, aka compositePhenomenon. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/transactional/TObservableProperty.hbm.xml' ENGINE=InnoDB;
create table sos.countParameterValue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid', value integer comment 'Count parameter value', primary key (parameterId)) comment='Value table for count parameter' ENGINE=InnoDB;
create table sos.countValue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value integer comment 'Count observation value', primary key (observationId)) comment='Value table for count observation' ENGINE=InnoDB;
create table sos.featureOfInterest (featureOfInterestId bigint not null auto_increment comment 'Table primary key, used for relations', featureOfInterestTypeId bigint not null comment 'Relation/foreign key to the featureOfInterestType table. Describes the type of the featureOfInterest. Contains "featureOfInterestType".featureOfInterestTypeId', identifier varchar(255) comment 'The identifier of the featureOfInterest, gml:identifier. Used as parameter for queries. Optional but unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the featureOfInterest, gml:name. Optional', codespaceName bigint comment 'The name of the featureOfInterest, gml:name. Optional', description varchar(255) comment 'Description of the featureOfInterest, gml:description. Optional', geom GEOMETRY comment 'The geometry of the featureOfInterest (composed of the �latitude� and �longitude�) . Optional', descriptionXml longtext comment 'XML description of the feature, used when transactional profile is supported . Optional', url varchar(255) comment 'Reference URL to the feature if it is stored in another service, e.g. WFS. Optional but unique', primary key (featureOfInterestId)) comment='Table to store the FeatureOfInterest information. Mapping file: mapping/core/FeatureOfInterest.hbm.xml' ENGINE=InnoDB;
create table sos.featureOfInterestType (featureOfInterestTypeId bigint not null auto_increment comment 'Table primary key, used for relations', featureOfInterestType varchar(255) not null comment 'The featureOfInterestType value, e.g. http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint (OGC OM 2.0 specification) for point features', primary key (featureOfInterestTypeId)) comment='Table to store the FeatureOfInterestType information. Mapping file: mapping/core/FeatureOfInterestType.hbm.xml' ENGINE=InnoDB;
create table sos.featureRelation (parentFeatureId bigint not null comment 'Foreign Key (FK) to the related parent featureOfInterest. Contains "featureOfInterest".featureOfInterestid', childFeatureId bigint not null comment 'Foreign Key (FK) to the related child featureOfInterest. Contains "featureOfInterest".featureOfInterestid', primary key (childFeatureId, parentFeatureId)) comment='Relation table to store feature hierarchies. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/transactional/TFeatureOfInterest.hbm.xml' ENGINE=InnoDB;
create table sos.geometryValue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value GEOMETRY comment 'Geometry observation value', primary key (observationId)) comment='Value table for geometry observation' ENGINE=InnoDB;
create table sos.i18nfeatureOfInterest (id bigint not null auto_increment comment 'Table primary key', objectId bigint not null comment 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestid', locale varchar(255) not null comment 'Locale/language identification, e.g. eng, ger', name varchar(255) comment 'Locale/language specific name of the featureOfInterest', description varchar(255) comment 'Locale/language specific description of the featureOfInterest', primary key (id)) comment='Table to i18n metadata for the featureOfInterest. Mapping file: mapping/i18n/HibernateI18NFeatureOfInterestMetadata.hbm.xml' ENGINE=InnoDB;
create table sos.i18nobservableProperty (id bigint not null auto_increment comment 'Table primary key', objectId bigint not null comment 'Foreign Key (FK) to the related observableProperty. Contains "observableProperty".observablePropertyid', locale varchar(255) not null comment 'Locale/language identification, e.g. eng, ger', name varchar(255) comment 'Locale/language specific name of the observableProperty', description varchar(255) comment 'Locale/language specific description of the observableProperty', primary key (id)) comment='Table to i18n metadata for the observableProperty/phenomenon. Mapping file: mapping/i18n/HibernateI18NObservablePropertyMetadata.hbm.xml' ENGINE=InnoDB;
create table sos.i18noffering (id bigint not null auto_increment comment 'Table primary key', objectId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', locale varchar(255) not null comment 'Locale/language identification, e.g. eng, ger', name varchar(255) comment 'Locale/language specific name of the offering', description varchar(255) comment 'Locale/language specific description of the offering', primary key (id)) comment='Table to i18n metadata for the offering. Mapping file: mapping/i18n/HibernateI18NOfferingMetadata.hbm.xml' ENGINE=InnoDB;
create table sos.i18nprocedure (id bigint not null auto_increment comment 'Table primary key', objectId bigint not null comment 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid', locale varchar(255) not null comment 'Locale/language identification, e.g. eng, ger', name varchar(255) comment 'Locale/language specific name of the procedure', description varchar(255) comment 'Locale/language specific description of the procedure', shortname varchar(255) comment 'Locale/language specific shortname of the procedure', longname varchar(255) comment 'Locale/language specific longname of the procedure', primary key (id)) comment='Table to i18n metadata for the procedure. Mapping file: mapping/i18n/HibernateI18NProcedureMetadata.hbm.xml' ENGINE=InnoDB;
create table sos.numericParameterValue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid', value double precision comment 'Numeric/Quantity parameter value', unitId bigint comment 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional', primary key (parameterId)) comment='Value table for numeric/Measurment parameter' ENGINE=InnoDB;
create table sos.numericValue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value double precision comment 'Numeric/Measurment observation value', primary key (observationId)) comment='Value table for numeric/Measurment observation' ENGINE=InnoDB;
create table sos.observableProperty (observablePropertyId bigint not null auto_increment comment 'Table primary key, used for relations', identifier varchar(255) not null comment 'The identifier of the observableProperty, gml:identifier. Used as parameter for queries. Unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the observableProperty, gml:name. Optional', codespaceName bigint comment 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional', description varchar(255) comment 'Description of the observableProperty, gml:description. Optional', disabled char(1) default 'F' not null comment 'For later use by the SOS. Indicator if this observableProperty should not be provided by the SOS.', hiddenChild char(1) default 'F' not null, primary key (observablePropertyId)) comment='Table to store the ObservedProperty/Phenomenon information. Mapping file: mapping/core/ObservableProperty.hbm.xml' ENGINE=InnoDB;
create table sos.observation (observationId bigint not null auto_increment comment 'Table primary key, used in relations', seriesId bigint not null comment 'Relation/foreign key to the associated series table. Contains "series".seriesId', phenomenonTimeStart timestamp not null comment 'Time stamp when the observation was started or phenomenon was observed', phenomenonTimeEnd timestamp not null comment 'Time stamp when the observation was stopped or phenomenon was observed', resultTime timestamp not null comment 'Time stamp when the observation was published or result was published/available', identifier varchar(255) comment 'The identifier of the observation, gml:identifier. Used as parameter for queries. Optional but unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the observation, gml:name. Optional', codespaceName bigint comment 'The name of the observation, gml:name. Optional', description varchar(255) comment 'The name of the observation, gml:name. Optional', deleted char(1) default 'F' not null comment 'Flag to indicate that this observation is deleted or not (OGC SWES 2.0 - DeleteSensor operation or not specified DeleteObservation)', child char(1) default 'F' not null comment 'Flag to indicate that this observation is a child observation for complex observation', parent char(1) default 'F' not null comment 'Flag to indicate that this observation is a parent observation for complex observation', validTimeStart timestamp NULL default NULL comment 'Start time stamp for which the observation/result is valid, e.g. used for forecasting. Optional', validTimeEnd timestamp NULL default NULL comment 'End time stamp for which the observation/result is valid, e.g. used for forecasting. Optional', samplingGeometry GEOMETRY comment 'Sampling geometry describes exactly where the measurement has taken place. Used for OGC SOS 2.0 Spatial Filtering Profile. Optional', unitId bigint comment 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional', primary key (observationId)) comment='Stores the observations. Mapping file: mapping/series/observation/ValuedObservation.hbm.xml' ENGINE=InnoDB;
create table sos.observationConstellation (observationConstellationId bigint not null auto_increment comment 'Table primary key, used for relations', observablePropertyId bigint not null comment 'Foreign Key (FK) to the related observableProperty. Contains "observableproperty".observablepropertyid', procedureId bigint not null comment 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid', observationTypeId bigint comment 'Foreign Key (FK) to the related observableProperty. Contains "observationtype".observationtypeid', offeringId bigint not null comment 'Foreign Key (FK) to the related observableProperty. Contains "offering".offeringid', deleted char(1) default 'F' not null comment 'Flag to indicate that this observationConstellation is deleted or not. Set if the related procedure is deleted via DeleteSensor operation (OGC SWES 2.0 - DeleteSensor operation)', hiddenChild char(1) default 'F' not null comment 'Flag to indicate that this observationConstellations procedure is a child procedure of another procedure. If true, the related procedure is not contained in OGC SOS 2.0 Capabilities but in OGC SOS 1.0.0 Capabilities.', primary key (observationConstellationId)) comment='Table to store the ObservationConstellation information. Contains information about the constellation of observableProperty, procedure, offering and the observationType. Mapping file: mapping/core/ObservationConstellation.hbm.xml' ENGINE=InnoDB;
create table sos.observationHasOffering (observationId bigint not null comment 'Foreign Key (FK) to the related observation. Contains "observation".observationid', offeringId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', primary key (observationId, offeringId)) ENGINE=InnoDB;
create table sos.observationType (observationTypeId bigint not null auto_increment comment 'Table primary key, used for relations', observationType varchar(255) not null comment 'The observationType value, e.g. http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement (OGC OM 2.0 specification) for OM_Measurement', primary key (observationTypeId)) comment='Table to store the observationTypes. Mapping file: mapping/core/ObservationType.hbm.xml' ENGINE=InnoDB;
create table sos.offering (offeringId bigint not null auto_increment comment 'Table primary key, used for relations', hibernateDiscriminator char(1) not null, identifier varchar(255) not null comment 'The identifier of the offering, gml:identifier. Used as parameter for queries. Unique', codespace bigint comment 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional', name varchar(255) comment 'The name of the offering, gml:name. If available, displyed in the contents of the Capabilites. Optional', codespaceName bigint comment 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional', description varchar(255) comment 'Description of the offering, gml:description. Optional', disabled char(1) default 'F' not null comment 'For later use by the SOS. Indicator if this offering should not be provided by the SOS.', primary key (offeringId)) comment='Table to store the offering information. Mapping file: mapping/core/Offering.hbm.xml' ENGINE=InnoDB;
create table sos.offeringAllowedFeatureType (offeringId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', featureOfInterestTypeId bigint not null comment 'Foreign Key (FK) to the related featureOfInterestTypeId. Contains "featureOfInterestType".featureOfInterestTypeId', primary key (offeringId, featureOfInterestTypeId)) comment='Table to store relations between offering and allowed featureOfInterestTypes, defined in InsertSensor request. Mapping file: mapping/transactional/TOffering.hbm.xml' ENGINE=InnoDB;
create table sos.offeringAllowedObservationType (offeringId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', observationTypeId bigint not null comment 'Foreign Key (FK) to the related observationType. Contains "observationType".observationTypeId', primary key (offeringId, observationTypeId)) comment='Table to store relations between offering and allowed observationTypes, defined in InsertSensor request. Mapping file: mapping/transactional/TOffering.hbm.xml' ENGINE=InnoDB;
create table sos.offeringHasRelatedFeature (relatedFeatureId bigint not null comment 'Foreign Key (FK) to the related relatedFeature. Contains "relatedFeature".relatedFeatureid', offeringId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', primary key (offeringId, relatedFeatureId)) comment='Table to store relations between offering and associated relatedFeatures. Mapping file: mapping/transactional/TOffering.hbm.xml' ENGINE=InnoDB;
create table sos.parameter (parameterId bigint not null auto_increment comment 'Table primary key', observationId bigint not null comment 'Foreign Key (FK) to the related observation. Contains "observation".observationId', name varchar(255) not null comment 'Parameter name', primary key (parameterId)) comment='Table to store additional obervation information (om:parameter). Mapping file: mapping/core/Parameter.hbm.xml' ENGINE=InnoDB;
create table sos.procedureDescriptionFormat (procedureDescriptionFormatId bigint not null auto_increment comment 'Table primary key, used for relations', procedureDescriptionFormat varchar(255) not null comment 'The procedureDescriptionFormat value, e.g. http://www.opengis.net/sensorML/1.0.1 for procedures descriptions as specified in OGC SensorML 1.0.1', primary key (procedureDescriptionFormatId)) comment='Table to store the ProcedureDescriptionFormat information of procedures. Mapping file: mapping/core/ProcedureDescriptionFormat.hbm.xml' ENGINE=InnoDB;
create table sos.relatedFeature (relatedFeatureId bigint not null auto_increment comment 'Table primary key, used for relations', featureOfInterestId bigint not null comment 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestid', primary key (relatedFeatureId)) comment='Table to store related feature information used in the OGC SOS 2.0 Capabilities (See also OGC SWES 2.0). Mapping file: mapping/transactionl/RelatedFeature.hbm.xml' ENGINE=InnoDB;
create table sos.relatedFeatureHasRole (relatedFeatureId bigint not null comment 'Foreign Key (FK) to the related relatedFeature. Contains "relatedFeature".relatedFeatureid', relatedFeatureRoleId bigint not null comment 'Foreign Key (FK) to the related relatedFeatureRole. Contains "relatedFeatureRole".relatedFeatureRoleid', primary key (relatedFeatureId, relatedFeatureRoleId)) comment='Relation table to store relatedFeatures and their associated relatedFeatureRoles. Mapping file: mapping/transactionl/RelatedFeature.hbm.xml' ENGINE=InnoDB;
create table sos.relatedFeatureRole (relatedFeatureRoleId bigint not null auto_increment comment 'Table primary key, used for relations', relatedFeatureRole varchar(255) not null comment 'The related feature role definition. See OGC SWES 2.0 specification', primary key (relatedFeatureRoleId)) comment='Table to store related feature role information used in the OGC SOS 2.0 Capabilities (See also OGC SWES 2.0). Mapping file: mapping/transactionl/RelatedFeatureRole.hbm.xml' ENGINE=InnoDB;
create table sos.resultTemplate (resultTemplateId bigint not null auto_increment comment 'Table primary key', offeringId bigint not null comment 'Foreign Key (FK) to the related offering. Contains "offering".offeringid', observablePropertyId bigint not null comment 'Foreign Key (FK) to the related observableProperty. Contains "observableProperty".observablePropertyId', procedureId bigint not null comment 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureId', featureOfInterestId bigint not null comment 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestid', identifier varchar(255) not null comment 'The resultTemplate identifier, required for InsertResult requests.', resultStructure longtext not null comment 'The resultStructure as XML string. Describes the types and order of the values in a GetResultResponse/InsertResultRequest', resultEncoding longtext not null comment 'The resultEncoding as XML string. Describes the encoding of the values in a GetResultResponse/InsertResultRequest', primary key (resultTemplateId)) comment='Table to store resultTemplates (OGC SOS 2.0 result handling profile). Mapping file: mapping/transactionl/ResultTemplate.hbm.xml' ENGINE=InnoDB;
create table sos.sensorSystem (parentSensorId bigint not null comment 'Foreign Key (FK) to the related parent procedure. Contains "procedure".procedureid', childSensorId bigint not null comment 'Foreign Key (FK) to the related child procedure. Contains "procedure".procedureid', primary key (childSensorId, parentSensorId)) comment='Relation table to store procedure hierarchies. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/transactional/TProcedure.hbm.xml' ENGINE=InnoDB;
create table sos.series (seriesId bigint not null auto_increment comment 'Table primary key, used for relations', featureOfInterestId bigint not null comment 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestId', observablePropertyId bigint not null comment 'Foreign Key (FK) to the related observableProperty. Contains "observableproperty".observablepropertyid', procedureId bigint not null comment 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid', deleted char(1) default 'F' not null comment 'Flag to indicate that this series is deleted or not. Set if the related procedure is deleted via DeleteSensor operation (OGC SWES 2.0 - DeleteSensor operation)', published char(1) default 'T' not null comment 'Flag to indicate that this series is published or not. A not published series is not contained in GetObservation and GetDataAvailability responses', hiddenChild char(1) default 'F' not null comment 'TODO', firstTimeStamp timestamp comment 'The time stamp of the first (temporal) observation associated to this series', lastTimeStamp timestamp comment 'The time stamp of the last (temporal) observation associated to this series', firstNumericValue double precision comment 'The value of the first (temporal) observation associated to this series', lastNumericValue double precision comment 'The value of the last (temporal) observation associated to this series', unitId bigint comment 'Foreign Key (FK) to the related unit of the first/last numeric values . Contains "unit".unitid', primary key (seriesId)) comment='Table to store a (time-) series which consists of featureOfInterest, observableProperty, and procedure. Mapping file: mapping/series/Series.hbm.xml' ENGINE=InnoDB;
create table sos.sweDataArrayValue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value longtext comment 'SweDataArray observation value', primary key (observationId)) comment='Value table for SweDataArray observation' ENGINE=InnoDB;
create table sos.textParameterValue (parameterId bigint not null comment 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid', value varchar(255) comment 'Text parameter value', primary key (parameterId)) comment='Value table for text parameter' ENGINE=InnoDB;
create table sos.textValue (observationId bigint not null comment 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid', value longtext comment 'Text observation value', primary key (observationId)) comment='Value table for text observation' ENGINE=InnoDB;
create table sos.unit (unitId bigint not null auto_increment comment 'Table primary key, used for relations', unit varchar(255) not null comment 'The unit of measure of observations. See http://unitsofmeasure.org/ucum.html', primary key (unitId)) comment='Table to store the unit of measure information, used in observations. Mapping file: mapping/core/Unit.hbm.xml' ENGINE=InnoDB;
create table sos.validProcedureTime (validProcedureTimeId bigint not null auto_increment comment 'Table primary key', procedureId bigint not null comment 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid', procedureDescriptionFormatId bigint not null comment 'Foreign Key (FK) to the related procedureDescriptionFormat. Contains "procedureDescriptionFormat".procedureDescriptionFormatid', startTime timestamp not null comment 'Timestamp since this procedure description is valid', endTime timestamp NULL default NULL comment 'Timestamp since this procedure description is invalid', descriptionXml longtext not null comment 'Procedure description as XML string', primary key (validProcedureTimeId)) comment='Table to store procedure descriptions which were inserted or updated via the transactional Profile. Mapping file: mapping/transactionl/ValidProcedureTime.hbm.xml' ENGINE=InnoDB;
alter table sos.`procedure` add constraint procIdentifierUK unique (identifier);
create index booleanParamIdx on sos.booleanParameterValue (value);
create index categoryParamIdx on sos.categoryParameterValue (value);
alter table sos.codespace add constraint codespaceUK unique (codespace);
create index countParamIdx on sos.countParameterValue (value);
alter table sos.featureOfInterest add constraint foiIdentifierUK unique (identifier);
alter table sos.featureOfInterest add constraint featureUrl unique (url);
create spatial index featureGeomIdx on sos.featureOfInterest (geom);
alter table sos.featureOfInterestType add constraint featureTypeUK unique (featureOfInterestType);
alter table sos.i18nfeatureOfInterest add constraint i18nFeatureIdentity unique (objectId, locale);
create index i18nFeatureIdx on sos.i18nfeatureOfInterest (objectId);
alter table sos.i18nobservableProperty add constraint i18nobsPropIdentity unique (objectId, locale);
create index i18nObsPropIdx on sos.i18nobservableProperty (objectId);
alter table sos.i18noffering add constraint i18nOfferingIdentity unique (objectId, locale);
create index i18nOfferingIdx on sos.i18noffering (objectId);
alter table sos.i18nprocedure add constraint i18nProcedureIdentity unique (objectId, locale);
create index i18nProcedureIdx on sos.i18nprocedure (objectId);
create index quantityParamIdx on sos.numericParameterValue (value);
alter table sos.observableProperty add constraint obsPropIdentifierUK unique (identifier);
alter table sos.observation add constraint obsIdentifierUK unique (identifier);
create index obsSeriesIdx on sos.observation (seriesId);
create index obsPhenTimeStartIdx on sos.observation (phenomenonTimeStart);
create index obsPhenTimeEndIdx on sos.observation (phenomenonTimeEnd);
create index obsResultTimeIdx on sos.observation (resultTime);
create spatial index samplingGeomIdx on sos.observation (samplingGeometry);
alter table sos.observationConstellation add constraint obsnConstellationIdentity unique (observablePropertyId, procedureId, offeringId);
create index obsConstObsPropIdx on sos.observationConstellation (observablePropertyId);
create index obsConstProcedureIdx on sos.observationConstellation (procedureId);
create index obsConstOfferingIdx on sos.observationConstellation (offeringId);
create index obshasoffobservationidx on sos.observationHasOffering (observationId);
create index obshasoffofferingidx on sos.observationHasOffering (offeringId);
alter table sos.observationType add constraint observationTypeUK unique (observationType);
alter table sos.offering add constraint offIdentifierUK unique (identifier);
create index paramNameIdx on sos.parameter (name);
alter table sos.procedureDescriptionFormat add constraint procDescFormatUK unique (procedureDescriptionFormat);
alter table sos.relatedFeatureRole add constraint relFeatRoleUK unique (relatedFeatureRole);
create index resultTempOfferingIdx on sos.resultTemplate (offeringId);
create index resultTempeObsPropIdx on sos.resultTemplate (observablePropertyId);
create index resultTempProcedureIdx on sos.resultTemplate (procedureId);
create index resultTempIdentifierIdx on sos.resultTemplate (identifier);
alter table sos.series add constraint seriesIdentity unique (featureOfInterestId, observablePropertyId, procedureId);
create index seriesFeatureIdx on sos.series (featureOfInterestId);
create index seriesObsPropIdx on sos.series (observablePropertyId);
create index seriesProcedureIdx on sos.series (procedureId);
create index textParamIdx on sos.textParameterValue (value);
alter table sos.unit add constraint unitUK unique (unit);
create index validProcedureTimeStartTimeIdx on sos.validProcedureTime (startTime);
create index validProcedureTimeEndTimeIdx on sos.validProcedureTime (endTime);
alter table sos.`procedure` add constraint procProcDescFormatFk foreign key (procedureDescriptionFormatId) references sos.procedureDescriptionFormat (procedureDescriptionFormatId);
alter table sos.`procedure` add constraint procCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.`procedure` add constraint procCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.`procedure` add constraint typeOfFk foreign key (typeOf) references sos.`procedure` (procedureId);
alter table sos.blobValue add constraint observationBlobValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.booleanParameterValue add constraint parameterBooleanValueFk foreign key (parameterId) references sos.parameter (parameterId);
alter table sos.booleanValue add constraint observationBooleanValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.categoryParameterValue add constraint parameterCategoryValueFk foreign key (parameterId) references sos.parameter (parameterId);
alter table sos.categoryParameterValue add constraint catParamValueUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.categoryValue add constraint observationCategoryValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.complexValue add constraint observationComplexValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.compositeObservation add constraint observationChildFk foreign key (childObservationId) references sos.observation (observationId);
alter table sos.compositeObservation add constraint observationParentFK foreign key (observationId) references sos.complexValue (observationId);
alter table sos.compositePhenomenon add constraint observablePropertyChildFk foreign key (childObservablePropertyId) references sos.observableProperty (observablePropertyId);
alter table sos.compositePhenomenon add constraint observablePropertyParentFk foreign key (parentObservablePropertyId) references sos.observableProperty (observablePropertyId);
alter table sos.countParameterValue add constraint parameterCountValueFk foreign key (parameterId) references sos.parameter (parameterId);
alter table sos.countValue add constraint observationCountValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.featureOfInterest add constraint featureFeatureTypeFk foreign key (featureOfInterestTypeId) references sos.featureOfInterestType (featureOfInterestTypeId);
alter table sos.featureOfInterest add constraint featureCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.featureOfInterest add constraint featureCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.featureRelation add constraint featureOfInterestChildFk foreign key (childFeatureId) references sos.featureOfInterest (featureOfInterestId);
alter table sos.featureRelation add constraint featureOfInterestParentFk foreign key (parentFeatureId) references sos.featureOfInterest (featureOfInterestId);
alter table sos.geometryValue add constraint observationGeometryValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.i18nfeatureOfInterest add constraint i18nFeatureFeatureFk foreign key (objectId) references sos.featureOfInterest (featureOfInterestId);
alter table sos.i18nobservableProperty add constraint i18nObsPropObsPropFk foreign key (objectId) references sos.observableProperty (observablePropertyId);
alter table sos.i18noffering add constraint i18nOfferingOfferingFk foreign key (objectId) references sos.offering (offeringId);
alter table sos.i18nprocedure add constraint i18nProcedureProcedureFk foreign key (objectId) references sos.`procedure` (procedureId);
alter table sos.numericParameterValue add constraint parameterNumericValueFk foreign key (parameterId) references sos.parameter (parameterId);
alter table sos.numericParameterValue add constraint quanParamValueUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.numericValue add constraint observationNumericValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.observableProperty add constraint obsPropCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.observableProperty add constraint obsPropCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.observation add constraint observationSeriesFk foreign key (seriesId) references sos.series (seriesId);
alter table sos.observation add constraint obsCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.observation add constraint obsCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.observation add constraint observationUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.observationConstellation add constraint obsConstObsPropFk foreign key (observablePropertyId) references sos.observableProperty (observablePropertyId);
alter table sos.observationConstellation add constraint obsnConstProcedureFk foreign key (procedureId) references sos.`procedure` (procedureId);
alter table sos.observationConstellation add constraint obsConstObservationIypeFk foreign key (observationTypeId) references sos.observationType (observationTypeId);
alter table sos.observationConstellation add constraint obsConstOfferingFk foreign key (offeringId) references sos.offering (offeringId);
alter table sos.observationHasOffering add constraint observationOfferingFk foreign key (offeringId) references sos.offering (offeringId);
alter table sos.observationHasOffering add constraint FK_9ex7hawh3dbplkllmw5w3kvej foreign key (observationId) references sos.observation (observationId);
alter table sos.offering add constraint offCodespaceIdentifierFk foreign key (codespace) references sos.codespace (codespaceId);
alter table sos.offering add constraint offCodespaceNameFk foreign key (codespaceName) references sos.codespace (codespaceId);
alter table sos.offeringAllowedFeatureType add constraint offeringFeatureTypeFk foreign key (featureOfInterestTypeId) references sos.featureOfInterestType (featureOfInterestTypeId);
alter table sos.offeringAllowedFeatureType add constraint FK_6vvrdxvd406n48gkm706ow1pt foreign key (offeringId) references sos.offering (offeringId);
alter table sos.offeringAllowedObservationType add constraint offeringObservationTypeFk foreign key (observationTypeId) references sos.observationType (observationTypeId);
alter table sos.offeringAllowedObservationType add constraint FK_lkljeohulvu7cr26pduyp5bd0 foreign key (offeringId) references sos.offering (offeringId);
alter table sos.offeringHasRelatedFeature add constraint relatedFeatureOfferingFk foreign key (offeringId) references sos.offering (offeringId);
alter table sos.offeringHasRelatedFeature add constraint offeringRelatedFeatureFk foreign key (relatedFeatureId) references sos.relatedFeature (relatedFeatureId);
alter table sos.parameter add constraint FK_3v5iovcndi9w0hgh827hcvivw foreign key (observationId) references sos.observation (observationId);
alter table sos.relatedFeature add constraint relatedFeatureFeatureFk foreign key (featureOfInterestId) references sos.featureOfInterest (featureOfInterestId);
alter table sos.relatedFeatureHasRole add constraint relatedFeatRelatedFeatRoleFk foreign key (relatedFeatureRoleId) references sos.relatedFeatureRole (relatedFeatureRoleId);
alter table sos.relatedFeatureHasRole add constraint FK_6ynwkk91xe8p1uibmjt98sog3 foreign key (relatedFeatureId) references sos.relatedFeature (relatedFeatureId);
alter table sos.resultTemplate add constraint resultTemplateOfferingIdx foreign key (offeringId) references sos.offering (offeringId);
alter table sos.resultTemplate add constraint resultTemplateObsPropFk foreign key (observablePropertyId) references sos.observableProperty (observablePropertyId);
alter table sos.resultTemplate add constraint resultTemplateProcedureFk foreign key (procedureId) references sos.`procedure` (procedureId);
alter table sos.resultTemplate add constraint resultTemplateFeatureIdx foreign key (featureOfInterestId) references sos.featureOfInterest (featureOfInterestId);
alter table sos.sensorSystem add constraint procedureChildFk foreign key (childSensorId) references sos.`procedure` (procedureId);
alter table sos.sensorSystem add constraint procedureParenfFk foreign key (parentSensorId) references sos.`procedure` (procedureId);
alter table sos.series add constraint seriesFeatureFk foreign key (featureOfInterestId) references sos.featureOfInterest (featureOfInterestId);
alter table sos.series add constraint seriesObPropFk foreign key (observablePropertyId) references sos.observableProperty (observablePropertyId);
alter table sos.series add constraint seriesProcedureFk foreign key (procedureId) references sos.`procedure` (procedureId);
alter table sos.series add constraint seriesUnitFk foreign key (unitId) references sos.unit (unitId);
alter table sos.sweDataArrayValue add constraint observationSweDataArrayValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.textParameterValue add constraint parameterTextValueFk foreign key (parameterId) references sos.parameter (parameterId);
alter table sos.textValue add constraint observationTextValueFk foreign key (observationId) references sos.observation (observationId);
alter table sos.validProcedureTime add constraint validProcedureTimeProcedureFk foreign key (procedureId) references sos.`procedure` (procedureId);
alter table sos.validProcedureTime add constraint validProcProcDescFormatFk foreign key (procedureDescriptionFormatId) references sos.procedureDescriptionFormat (procedureDescriptionFormatId);
