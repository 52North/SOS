<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
    <class name="org.n52.sos.ds.hibernate.entities.values.ObservationValue" table="observation">
        <id name="observationId" type="long">
            <column name="observationId" />
            <generator class="native">
            	<param name="sequence">observationId_seq</param>
            </generator>
        </id>
         <many-to-one name="featureOfInterest" class="org.n52.sos.ds.hibernate.entities.FeatureOfInterest" fetch="select" lazy="no-proxy" foreign-key="observationFeatureFk">
           	<column index="obsFeatureIdx" name="featureOfInterestId" not-null="true" unique-key="observationIdentity" />
        </many-to-one>
        <many-to-one name="observableProperty" class="org.n52.sos.ds.hibernate.entities.ObservableProperty" fetch="select" lazy="no-proxy" foreign-key="observationObPropFk">
            <column index="obsObsPropIdx" name="observablePropertyId" not-null="true" unique-key="observationIdentity"/>
        </many-to-one>
        <many-to-one name="procedure" class="org.n52.sos.ds.hibernate.entities.Procedure" fetch="select" lazy="no-proxy" foreign-key="observationProcedureFk">
            <column index="obsProcedureIdx" name="procedureId" not-null="true" unique-key="observationIdentity" />
        </many-to-one>
         <property name="phenomenonTimeStart" type="timestamp" >
            <column index="obsPhenTimeStartIdx" name="phenomenonTimeStart" length="29" not-null="true" unique-key="observationIdentity"/>
        </property>
        <property name="phenomenonTimeEnd" type="timestamp">
            <column index="obsPhenTimeEndIdx" name="phenomenonTimeEnd" length="29" not-null="true" unique-key="observationIdentity"/>
        </property>
        <property name="resultTime" type="timestamp" >
            <column index="obsResultTimeIdx" name="resultTime" length="29" not-null="true" unique-key="observationIdentity"/>
        </property>
        <property name="identifier" type="string">
            <column name="identifier" unique="true" unique-key="obsIdentifierUK"/>
        </property>
        <many-to-one name="codespace" class="org.n52.sos.ds.hibernate.entities.Codespace" fetch="select" lazy="no-proxy" foreign-key="observationCodespaceFk">
            <column index="obsCodespaceIdx" name="codespaceId" />
        </many-to-one>
        <property name="description" type="string">
            <column name="description"/>
        </property>
        <property name="deleted" type="org.hibernate.type.TrueFalseType">
            <column name="deleted" not-null="true" default="'F'" check="deleted in ('T','F')"/>
        </property>
        <property name="validTimeStart" type="timestamp">
            <column name="validTimeStart" length="29" />
        </property>
        <property name="validTimeEnd" type="timestamp">
            <column name="validTimeEnd" length="29" />
        </property>
        <many-to-one name="unit" class="org.n52.sos.ds.hibernate.entities.Unit" fetch="select" lazy="no-proxy" foreign-key="observationUnitFk">
            <column name="unitId" not-null="false" />
        </many-to-one>
        <set name="offerings" table="observationHasOffering" inverse="false" fetch="select" lazy="true" >
            <key>
                <column name="observationId" not-null="true" index="obshasoffobservationidx" />
            </key>
            <many-to-many entity-name="org.n52.sos.ds.hibernate.entities.Offering" foreign-key="observationOfferingFk" lazy="proxy">
                <column name="offeringId" not-null="true" index="obshasoffofferingidx" />
            </many-to-many>
        </set>
         <property name="samplingGeometry" type="org.hibernate.spatial.GeometryType">
            <column name="samplingGeometry" />
        </property>
        <joined-subclass name="org.n52.sos.ds.hibernate.entities.values.ObservationBlobValue" extends="org.n52.sos.ds.hibernate.entities.values.ObservationValue" table="blobValue">
        	<key column="observationId" foreign-key="observationBlobValueFk" />
         	<property name="value" type="blob" />
        </joined-subclass>
		<joined-subclass name="org.n52.sos.ds.hibernate.entities.values.ObservationBooleanValue" extends="org.n52.sos.ds.hibernate.entities.values.ObservationValue" table="booleanValue" check="value in ('T','F')">
        	<key column="observationId" foreign-key="observationBooleanValueFk" />
        	<property name="value" type="org.hibernate.type.TrueFalseType"/>
        </joined-subclass>
		<joined-subclass name="org.n52.sos.ds.hibernate.entities.values.ObservationCategoryValue" extends="org.n52.sos.ds.hibernate.entities.values.ObservationValue" table="categoryValue">
        	<key column="observationId" foreign-key="observationCategoryValueFk" />
         	<property name="value" type="string" />
        </joined-subclass>
		<joined-subclass name="org.n52.sos.ds.hibernate.entities.values.ObservationCountValue" extends="org.n52.sos.ds.hibernate.entities.values.ObservationValue" table="countValue">
        	<key column="observationId" foreign-key="observationCountValueFk" />
        	<property name="value" type="integer" />
        </joined-subclass>
		<joined-subclass name="org.n52.sos.ds.hibernate.entities.values.ObservationGeometryValue" extends="org.n52.sos.ds.hibernate.entities.values.ObservationValue" table="geometryValue">
        	<key column="observationId" foreign-key="observationGeometryValueFk" />
         	<property name="value" type="org.hibernate.spatial.GeometryType" />
        </joined-subclass>
		<joined-subclass name="org.n52.sos.ds.hibernate.entities.values.ObservationNumericValue" extends="org.n52.sos.ds.hibernate.entities.values.ObservationValue" table="numericValue">
        	<key column="observationId" foreign-key="observationNumericValueFk" />
         	<property name="value" type="double" />
        </joined-subclass>
		<joined-subclass name="org.n52.sos.ds.hibernate.entities.values.ObservationTextValue" extends="org.n52.sos.ds.hibernate.entities.values.ObservationValue" table="textValue">
        	<key column="observationId" foreign-key="observationTextValueFk" />
        	<property name="value" type="org.hibernate.type.StringClobType" />
        </joined-subclass>
        <joined-subclass name="org.n52.sos.ds.hibernate.entities.values.ObservationSweDataArrayValue" extends="org.n52.sos.ds.hibernate.entities.values.ObservationValue" table="sweDataArrayValue">
        	<key column="observationId" foreign-key="observationSweDataArrayValueFk" />
        	<property name="value" type="org.hibernate.type.StringClobType" />
        </joined-subclass>
    </class>
</hibernate-mapping>
