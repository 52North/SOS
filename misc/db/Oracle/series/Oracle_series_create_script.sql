--
-- Copyright (C) 2012-2017 52Â°North Initiative for Geospatial Open Source
-- Software GmbH
--
-- This program is free software; you can redistribute it and/or modify it
-- under the terms of the GNU General Public License version 2 as published
-- by the Free Software Foundation.
--
-- If the program is linked with libraries which are licensed under one of
-- the following licenses, the combination of the program with the linked
-- library is not considered a "derivative work" of the program:
--
--     - Apache License, version 2.0
--     - Apache Software License, version 1.0
--     - GNU Lesser General Public License, version 3
--     - Mozilla Public License, versions 1.0, 1.1 and 2.0
--     - Common Development and Distribution License (CDDL), version 1.0
--
-- Therefore the distribution of the program linked with libraries licensed
-- under the aforementioned licenses, is permitted by the copyright holders
-- if the distribution is compliant with both the GNU General Public
-- License version 2 and the aforementioned licenses.
--
-- This program is distributed in the hope that it will be useful, but
-- WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
-- Public License for more details.
--

create table "procedure" (procedureId number(19,0) not null, hibernateDiscriminator char(1 char) not null, procedureDescriptionFormatId number(19,0) not null, identifier varchar2(255 char) not null, codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), deleted char(1 char) default 'F' not null check (deleted in ('T','F')), disabled char(1 char) default 'F' not null check (disabled in ('T','F')), descriptionFile clob, referenceFlag char(1 char) default 'F' check (referenceFlag in ('T','F')), typeOf number(19,0), isType char(1 char) default 'F' check (isType in ('T','F')), isAggregation char(1 char) default 'T' check (isAggregation in ('T','F')), primary key (procedureId));
comment on table "procedure" is 'Table to store the procedure/sensor. Mapping file: mapping/core/Procedure.hbm.xml';
comment on column "procedure".procedureId is 'Table primary key, used for relations';
comment on column "procedure".procedureDescriptionFormatId is 'Relation/foreign key to the procedureDescriptionFormat table. Describes the format of the procedure description.';
comment on column "procedure".identifier is 'The identifier of the procedure, gml:identifier. Used as parameter for queries. Unique';
comment on column "procedure".codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column "procedure".name is 'The name of the procedure, gml:name. Optional';
comment on column "procedure".codespaceName is 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional';
comment on column "procedure".description is 'Description of the procedure, gml:description. Optional';
comment on column "procedure".deleted is 'Flag to indicate that this procedure is deleted or not (OGC SWES 2.0 - DeleteSensor operation)';
comment on column "procedure".disabled is 'For later use by the SOS. Indicator if this procedure should not be provided by the SOS.';
comment on column "procedure".descriptionFile is 'Field for full (XML) encoded procedure description or link to a procedure description file. Optional';
comment on column "procedure".referenceFlag is 'Flag to indicate that this procedure is a reference procedure of another procedure. Not used by the SOS but by the Sensor Web REST-API';
comment on column "procedure".typeOf is 'Relation/foreign key to procedure table. Optional, contains procedureId if this procedure is typeOf another procedure';
comment on column "procedure".isType is 'Flag to indicate that this procedure is a type description, has no observations.';
comment on column "procedure".isAggregation is 'Flag to indicate that this procedure is an aggregation (e.g. System, PhysicalSystem).';
create table blobValue (observationId number(19,0) not null, value blob, primary key (observationId));
comment on table blobValue is 'Value table for blob observation';
comment on column blobValue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column blobValue.value is 'Blob observation value';
create table booleanParameterValue (parameterId number(19,0) not null, value char(1 char), primary key (parameterId), check (value in ('T','F')));
comment on table booleanParameterValue is 'Value table for boolean parameter';
comment on column booleanParameterValue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid';
comment on column booleanParameterValue.value is 'Boolean parameter value';
create table booleanValue (observationId number(19,0) not null, value char(1 char), primary key (observationId), check (value in ('T','F')), check (value in ('T','F')));
comment on table booleanValue is 'Value table for boolean observation';
comment on column booleanValue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column booleanValue.value is 'Boolean observation value';
create table categoryParameterValue (parameterId number(19,0) not null, value varchar2(255 char), unitId number(19,0), primary key (parameterId));
comment on table categoryParameterValue is 'Value table for category parameter';
comment on column categoryParameterValue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid';
comment on column categoryParameterValue.value is 'Category parameter value';
comment on column categoryParameterValue.unitId is 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional';
create table categoryValue (observationId number(19,0) not null, value varchar2(255 char), primary key (observationId));
comment on table categoryValue is 'Value table for category observation';
comment on column categoryValue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column categoryValue.value is 'Category observation value';
create table codespace (codespaceId number(19,0) not null, codespace varchar2(255 char) not null, primary key (codespaceId));
comment on table codespace is 'Table to store the gml:identifier and gml:name codespace information. Mapping file: mapping/core/Codespace.hbm.xml';
comment on column codespace.codespaceId is 'Table primary key, used for relations';
comment on column codespace.codespace is 'The codespace value';
create table complexValue (observationId number(19,0) not null, primary key (observationId));
comment on table complexValue is 'Value table for complex observation';
comment on column complexValue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
create table compositeObservation (observationId number(19,0) not null, childObservationId number(19,0) not null, primary key (observationId, childObservationId));
comment on table compositeObservation is 'Relation table for complex parent/child observations';
comment on column compositeObservation.observationId is 'Foreign Key (FK) to the related parent complex observation. Contains "observation".observationid';
comment on column compositeObservation.childObservationId is 'Foreign Key (FK) to the related child complex observation. Contains "observation".observationid';
create table compositePhenomenon (parentObservablePropertyId number(19,0) not null, childObservablePropertyId number(19,0) not null, primary key (childObservablePropertyId, parentObservablePropertyId));
comment on table compositePhenomenon is 'Relation table to store observableProperty hierarchies, aka compositePhenomenon. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/transactional/TObservableProperty.hbm.xml';
comment on column compositePhenomenon.parentObservablePropertyId is 'Foreign Key (FK) to the related parent observableProperty. Contains "observableProperty".observablePropertyid';
comment on column compositePhenomenon.childObservablePropertyId is 'Foreign Key (FK) to the related child observableProperty. Contains "observableProperty".observablePropertyid';
create table countParameterValue (parameterId number(19,0) not null, value number(10,0), primary key (parameterId));
comment on table countParameterValue is 'Value table for count parameter';
comment on column countParameterValue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid';
comment on column countParameterValue.value is 'Count parameter value';
create table countValue (observationId number(19,0) not null, value number(10,0), primary key (observationId));
comment on table countValue is 'Value table for count observation';
comment on column countValue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column countValue.value is 'Count observation value';
create table featureOfInterest (featureOfInterestId number(19,0) not null, featureOfInterestTypeId number(19,0) not null, identifier varchar2(255 char), codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), geom SDO_GEOMETRY, descriptionXml clob, url varchar2(255 char), primary key (featureOfInterestId));
comment on table featureOfInterest is 'Table to store the FeatureOfInterest information. Mapping file: mapping/core/FeatureOfInterest.hbm.xml';
comment on column featureOfInterest.featureOfInterestId is 'Table primary key, used for relations';
comment on column featureOfInterest.featureOfInterestTypeId is 'Relation/foreign key to the featureOfInterestType table. Describes the type of the featureOfInterest. Contains "featureOfInterestType".featureOfInterestTypeId';
comment on column featureOfInterest.identifier is 'The identifier of the featureOfInterest, gml:identifier. Used as parameter for queries. Optional but unique';
comment on column featureOfInterest.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column featureOfInterest.name is 'The name of the featureOfInterest, gml:name. Optional';
comment on column featureOfInterest.codespaceName is 'The name of the featureOfInterest, gml:name. Optional';
comment on column featureOfInterest.description is 'Description of the featureOfInterest, gml:description. Optional';
comment on column featureOfInterest.geom is 'The geometry of the featureOfInterest (composed of the ï¿½latitudeï¿½ and ï¿½longitudeï¿½) . Optional';
comment on column featureOfInterest.descriptionXml is 'XML description of the feature, used when transactional profile is supported . Optional';
comment on column featureOfInterest.url is 'Reference URL to the feature if it is stored in another service, e.g. WFS. Optional but unique';
create table featureOfInterestType (featureOfInterestTypeId number(19,0) not null, featureOfInterestType varchar2(255 char) not null, primary key (featureOfInterestTypeId));
comment on table featureOfInterestType is 'Table to store the FeatureOfInterestType information. Mapping file: mapping/core/FeatureOfInterestType.hbm.xml';
comment on column featureOfInterestType.featureOfInterestTypeId is 'Table primary key, used for relations';
comment on column featureOfInterestType.featureOfInterestType is 'The featureOfInterestType value, e.g. http://www.opengis.net/def/samplingFeatureType/OGC-OM/2.0/SF_SamplingPoint (OGC OM 2.0 specification) for point features';
create table featureRelation (parentFeatureId number(19,0) not null, childFeatureId number(19,0) not null, primary key (childFeatureId, parentFeatureId));
comment on table featureRelation is 'Relation table to store feature hierarchies. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/transactional/TFeatureOfInterest.hbm.xml';
comment on column featureRelation.parentFeatureId is 'Foreign Key (FK) to the related parent featureOfInterest. Contains "featureOfInterest".featureOfInterestid';
comment on column featureRelation.childFeatureId is 'Foreign Key (FK) to the related child featureOfInterest. Contains "featureOfInterest".featureOfInterestid';
create table geometryValue (observationId number(19,0) not null, value SDO_GEOMETRY, primary key (observationId));
comment on table geometryValue is 'Value table for geometry observation';
comment on column geometryValue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column geometryValue.value is 'Geometry observation value';
create table i18nfeatureOfInterest (id number(19,0) not null, objectId number(19,0) not null, locale varchar2(255 char) not null, name varchar2(255 char), description varchar2(255 char), primary key (id));
comment on table i18nfeatureOfInterest is 'Table to i18n metadata for the featureOfInterest. Mapping file: mapping/i18n/HibernateI18NFeatureOfInterestMetadata.hbm.xml';
comment on column i18nfeatureOfInterest.id is 'Table primary key';
comment on column i18nfeatureOfInterest.objectId is 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestid';
comment on column i18nfeatureOfInterest.locale is 'Locale/language identification, e.g. eng, ger';
comment on column i18nfeatureOfInterest.name is 'Locale/language specific name of the featureOfInterest';
comment on column i18nfeatureOfInterest.description is 'Locale/language specific description of the featureOfInterest';
create table i18nobservableProperty (id number(19,0) not null, objectId number(19,0) not null, locale varchar2(255 char) not null, name varchar2(255 char), description varchar2(255 char), primary key (id));
comment on table i18nobservableProperty is 'Table to i18n metadata for the observableProperty/phenomenon. Mapping file: mapping/i18n/HibernateI18NObservablePropertyMetadata.hbm.xml';
comment on column i18nobservableProperty.id is 'Table primary key';
comment on column i18nobservableProperty.objectId is 'Foreign Key (FK) to the related observableProperty. Contains "observableProperty".observablePropertyid';
comment on column i18nobservableProperty.locale is 'Locale/language identification, e.g. eng, ger';
comment on column i18nobservableProperty.name is 'Locale/language specific name of the observableProperty';
comment on column i18nobservableProperty.description is 'Locale/language specific description of the observableProperty';
create table i18noffering (id number(19,0) not null, objectId number(19,0) not null, locale varchar2(255 char) not null, name varchar2(255 char), description varchar2(255 char), primary key (id));
comment on table i18noffering is 'Table to i18n metadata for the offering. Mapping file: mapping/i18n/HibernateI18NOfferingMetadata.hbm.xml';
comment on column i18noffering.id is 'Table primary key';
comment on column i18noffering.objectId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
comment on column i18noffering.locale is 'Locale/language identification, e.g. eng, ger';
comment on column i18noffering.name is 'Locale/language specific name of the offering';
comment on column i18noffering.description is 'Locale/language specific description of the offering';
create table i18nprocedure (id number(19,0) not null, objectId number(19,0) not null, locale varchar2(255 char) not null, name varchar2(255 char), description varchar2(255 char), shortname varchar2(255 char), longname varchar2(255 char), primary key (id));
comment on table i18nprocedure is 'Table to i18n metadata for the procedure. Mapping file: mapping/i18n/HibernateI18NProcedureMetadata.hbm.xml';
comment on column i18nprocedure.id is 'Table primary key';
comment on column i18nprocedure.objectId is 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid';
comment on column i18nprocedure.locale is 'Locale/language identification, e.g. eng, ger';
comment on column i18nprocedure.name is 'Locale/language specific name of the procedure';
comment on column i18nprocedure.description is 'Locale/language specific description of the procedure';
comment on column i18nprocedure.shortname is 'Locale/language specific shortname of the procedure';
comment on column i18nprocedure.longname is 'Locale/language specific longname of the procedure';
create table numericParameterValue (parameterId number(19,0) not null, value float, unitId number(19,0), primary key (parameterId));
comment on table numericParameterValue is 'Value table for numeric/Measurment parameter';
comment on column numericParameterValue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid';
comment on column numericParameterValue.value is 'Numeric/Quantity parameter value';
comment on column numericParameterValue.unitId is 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional';
create table numericValue (observationId number(19,0) not null, value float, primary key (observationId));
comment on table numericValue is 'Value table for numeric/Measurment observation';
comment on column numericValue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column numericValue.value is 'Numeric/Measurment observation value';
create table observableProperty (observablePropertyId number(19,0) not null, identifier varchar2(255 char) not null, codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), disabled char(1 char) default 'F' not null check (disabled in ('T','F')), hiddenChild char(1 char) default 'F' not null check (hiddenChild in ('T','F')), primary key (observablePropertyId));
comment on table observableProperty is 'Table to store the ObservedProperty/Phenomenon information. Mapping file: mapping/core/ObservableProperty.hbm.xml';
comment on column observableProperty.observablePropertyId is 'Table primary key, used for relations';
comment on column observableProperty.identifier is 'The identifier of the observableProperty, gml:identifier. Used as parameter for queries. Unique';
comment on column observableProperty.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column observableProperty.name is 'The name of the observableProperty, gml:name. Optional';
comment on column observableProperty.codespaceName is 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional';
comment on column observableProperty.description is 'Description of the observableProperty, gml:description. Optional';
comment on column observableProperty.disabled is 'For later use by the SOS. Indicator if this observableProperty should not be provided by the SOS.';
create table observation (observationId number(19,0) not null, seriesId number(19,0) not null, phenomenonTimeStart timestamp not null, phenomenonTimeEnd timestamp not null, resultTime timestamp not null, identifier varchar2(255 char), codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), deleted char(1 char) default 'F' not null check (deleted in ('T','F')), child char(1 char) default 'F' not null check (child in ('T','F')), parent char(1 char) default 'F' not null check (parent in ('T','F')), validTimeStart timestamp default NULL, validTimeEnd timestamp default NULL, samplingGeometry SDO_GEOMETRY, unitId number(19,0), primary key (observationId));
comment on table observation is 'Stores the observations. Mapping file: mapping/series/observation/ValuedObservation.hbm.xml';
comment on column observation.observationId is 'Table primary key, used in relations';
comment on column observation.seriesId is 'Relation/foreign key to the associated series table. Contains "series".seriesId';
comment on column observation.phenomenonTimeStart is 'Time stamp when the observation was started or phenomenon was observed';
comment on column observation.phenomenonTimeEnd is 'Time stamp when the observation was stopped or phenomenon was observed';
comment on column observation.resultTime is 'Time stamp when the observation was published or result was published/available';
comment on column observation.identifier is 'The identifier of the observation, gml:identifier. Used as parameter for queries. Optional but unique';
comment on column observation.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column observation.name is 'The name of the observation, gml:name. Optional';
comment on column observation.codespaceName is 'The name of the observation, gml:name. Optional';
comment on column observation.description is 'The name of the observation, gml:name. Optional';
comment on column observation.deleted is 'Flag to indicate that this observation is deleted or not (OGC SWES 2.0 - DeleteSensor operation or not specified DeleteObservation)';
comment on column observation.child is 'Flag to indicate that this observation is a child observation for complex observation';
comment on column observation.parent is 'Flag to indicate that this observation is a parent observation for complex observation';
comment on column observation.validTimeStart is 'Start time stamp for which the observation/result is valid, e.g. used for forecasting. Optional';
comment on column observation.validTimeEnd is 'End time stamp for which the observation/result is valid, e.g. used for forecasting. Optional';
comment on column observation.samplingGeometry is 'Sampling geometry describes exactly where the measurement has taken place. Used for OGC SOS 2.0 Spatial Filtering Profile. Optional';
comment on column observation.unitId is 'Foreign Key (FK) to the related unit of measure. Contains "unit".unitid. Optional';
create table observationConstellation (observationConstellationId number(19,0) not null, observablePropertyId number(19,0) not null, procedureId number(19,0) not null, observationTypeId number(19,0), offeringId number(19,0) not null, deleted char(1 char) default 'F' not null check (deleted in ('T','F')), hiddenChild char(1 char) default 'F' not null check (hiddenChild in ('T','F')), primary key (observationConstellationId));
comment on table observationConstellation is 'Table to store the ObservationConstellation information. Contains information about the constellation of observableProperty, procedure, offering and the observationType. Mapping file: mapping/core/ObservationConstellation.hbm.xml';
comment on column observationConstellation.observationConstellationId is 'Table primary key, used for relations';
comment on column observationConstellation.observablePropertyId is 'Foreign Key (FK) to the related observableProperty. Contains "observableproperty".observablepropertyid';
comment on column observationConstellation.procedureId is 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid';
comment on column observationConstellation.observationTypeId is 'Foreign Key (FK) to the related observableProperty. Contains "observationtype".observationtypeid';
comment on column observationConstellation.offeringId is 'Foreign Key (FK) to the related observableProperty. Contains "offering".offeringid';
comment on column observationConstellation.deleted is 'Flag to indicate that this observationConstellation is deleted or not. Set if the related procedure is deleted via DeleteSensor operation (OGC SWES 2.0 - DeleteSensor operation)';
comment on column observationConstellation.hiddenChild is 'Flag to indicate that this observationConstellations procedure is a child procedure of another procedure. If true, the related procedure is not contained in OGC SOS 2.0 Capabilities but in OGC SOS 1.0.0 Capabilities.';
create table observationHasOffering (observationId number(19,0) not null, offeringId number(19,0) not null, primary key (observationId, offeringId));
comment on column observationHasOffering.observationId is 'Foreign Key (FK) to the related observation. Contains "observation".observationid';
comment on column observationHasOffering.offeringId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
create table observationType (observationTypeId number(19,0) not null, observationType varchar2(255 char) not null, primary key (observationTypeId));
comment on table observationType is 'Table to store the observationTypes. Mapping file: mapping/core/ObservationType.hbm.xml';
comment on column observationType.observationTypeId is 'Table primary key, used for relations';
comment on column observationType.observationType is 'The observationType value, e.g. http://www.opengis.net/def/observationType/OGC-OM/2.0/OM_Measurement (OGC OM 2.0 specification) for OM_Measurement';
create table offering (offeringId number(19,0) not null, hibernateDiscriminator char(1 char) not null, identifier varchar2(255 char) not null, codespace number(19,0), name varchar2(255 char), codespaceName number(19,0), description varchar2(255 char), disabled char(1 char) default 'F' not null check (disabled in ('T','F')), primary key (offeringId));
comment on table offering is 'Table to store the offering information. Mapping file: mapping/core/Offering.hbm.xml';
comment on column offering.offeringId is 'Table primary key, used for relations';
comment on column offering.identifier is 'The identifier of the offering, gml:identifier. Used as parameter for queries. Unique';
comment on column offering.codespace is 'Relation/foreign key to the codespace table. Contains the gml:identifier codespace. Optional';
comment on column offering.name is 'The name of the offering, gml:name. If available, displyed in the contents of the Capabilites. Optional';
comment on column offering.codespaceName is 'Relation/foreign key to the codespace table. Contains the gml:name codespace. Optional';
comment on column offering.description is 'Description of the offering, gml:description. Optional';
comment on column offering.disabled is 'For later use by the SOS. Indicator if this offering should not be provided by the SOS.';
create table offeringAllowedFeatureType (offeringId number(19,0) not null, featureOfInterestTypeId number(19,0) not null, primary key (offeringId, featureOfInterestTypeId));
comment on table offeringAllowedFeatureType is 'Table to store relations between offering and allowed featureOfInterestTypes, defined in InsertSensor request. Mapping file: mapping/transactional/TOffering.hbm.xml';
comment on column offeringAllowedFeatureType.offeringId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
comment on column offeringAllowedFeatureType.featureOfInterestTypeId is 'Foreign Key (FK) to the related featureOfInterestTypeId. Contains "featureOfInterestType".featureOfInterestTypeId';
create table offeringAllowedObservationType (offeringId number(19,0) not null, observationTypeId number(19,0) not null, primary key (offeringId, observationTypeId));
comment on table offeringAllowedObservationType is 'Table to store relations between offering and allowed observationTypes, defined in InsertSensor request. Mapping file: mapping/transactional/TOffering.hbm.xml';
comment on column offeringAllowedObservationType.offeringId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
comment on column offeringAllowedObservationType.observationTypeId is 'Foreign Key (FK) to the related observationType. Contains "observationType".observationTypeId';
create table offeringHasRelatedFeature (relatedFeatureId number(19,0) not null, offeringId number(19,0) not null, primary key (offeringId, relatedFeatureId));
comment on table offeringHasRelatedFeature is 'Table to store relations between offering and associated relatedFeatures. Mapping file: mapping/transactional/TOffering.hbm.xml';
comment on column offeringHasRelatedFeature.relatedFeatureId is 'Foreign Key (FK) to the related relatedFeature. Contains "relatedFeature".relatedFeatureid';
comment on column offeringHasRelatedFeature.offeringId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
create table parameter (parameterId number(19,0) not null, observationId number(19,0) not null, name varchar2(255 char) not null, primary key (parameterId));
comment on table parameter is 'Table to store additional obervation information (om:parameter). Mapping file: mapping/core/Parameter.hbm.xml';
comment on column parameter.parameterId is 'Table primary key';
comment on column parameter.observationId is 'Foreign Key (FK) to the related observation. Contains "observation".observationId';
comment on column parameter.name is 'Parameter name';
create table procedureDescriptionFormat (procedureDescriptionFormatId number(19,0) not null, procedureDescriptionFormat varchar2(255 char) not null, primary key (procedureDescriptionFormatId));
comment on table procedureDescriptionFormat is 'Table to store the ProcedureDescriptionFormat information of procedures. Mapping file: mapping/core/ProcedureDescriptionFormat.hbm.xml';
comment on column procedureDescriptionFormat.procedureDescriptionFormatId is 'Table primary key, used for relations';
comment on column procedureDescriptionFormat.procedureDescriptionFormat is 'The procedureDescriptionFormat value, e.g. http://www.opengis.net/sensorML/1.0.1 for procedures descriptions as specified in OGC SensorML 1.0.1';
create table relatedFeature (relatedFeatureId number(19,0) not null, featureOfInterestId number(19,0) not null, primary key (relatedFeatureId));
comment on table relatedFeature is 'Table to store related feature information used in the OGC SOS 2.0 Capabilities (See also OGC SWES 2.0). Mapping file: mapping/transactionl/RelatedFeature.hbm.xml';
comment on column relatedFeature.relatedFeatureId is 'Table primary key, used for relations';
comment on column relatedFeature.featureOfInterestId is 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestid';
create table relatedFeatureHasRole (relatedFeatureId number(19,0) not null, relatedFeatureRoleId number(19,0) not null, primary key (relatedFeatureId, relatedFeatureRoleId));
comment on table relatedFeatureHasRole is 'Relation table to store relatedFeatures and their associated relatedFeatureRoles. Mapping file: mapping/transactionl/RelatedFeature.hbm.xml';
comment on column relatedFeatureHasRole.relatedFeatureId is 'Foreign Key (FK) to the related relatedFeature. Contains "relatedFeature".relatedFeatureid';
comment on column relatedFeatureHasRole.relatedFeatureRoleId is 'Foreign Key (FK) to the related relatedFeatureRole. Contains "relatedFeatureRole".relatedFeatureRoleid';
create table relatedFeatureRole (relatedFeatureRoleId number(19,0) not null, relatedFeatureRole varchar2(255 char) not null, primary key (relatedFeatureRoleId));
comment on table relatedFeatureRole is 'Table to store related feature role information used in the OGC SOS 2.0 Capabilities (See also OGC SWES 2.0). Mapping file: mapping/transactionl/RelatedFeatureRole.hbm.xml';
comment on column relatedFeatureRole.relatedFeatureRoleId is 'Table primary key, used for relations';
comment on column relatedFeatureRole.relatedFeatureRole is 'The related feature role definition. See OGC SWES 2.0 specification';
create table resultTemplate (resultTemplateId number(19,0) not null, offeringId number(19,0) not null, observablePropertyId number(19,0) not null, procedureId number(19,0) not null, featureOfInterestId number(19,0) not null, identifier varchar2(255 char) not null, resultStructure clob not null, resultEncoding clob not null, primary key (resultTemplateId));
comment on table resultTemplate is 'Table to store resultTemplates (OGC SOS 2.0 result handling profile). Mapping file: mapping/transactionl/ResultTemplate.hbm.xml';
comment on column resultTemplate.resultTemplateId is 'Table primary key';
comment on column resultTemplate.offeringId is 'Foreign Key (FK) to the related offering. Contains "offering".offeringid';
comment on column resultTemplate.observablePropertyId is 'Foreign Key (FK) to the related observableProperty. Contains "observableProperty".observablePropertyId';
comment on column resultTemplate.procedureId is 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureId';
comment on column resultTemplate.featureOfInterestId is 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestid';
comment on column resultTemplate.identifier is 'The resultTemplate identifier, required for InsertResult requests.';
comment on column resultTemplate.resultStructure is 'The resultStructure as XML string. Describes the types and order of the values in a GetResultResponse/InsertResultRequest';
comment on column resultTemplate.resultEncoding is 'The resultEncoding as XML string. Describes the encoding of the values in a GetResultResponse/InsertResultRequest';
create table sensorSystem (parentSensorId number(19,0) not null, childSensorId number(19,0) not null, primary key (childSensorId, parentSensorId));
comment on table sensorSystem is 'Relation table to store procedure hierarchies. E.g. define a parent in a query and all childs are also contained in the response. Mapping file: mapping/transactional/TProcedure.hbm.xml';
comment on column sensorSystem.parentSensorId is 'Foreign Key (FK) to the related parent procedure. Contains "procedure".procedureid';
comment on column sensorSystem.childSensorId is 'Foreign Key (FK) to the related child procedure. Contains "procedure".procedureid';
create table series (seriesId number(19,0) not null, featureOfInterestId number(19,0) not null, observablePropertyId number(19,0) not null, procedureId number(19,0) not null, deleted char(1 char) default 'F' not null check (deleted in ('T','F')), published char(1 char) default 'T' not null check (published in ('T','F')), hiddenChild char(1 char) default 'F' not null check (hiddenChild in ('T','F')), firstTimeStamp timestamp, lastTimeStamp timestamp, firstNumericValue float, lastNumericValue float, unitId number(19,0), primary key (seriesId));
comment on table series is 'Table to store a (time-) series which consists of featureOfInterest, observableProperty, and procedure. Mapping file: mapping/series/Series.hbm.xml';
comment on column series.seriesId is 'Table primary key, used for relations';
comment on column series.featureOfInterestId is 'Foreign Key (FK) to the related featureOfInterest. Contains "featureOfInterest".featureOfInterestId';
comment on column series.observablePropertyId is 'Foreign Key (FK) to the related observableProperty. Contains "observableproperty".observablepropertyid';
comment on column series.procedureId is 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid';
comment on column series.deleted is 'Flag to indicate that this series is deleted or not. Set if the related procedure is deleted via DeleteSensor operation (OGC SWES 2.0 - DeleteSensor operation)';
comment on column series.published is 'Flag to indicate that this series is published or not. A not published series is not contained in GetObservation and GetDataAvailability responses';
comment on column series.hiddenChild is 'TODO';
comment on column series.firstTimeStamp is 'The time stamp of the first (temporal) observation associated to this series';
comment on column series.lastTimeStamp is 'The time stamp of the last (temporal) observation associated to this series';
comment on column series.firstNumericValue is 'The value of the first (temporal) observation associated to this series';
comment on column series.lastNumericValue is 'The value of the last (temporal) observation associated to this series';
comment on column series.unitId is 'Foreign Key (FK) to the related unit of the first/last numeric values . Contains "unit".unitid';
create table sweDataArrayValue (observationId number(19,0) not null, value clob, primary key (observationId));
comment on table sweDataArrayValue is 'Value table for SweDataArray observation';
comment on column sweDataArrayValue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column sweDataArrayValue.value is 'SweDataArray observation value';
create table textParameterValue (parameterId number(19,0) not null, value varchar2(255 char), primary key (parameterId));
comment on table textParameterValue is 'Value table for text parameter';
comment on column textParameterValue.parameterId is 'Foreign Key (FK) to the related parameter from the parameter table. Contains "parameter".parameterid';
comment on column textParameterValue.value is 'Text parameter value';
create table textValue (observationId number(19,0) not null, value clob, primary key (observationId));
comment on table textValue is 'Value table for text observation';
comment on column textValue.observationId is 'Foreign Key (FK) to the related observation from the observation table. Contains "observation".observationid';
comment on column textValue.value is 'Text observation value';
create table unit (unitId number(19,0) not null, unit varchar2(255 char) not null, primary key (unitId));
comment on table unit is 'Table to store the unit of measure information, used in observations. Mapping file: mapping/core/Unit.hbm.xml';
comment on column unit.unitId is 'Table primary key, used for relations';
comment on column unit.unit is 'The unit of measure of observations. See http://unitsofmeasure.org/ucum.html';
create table validProcedureTime (validProcedureTimeId number(19,0) not null, procedureId number(19,0) not null, procedureDescriptionFormatId number(19,0) not null, startTime timestamp not null, endTime timestamp, descriptionXml clob not null, primary key (validProcedureTimeId));
comment on table validProcedureTime is 'Table to store procedure descriptions which were inserted or updated via the transactional Profile. Mapping file: mapping/transactionl/ValidProcedureTime.hbm.xml';
comment on column validProcedureTime.validProcedureTimeId is 'Table primary key';
comment on column validProcedureTime.procedureId is 'Foreign Key (FK) to the related procedure. Contains "procedure".procedureid';
comment on column validProcedureTime.procedureDescriptionFormatId is 'Foreign Key (FK) to the related procedureDescriptionFormat. Contains "procedureDescriptionFormat".procedureDescriptionFormatid';
comment on column validProcedureTime.startTime is 'Timestamp since this procedure description is valid';
comment on column validProcedureTime.endTime is 'Timestamp since this procedure description is invalid';
comment on column validProcedureTime.descriptionXml is 'Procedure description as XML string';
alter table "procedure" add constraint procIdentifierUK unique (identifier);
create index booleanParamIdx on booleanParameterValue (value);
create index categoryParamIdx on categoryParameterValue (value);
alter table codespace add constraint codespaceUK unique (codespace);
create index countParamIdx on countParameterValue (value);
alter table featureOfInterest add constraint foiIdentifierUK unique (identifier);
alter table featureOfInterest add constraint featureUrl unique (url);
create index featureGeomIdx on featureOfInterest (geom)  INDEXTYPE IS MDSYS.SPATIAL_INDEX;
alter table featureOfInterestType add constraint featureTypeUK unique (featureOfInterestType);
alter table i18nfeatureOfInterest add constraint i18nFeatureIdentity unique (objectId, locale);
create index i18nFeatureIdx on i18nfeatureOfInterest (objectId);
alter table i18nobservableProperty add constraint i18nobsPropIdentity unique (objectId, locale);
create index i18nObsPropIdx on i18nobservableProperty (objectId);
alter table i18noffering add constraint i18nOfferingIdentity unique (objectId, locale);
create index i18nOfferingIdx on i18noffering (objectId);
alter table i18nprocedure add constraint i18nProcedureIdentity unique (objectId, locale);
create index i18nProcedureIdx on i18nprocedure (objectId);
create index quantityParamIdx on numericParameterValue (value);
alter table observableProperty add constraint obsPropIdentifierUK unique (identifier);
alter table observation add constraint obsIdentifierUK unique (identifier);
create index obsSeriesIdx on observation (seriesId);
create index obsPhenTimeStartIdx on observation (phenomenonTimeStart);
create index obsPhenTimeEndIdx on observation (phenomenonTimeEnd);
create index obsResultTimeIdx on observation (resultTime);
create index samplingGeomIdx on observation (samplingGeometry)  INDEXTYPE IS MDSYS.SPATIAL_INDEX;
alter table observationConstellation add constraint obsnConstellationIdentity unique (observablePropertyId, procedureId, offeringId);
create index obsConstObsPropIdx on observationConstellation (observablePropertyId);
create index obsConstProcedureIdx on observationConstellation (procedureId);
create index obsConstOfferingIdx on observationConstellation (offeringId);
create index obshasoffobservationidx on observationHasOffering (observationId);
create index obshasoffofferingidx on observationHasOffering (offeringId);
alter table observationType add constraint observationTypeUK unique (observationType);
alter table offering add constraint offIdentifierUK unique (identifier);
create index paramNameIdx on parameter (name);
alter table procedureDescriptionFormat add constraint procDescFormatUK unique (procedureDescriptionFormat);
alter table relatedFeatureRole add constraint relFeatRoleUK unique (relatedFeatureRole);
create index resultTempOfferingIdx on resultTemplate (offeringId);
create index resultTempeObsPropIdx on resultTemplate (observablePropertyId);
create index resultTempProcedureIdx on resultTemplate (procedureId);
create index resultTempIdentifierIdx on resultTemplate (identifier);
alter table series add constraint seriesIdentity unique (featureOfInterestId, observablePropertyId, procedureId);
create index seriesFeatureIdx on series (featureOfInterestId);
create index seriesObsPropIdx on series (observablePropertyId);
create index seriesProcedureIdx on series (procedureId);
create index textParamIdx on textParameterValue (value);
alter table unit add constraint unitUK unique (unit);
create index validProcedureTimeStartTimeIdx on validProcedureTime (startTime);
create index validProcedureTimeEndTimeIdx on validProcedureTime (endTime);
alter table "procedure" add constraint procProcDescFormatFk foreign key (procedureDescriptionFormatId) references procedureDescriptionFormat;
alter table "procedure" add constraint procCodespaceIdentifierFk foreign key (codespace) references codespace;
alter table "procedure" add constraint procCodespaceNameFk foreign key (codespaceName) references codespace;
alter table "procedure" add constraint typeOfFk foreign key (typeOf) references "procedure";
alter table blobValue add constraint observationBlobValueFk foreign key (observationId) references observation;
alter table booleanParameterValue add constraint parameterBooleanValueFk foreign key (parameterId) references parameter;
alter table booleanValue add constraint observationBooleanValueFk foreign key (observationId) references observation;
alter table categoryParameterValue add constraint parameterCategoryValueFk foreign key (parameterId) references parameter;
alter table categoryParameterValue add constraint catParamValueUnitFk foreign key (unitId) references unit;
alter table categoryValue add constraint observationCategoryValueFk foreign key (observationId) references observation;
alter table complexValue add constraint observationComplexValueFk foreign key (observationId) references observation;
alter table compositeObservation add constraint observationChildFk foreign key (childObservationId) references observation;
alter table compositeObservation add constraint observationParentFK foreign key (observationId) references complexValue;
alter table compositePhenomenon add constraint observablePropertyChildFk foreign key (childObservablePropertyId) references observableProperty;
alter table compositePhenomenon add constraint observablePropertyParentFk foreign key (parentObservablePropertyId) references observableProperty;
alter table countParameterValue add constraint parameterCountValueFk foreign key (parameterId) references parameter;
alter table countValue add constraint observationCountValueFk foreign key (observationId) references observation;
alter table featureOfInterest add constraint featureFeatureTypeFk foreign key (featureOfInterestTypeId) references featureOfInterestType;
alter table featureOfInterest add constraint featureCodespaceIdentifierFk foreign key (codespace) references codespace;
alter table featureOfInterest add constraint featureCodespaceNameFk foreign key (codespaceName) references codespace;
alter table featureRelation add constraint featureOfInterestChildFk foreign key (childFeatureId) references featureOfInterest;
alter table featureRelation add constraint featureOfInterestParentFk foreign key (parentFeatureId) references featureOfInterest;
alter table geometryValue add constraint observationGeometryValueFk foreign key (observationId) references observation;
alter table i18nfeatureOfInterest add constraint i18nFeatureFeatureFk foreign key (objectId) references featureOfInterest;
alter table i18nobservableProperty add constraint i18nObsPropObsPropFk foreign key (objectId) references observableProperty;
alter table i18noffering add constraint i18nOfferingOfferingFk foreign key (objectId) references offering;
alter table i18nprocedure add constraint i18nProcedureProcedureFk foreign key (objectId) references "procedure";
alter table numericParameterValue add constraint parameterNumericValueFk foreign key (parameterId) references parameter;
alter table numericParameterValue add constraint quanParamValueUnitFk foreign key (unitId) references unit;
alter table numericValue add constraint observationNumericValueFk foreign key (observationId) references observation;
alter table observableProperty add constraint obsPropCodespaceIdentifierFk foreign key (codespace) references codespace;
alter table observableProperty add constraint obsPropCodespaceNameFk foreign key (codespaceName) references codespace;
alter table observation add constraint observationSeriesFk foreign key (seriesId) references series;
alter table observation add constraint obsCodespaceIdentifierFk foreign key (codespace) references codespace;
alter table observation add constraint obsCodespaceNameFk foreign key (codespaceName) references codespace;
alter table observation add constraint observationUnitFk foreign key (unitId) references unit;
alter table observationConstellation add constraint obsConstObsPropFk foreign key (observablePropertyId) references observableProperty;
alter table observationConstellation add constraint obsnConstProcedureFk foreign key (procedureId) references "procedure";
alter table observationConstellation add constraint obsConstObservationIypeFk foreign key (observationTypeId) references observationType;
alter table observationConstellation add constraint obsConstOfferingFk foreign key (offeringId) references offering;
alter table observationHasOffering add constraint observationOfferingFk foreign key (offeringId) references offering;
alter table observationHasOffering add constraint FK_9ex7hawh3dbplkllmw5w3kvej foreign key (observationId) references observation;
alter table offering add constraint offCodespaceIdentifierFk foreign key (codespace) references codespace;
alter table offering add constraint offCodespaceNameFk foreign key (codespaceName) references codespace;
alter table offeringAllowedFeatureType add constraint offeringFeatureTypeFk foreign key (featureOfInterestTypeId) references featureOfInterestType;
alter table offeringAllowedFeatureType add constraint FK_6vvrdxvd406n48gkm706ow1pt foreign key (offeringId) references offering;
alter table offeringAllowedObservationType add constraint offeringObservationTypeFk foreign key (observationTypeId) references observationType;
alter table offeringAllowedObservationType add constraint FK_lkljeohulvu7cr26pduyp5bd0 foreign key (offeringId) references offering;
alter table offeringHasRelatedFeature add constraint relatedFeatureOfferingFk foreign key (offeringId) references offering;
alter table offeringHasRelatedFeature add constraint offeringRelatedFeatureFk foreign key (relatedFeatureId) references relatedFeature;
alter table parameter add constraint FK_3v5iovcndi9w0hgh827hcvivw foreign key (observationId) references observation;
alter table relatedFeature add constraint relatedFeatureFeatureFk foreign key (featureOfInterestId) references featureOfInterest;
alter table relatedFeatureHasRole add constraint relatedFeatRelatedFeatRoleFk foreign key (relatedFeatureRoleId) references relatedFeatureRole;
alter table relatedFeatureHasRole add constraint FK_6ynwkk91xe8p1uibmjt98sog3 foreign key (relatedFeatureId) references relatedFeature;
alter table resultTemplate add constraint resultTemplateOfferingIdx foreign key (offeringId) references offering;
alter table resultTemplate add constraint resultTemplateObsPropFk foreign key (observablePropertyId) references observableProperty;
alter table resultTemplate add constraint resultTemplateProcedureFk foreign key (procedureId) references "procedure";
alter table resultTemplate add constraint resultTemplateFeatureIdx foreign key (featureOfInterestId) references featureOfInterest;
alter table sensorSystem add constraint procedureChildFk foreign key (childSensorId) references "procedure";
alter table sensorSystem add constraint procedureParenfFk foreign key (parentSensorId) references "procedure";
alter table series add constraint seriesFeatureFk foreign key (featureOfInterestId) references featureOfInterest;
alter table series add constraint seriesObPropFk foreign key (observablePropertyId) references observableProperty;
alter table series add constraint seriesProcedureFk foreign key (procedureId) references "procedure";
alter table series add constraint seriesUnitFk foreign key (unitId) references unit;
alter table sweDataArrayValue add constraint observationSweDataArrayValueFk foreign key (observationId) references observation;
alter table textParameterValue add constraint parameterTextValueFk foreign key (parameterId) references parameter;
alter table textValue add constraint observationTextValueFk foreign key (observationId) references observation;
alter table validProcedureTime add constraint validProcedureTimeProcedureFk foreign key (procedureId) references "procedure";
alter table validProcedureTime add constraint validProcProcDescFormatFk foreign key (procedureDescriptionFormatId) references procedureDescriptionFormat;
create sequence codespaceId_seq;
create sequence featureOfInterestId_seq;
create sequence featureOfInterestTypeId_seq;
create sequence i18nObsPropId_seq;
create sequence i18nOfferingId_seq;
create sequence i18nProcedureId_seq;
create sequence i18nfeatureOfInterestId_seq;
create sequence observablePropertyId_seq;
create sequence observationConstellationId_seq;
create sequence observationId_seq;
create sequence observationTypeId_seq;
create sequence offeringId_seq;
create sequence parameterId_seq;
create sequence procDescFormatId_seq;
create sequence procedureId_seq;
create sequence relatedFeatureId_seq;
create sequence relatedFeatureRoleId_seq;
create sequence resultTemplateId_seq;
create sequence seriesId_seq;
create sequence unitId_seq;
create sequence validProcedureTimeId_seq;